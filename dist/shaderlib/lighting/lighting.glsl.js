"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// lighting

exports.default = "#define NUM_OF_LIGHTS 2\nuniform vec3 cameraPos;\nuniform vec3 lightsPosition[16];\nuniform vec2 lightsStrength[16];\nuniform float ambientRatio;\nuniform float diffuseRatio;\nuniform float specularRatio;\n\nfloat getLightWeight(vec4 position_worldspace, vec3 normals_worldspace) {\n  float lightWeight = 0.0;\n\n  vec3 position_worldspace_vec3 = position_worldspace.xyz / position_worldspace.w;\n  vec3 normals_worldspace_vec3 = normals_worldspace.xzy;\n\n  vec3 camera_pos_worldspace = cameraPos;\n  vec3 view_direction = normalize(camera_pos_worldspace - position_worldspace_vec3);\n\n  for (int i = 0; i < NUM_OF_LIGHTS; i++) {\n    vec3 light_position_worldspace = project_position(lightsPosition[i]);\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace_vec3);\n\n    vec3 halfway_direction = normalize(light_direction + view_direction);\n    float lambertian = dot(light_direction, normals_worldspace_vec3);\n    float specular = 0.0;\n    if (lambertian > 0.0) {\n      float specular_angle = max(dot(normals_worldspace_vec3, halfway_direction), 0.0);\n      specular = pow(specular_angle, 32.0);\n    }\n    lambertian = max(lambertian, 0.0);\n    lightWeight += (ambientRatio + lambertian * diffuseRatio + specular * specularRatio) *\n      lightsStrength[i].x;\n\n  }\n\n  return lightWeight;\n}\n";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFkZXJsaWIvbGlnaHRpbmcvbGlnaHRpbmcuZ2xzbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6ImxpZ2h0aW5nLmdsc2wuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vLyBsaWdodGluZ1xuXG5leHBvcnQgZGVmYXVsdCBgXFxcbiNkZWZpbmUgTlVNX09GX0xJR0hUUyAyXG51bmlmb3JtIHZlYzMgY2FtZXJhUG9zO1xudW5pZm9ybSB2ZWMzIGxpZ2h0c1Bvc2l0aW9uWzE2XTtcbnVuaWZvcm0gdmVjMiBsaWdodHNTdHJlbmd0aFsxNl07XG51bmlmb3JtIGZsb2F0IGFtYmllbnRSYXRpbztcbnVuaWZvcm0gZmxvYXQgZGlmZnVzZVJhdGlvO1xudW5pZm9ybSBmbG9hdCBzcGVjdWxhclJhdGlvO1xuXG5mbG9hdCBnZXRMaWdodFdlaWdodCh2ZWM0IHBvc2l0aW9uX3dvcmxkc3BhY2UsIHZlYzMgbm9ybWFsc193b3JsZHNwYWNlKSB7XG4gIGZsb2F0IGxpZ2h0V2VpZ2h0ID0gMC4wO1xuXG4gIHZlYzMgcG9zaXRpb25fd29ybGRzcGFjZV92ZWMzID0gcG9zaXRpb25fd29ybGRzcGFjZS54eXogLyBwb3NpdGlvbl93b3JsZHNwYWNlLnc7XG4gIHZlYzMgbm9ybWFsc193b3JsZHNwYWNlX3ZlYzMgPSBub3JtYWxzX3dvcmxkc3BhY2UueHp5O1xuXG4gIHZlYzMgY2FtZXJhX3Bvc193b3JsZHNwYWNlID0gY2FtZXJhUG9zO1xuICB2ZWMzIHZpZXdfZGlyZWN0aW9uID0gbm9ybWFsaXplKGNhbWVyYV9wb3Nfd29ybGRzcGFjZSAtIHBvc2l0aW9uX3dvcmxkc3BhY2VfdmVjMyk7XG5cbiAgZm9yIChpbnQgaSA9IDA7IGkgPCBOVU1fT0ZfTElHSFRTOyBpKyspIHtcbiAgICB2ZWMzIGxpZ2h0X3Bvc2l0aW9uX3dvcmxkc3BhY2UgPSBwcm9qZWN0X3Bvc2l0aW9uKGxpZ2h0c1Bvc2l0aW9uW2ldKTtcbiAgICB2ZWMzIGxpZ2h0X2RpcmVjdGlvbiA9IG5vcm1hbGl6ZShsaWdodF9wb3NpdGlvbl93b3JsZHNwYWNlIC0gcG9zaXRpb25fd29ybGRzcGFjZV92ZWMzKTtcblxuICAgIHZlYzMgaGFsZndheV9kaXJlY3Rpb24gPSBub3JtYWxpemUobGlnaHRfZGlyZWN0aW9uICsgdmlld19kaXJlY3Rpb24pO1xuICAgIGZsb2F0IGxhbWJlcnRpYW4gPSBkb3QobGlnaHRfZGlyZWN0aW9uLCBub3JtYWxzX3dvcmxkc3BhY2VfdmVjMyk7XG4gICAgZmxvYXQgc3BlY3VsYXIgPSAwLjA7XG4gICAgaWYgKGxhbWJlcnRpYW4gPiAwLjApIHtcbiAgICAgIGZsb2F0IHNwZWN1bGFyX2FuZ2xlID0gbWF4KGRvdChub3JtYWxzX3dvcmxkc3BhY2VfdmVjMywgaGFsZndheV9kaXJlY3Rpb24pLCAwLjApO1xuICAgICAgc3BlY3VsYXIgPSBwb3coc3BlY3VsYXJfYW5nbGUsIDMyLjApO1xuICAgIH1cbiAgICBsYW1iZXJ0aWFuID0gbWF4KGxhbWJlcnRpYW4sIDAuMCk7XG4gICAgbGlnaHRXZWlnaHQgKz0gKGFtYmllbnRSYXRpbyArIGxhbWJlcnRpYW4gKiBkaWZmdXNlUmF0aW8gKyBzcGVjdWxhciAqIHNwZWN1bGFyUmF0aW8pICpcbiAgICAgIGxpZ2h0c1N0cmVuZ3RoW2ldLng7XG5cbiAgfVxuXG4gIHJldHVybiBsaWdodFdlaWdodDtcbn1cbmA7XG4iXX0=