(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("luma.gl"), require("path"), require("gl-matrix"), require("assert"), require("earcut"), require("lodash.flattendeep"), require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["luma.gl", "path", "gl-matrix", "assert", "earcut", "lodash.flattendeep", "react"], factory);
	else if(typeof exports === 'object')
		exports["deck.gl"] = factory(require("luma.gl"), require("path"), require("gl-matrix"), require("assert"), require("earcut"), require("lodash.flattendeep"), require("react"));
	else
		root["deck.gl"] = factory(root["luma.gl"], root["path"], root["gl-matrix"], root["assert"], root["earcut"], root["lodash.flattendeep"], root["react"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_30__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 77);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* exports used: Model, Geometry, GL, Framebuffer, addEvents, createGLContext, glGetDebugInfo, Texture2D, loadTextures, CylinderGeometry, CubeGeometry, FramebufferObject, glContextWithState, Matrix4, glArrayFromType */
/*!**************************!*\
  !*** external "luma.gl" ***!
  \**************************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_0__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImx1bWEuZ2xcIj9lNWFiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8wX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJsdW1hLmdsXCJcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 1 */
/* unknown exports provided */
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_1__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIj81YjJhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJwYXRoXCJcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 2 */
/* exports provided: COORDINATE_SYSTEM, Layer, AttributeManager, LayerManager, count, get, values, isKeyedContainer, keys, entries */
/* exports used: COORDINATE_SYSTEM, Layer, LayerManager, AttributeManager */
/*!**************************!*\
  !*** ./src/lib/index.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__init__ = __webpack_require__(/*! ./init */ 59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(/*! ./constants */ 26);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__layer__ = __webpack_require__(/*! ./layer */ 27);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__attribute_manager__ = __webpack_require__(/*! ./attribute-manager */ 25);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__attribute_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__layer_manager__ = __webpack_require__(/*! ./layer-manager */ 60);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_4__layer_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_container__ = __webpack_require__(/*! ./utils/container */ 8);\n/* unused harmony reexport count */\n/* unused harmony reexport get */\n/* unused harmony reexport values */\n/* unused harmony reexport isKeyedContainer */\n/* unused harmony reexport keys */\n/* unused harmony reexport entries */\n// Set up deck.gl global state\n\n\n\n\n// Export core objects\n\n\n\n\n// Object iteration helper\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9saWIvaW5kZXguanM/ODE2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTZXQgdXAgZGVjay5nbCBnbG9iYWwgc3RhdGVcbmltcG9ydCAnLi9pbml0JztcblxuZXhwb3J0IHsgQ09PUkRJTkFURV9TWVNURU0gfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8vIEV4cG9ydCBjb3JlIG9iamVjdHNcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTGF5ZXIgfSBmcm9tICcuL2xheWVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQXR0cmlidXRlTWFuYWdlciB9IGZyb20gJy4vYXR0cmlidXRlLW1hbmFnZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBMYXllck1hbmFnZXIgfSBmcm9tICcuL2xheWVyLW1hbmFnZXInO1xuXG4vLyBPYmplY3QgaXRlcmF0aW9uIGhlbHBlclxuZXhwb3J0IHsgY291bnQsIGdldCwgdmFsdWVzLCBpc0tleWVkQ29udGFpbmVyLCBrZXlzLCBlbnRyaWVzIH0gZnJvbSAnLi91dGlscy9jb250YWluZXInO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/* exports provided: parseColor, Container, count, get, flatten, flattenVertices, fillArray, compareArrays, checkArray, log, compareProps, areEqualShallow, fp64ify */
/* exports used: log, flatten, Container, get, flattenVertices, fillArray, count, compareProps */
/*!********************************!*\
  !*** ./src/lib/utils/index.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__color__ = __webpack_require__(/*! ./color */ 61);\n/* unused harmony reexport parseColor */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__container__ = __webpack_require__(/*! ./container */ 8);\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__container__; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_1__container__[\"count\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_1__container__[\"get\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__flatten__ = __webpack_require__(/*! ./flatten */ 64);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__flatten__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_2__flatten__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_2__flatten__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__compare_objects__ = __webpack_require__(/*! ./compare-objects */ 63);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_3__compare_objects__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compare_arrays__ = __webpack_require__(/*! ./compare-arrays */ 62);\n/* unused harmony reexport compareArrays */\n/* unused harmony reexport checkArray */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__log__ = __webpack_require__(/*! ./log */ 65);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_5__log__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__fp64__ = __webpack_require__(/*! ./fp64 */ 6);\n/* unused harmony namespace reexport */\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9saWIvdXRpbHMvaW5kZXguanM/NGE2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBwYXJzZUNvbG9yIH0gZnJvbSAnLi9jb2xvcic7XG5pbXBvcnQgKiBhcyBDb250YWluZXIgZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IHsgQ29udGFpbmVyIH07XG5leHBvcnQgeyBjb3VudCwgZ2V0IH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IHsgZmxhdHRlbiwgZmxhdHRlblZlcnRpY2VzLCBmaWxsQXJyYXkgfSBmcm9tICcuL2ZsYXR0ZW4nO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wYXJlLW9iamVjdHMnO1xuZXhwb3J0IHsgY29tcGFyZUFycmF5cywgY2hlY2tBcnJheSB9IGZyb20gJy4vY29tcGFyZS1hcnJheXMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBsb2cgfSBmcm9tICcuL2xvZyc7XG5leHBvcnQgKiBmcm9tICcuL2ZwNjQnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi91dGlscy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 4 */
/* exports provided: checkRendererVendor, getPlatformShaderDefines, assembleShaders, fp64, project, project64, updateSettings, lighting */
/* exports used: assembleShaders, lighting */
/*!***********************************!*\
  !*** ./src/shader-utils/index.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assemble_shaders__ = __webpack_require__(/*! ./assemble-shaders */ 71);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__assemble_shaders__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_chunks__ = __webpack_require__(/*! ./shader-chunks */ 28);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__shader_chunks__[\"lighting\"]; });\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zaGFkZXItdXRpbHMvaW5kZXguanM/NDRiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2Fzc2VtYmxlLXNoYWRlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9zaGFkZXItY2h1bmtzJztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zaGFkZXItdXRpbHMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 5 */
/* unknown exports provided */
/* exports used: vec2, mat4, vec4, vec3 */
/*!****************************!*\
  !*** external "gl-matrix" ***!
  \****************************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_5__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImdsLW1hdHJpeFwiP2I5NWQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzVfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImdsLW1hdHJpeFwiXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 6 */
/* exports provided: fp64ify */
/* exports used: fp64ify */
/*!*******************************!*\
  !*** ./src/lib/utils/fp64.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = fp64ify;\n// TODO - move to shaderlib utilities\nfunction fp64ify(a) {\n  var hiPart = Math.fround(a);\n  var loPart = a - Math.fround(a);\n  return [hiPart, loPart];\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9saWIvdXRpbHMvZnA2NC5qcz9lZDg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8gLSBtb3ZlIHRvIHNoYWRlcmxpYiB1dGlsaXRpZXNcbmV4cG9ydCBmdW5jdGlvbiBmcDY0aWZ5KGEpIHtcbiAgdmFyIGhpUGFydCA9IE1hdGguZnJvdW5kKGEpO1xuICB2YXIgbG9QYXJ0ID0gYSAtIE1hdGguZnJvdW5kKGEpO1xuICByZXR1cm4gW2hpUGFydCwgbG9QYXJ0XTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9saWIvdXRpbHMvZnA2NC5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 7 */
/* unknown exports provided */
/* exports used: default */
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_7__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImFzc2VydFwiPzFlNDEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzdfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImFzc2VydFwiXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 8 */
/* exports provided: isObject, isPlainObject, isContainer, count, values, isKeyedContainer, keys, entries, get, forEach, map, reduce, toJS */
/* all exports used */
/*!************************************!*\
  !*** ./src/lib/utils/container.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"isObject\"] = isObject;\n/* harmony export (immutable) */ __webpack_exports__[\"isPlainObject\"] = isPlainObject;\n/* harmony export (immutable) */ __webpack_exports__[\"isContainer\"] = isContainer;\n/* harmony export (immutable) */ __webpack_exports__[\"count\"] = count;\n/* harmony export (immutable) */ __webpack_exports__[\"values\"] = values;\n/* harmony export (immutable) */ __webpack_exports__[\"isKeyedContainer\"] = isKeyedContainer;\n/* harmony export (immutable) */ __webpack_exports__[\"keys\"] = keys;\n/* harmony export (immutable) */ __webpack_exports__[\"entries\"] = entries;\n/* harmony export (immutable) */ __webpack_exports__[\"get\"] = get;\n/* harmony export (immutable) */ __webpack_exports__[\"forEach\"] = forEach;\n/* harmony export (immutable) */ __webpack_exports__[\"map\"] = map;\n/* harmony export (immutable) */ __webpack_exports__[\"reduce\"] = reduce;\n/* harmony export (immutable) */ __webpack_exports__[\"toJS\"] = toJS;\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// ES6 includes iteration and iterable protocols, and new standard containers\n// Influential libraries like Immutable.js provide useful containers that\n// adopt these conventions.\n//\n// So, is it possible to write generic JavaScript code that works with any\n// well-written container class? And is it possible to write generic container\n// classes that work with any well-written code.\n//\n// Almost. But it is not trivial. Importantly the standard JavaScript `Object`s\n// lack even basic iteration support and even standard JavaScript `Array`s\n// differ in minor but important aspects from the new classes.\n//\n// The bad news is that it does not appear that these things are going to be\n// solved soon, even in an actively evolving language like JavaScript. The\n// reason is concerns.\n//\n// The good news is that it is not overly hard to \"paper over\" the differences\n// with a set of small efficient functions. And voila, container.js.\n//\n// Different types of containers provide different types of access.\n// A random access container\n// A keyed container\n\nvar ERR_NOT_CONTAINER = 'Expected a container';\nvar ERR_NOT_KEYED_CONTAINER = 'Expected a \"keyed\" container';\n\n/**\n * Checks if argument is an indexable object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nfunction isObject(value) {\n  return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Checks if argument is a plain object (not a class or array etc)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a plain JavaScript object\n */\nfunction isPlainObject(value) {\n  return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.constructor === Object;\n}\n\nfunction isContainer(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) || isObject(value);\n}\n\n/**\n * Deduces numer of elements in a JavaScript container.\n * - Auto-deduction for ES6 containers that define a count() method\n * - Auto-deduction for ES6 containers that define a size member\n * - Auto-deduction for Classic Arrays via the built-in length attribute\n * - Also handles objects, although note that this an O(N) operation\n */\nfunction count(container) {\n  // Check if ES6 collection \"count\" function is available\n  if (typeof container.count === 'function') {\n    return container.count();\n  }\n\n  // Check if ES6 collection \"size\" attribute is set\n  if (Number.isFinite(container.size)) {\n    return container.size;\n  }\n\n  // Check if array length attribute is set\n  // Note: checking this last since some ES6 collections (Immutable.js)\n  // emit profuse warnings when trying to access `length` attribute\n  if (Number.isFinite(container.length)) {\n    return container.length;\n  }\n\n  // Note that getting the count of an object is O(N)\n  if (isPlainObject(container)) {\n    var counter = 0;\n    for (var key in container) {\n      // eslint-disable-line\n      counter++;\n    }\n    return counter;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n// Returns an iterator over all **values** of a container\n//\n// Note: Keyed containers are expected to provide an `values()` method,\n// with the exception of plain objects which get special handling\n\nfunction values(container) {\n  // HACK - Needed to make buble compiler work\n  if (Array.isArray(container)) {\n    return container;\n  }\n\n  var prototype = Object.getPrototypeOf(container);\n  if (typeof prototype.values === 'function') {\n    return container.values();\n  }\n\n  if (typeof container.constructor.values === 'function') {\n    return container.constructor.values(container);\n  }\n\n  var iterator = container[Symbol.iterator];\n  if (iterator) {\n    return container;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n// /////////////////////////////////////////////////////////\n// KEYED CONTAINERS\n// Examples: objects, Map, Immutable.Map, ...\n\nfunction isKeyedContainer(container) {\n  if (Array.isArray(container)) {\n    return false;\n  }\n  var prototype = Object.getPrototypeOf(container);\n  // HACK to classify Immutable.List as non keyed container\n  if (typeof prototype.shift === 'function') {\n    return false;\n  }\n  var hasKeyedMethods = typeof prototype.get === 'function';\n  return hasKeyedMethods || isPlainObject(container);\n}\n\n// Returns an iterator over all **entries** of a \"keyed container\"\n// Keyed containers are expected to provide a `keys()` method,\n// with the exception of plain objects.\n//\nfunction keys(keyedContainer) {\n  var prototype = Object.getPrototypeOf(keyedContainer);\n  if (typeof prototype.keys === 'function') {\n    return keyedContainer.keys();\n  }\n\n  if (typeof keyedContainer.constructor.keys === 'function') {\n    return keyedContainer.constructor.keys(keyedContainer);\n  }\n\n  throw new Error(ERR_NOT_KEYED_CONTAINER);\n}\n\n// Returns an iterator over all **entries** of a \"keyed container\"\n//\n// Keyed containers are expected to provide an `entries()` method,\n// with the exception of plain objects.\n//\nfunction entries(keyedContainer) {\n  var prototype = Object.getPrototypeOf(keyedContainer);\n  if (typeof prototype.entries === 'function') {\n    return keyedContainer.entries();\n  }\n\n  // if (typeof prototype.constructor.entries === 'function') {\n  //   return prototype.constructor.entries(keyedContainer);\n  // }\n\n  if (typeof keyedContainer.constructor.entries === 'function') {\n    return keyedContainer.constructor.entries(keyedContainer);\n  }\n\n  return null;\n}\n\n/**\n * Access properties of nested containers using dot-path notation\n * - Supports plain objects and arrays, as well as classes with `get` methods\n *   such as ES6 Maps, Immutable.js objects etc\n * - Returns undefined if any container is not valid, instead of throwing\n *\n * @param {Object} container - container that supports get\n * @param {String|*} compositeKey - key to access, can be '.'-separated string\n * @return {*} - value in the final key of the nested container\n */\nfunction get(container, compositeKey) {\n  // Split the key into subkeys\n  var keyList = getKeys(compositeKey);\n  // Recursively get the value of each key;\n  var value = container;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = keyList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n\n      // If any intermediate subfield is not a container, return undefined\n      if (!isObject(value)) {\n        return undefined;\n      }\n      // Get the `getter` for this container\n      var getter = getGetter(value);\n      // Use the getter to get the value for the key\n      value = getter(value, key);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return value;\n}\n\n// Default getter is container indexing\nvar squareBracketGetter = function squareBracketGetter(container, key) {\n  return container[key];\n};\nvar getMethodGetter = function getMethodGetter(obj, key) {\n  return obj.get(key);\n};\n// Cache key to key arrays for speed\nvar keyMap = {};\n\n// Looks for a `get` function on the prototype\n// TODO - follow prototype chain?\n// @private\n// @return {Function} - get function: (container, key) => value\nfunction getGetter(container) {\n  // Check if container has a special get method\n  var prototype = Object.getPrototypeOf(container);\n  return prototype.get ? getMethodGetter : squareBracketGetter;\n}\n\n// Takes a string of '.' separated keys and returns an array of keys\n// E.g. 'feature.geometry.type' => 'feature', 'geometry', 'type'\n// @private\nfunction getKeys(compositeKey) {\n  if (typeof compositeKey === 'string') {\n    // else assume string and split around dots\n    var keyList = keyMap[compositeKey];\n    if (!keyList) {\n      keyList = compositeKey.split('.');\n      keyMap[compositeKey] = keyList;\n    }\n    return keyList;\n  }\n  // Wrap in array if needed\n  return Array.isArray(compositeKey) ? compositeKey : [compositeKey];\n}\n\n// \"Generic\" forEach that first attempts to call a\nfunction forEach(container, visitor) {\n  // Hack to work around limitations in buble compiler\n  var prototype = Object.getPrototypeOf(container);\n  if (prototype.forEach) {\n    container.forEach(visitor);\n    return;\n  }\n\n  var isKeyed = isKeyedContainer(container);\n  if (isKeyed) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = entries(container)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            key = _step2$value[0],\n            value = _step2$value[1];\n\n        visitor(value, key, container);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return;\n  }\n\n  var index = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = values(container)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var element = _step3.value;\n\n      // result[index] = visitor(element, index, container);\n      visitor(element, index, container);\n      index++;\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\nfunction map(container, visitor) {\n  // Hack to work around limitations in buble compiler\n  var prototype = Object.getPrototypeOf(container);\n  if (prototype.forEach) {\n    var _ret = function () {\n      var result = [];\n      container.forEach(function (x, i, e) {\n        return result.push(visitor(x, i, e));\n      });\n      return {\n        v: result\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  var isKeyed = isKeyedContainer(container);\n  // const result = new Array(count(container));\n  var result = [];\n  if (isKeyed) {\n    // TODO - should this create an object?\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = entries(container)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var _step4$value = _slicedToArray(_step4.value, 2),\n            key = _step4$value[0],\n            value = _step4$value[1];\n\n        // result[index] = visitor(element, index, container);\n        result.push(visitor(value, key, container));\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  } else {\n    var index = 0;\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      for (var _iterator5 = values(container)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        var element = _step5.value;\n\n        // result[index] = visitor(element, index, container);\n        result.push(visitor(element, index, container));\n        index++;\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n          _iterator5.return();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction reduce(container, visitor) {\n  // Hack to work around limitations in buble compiler\n  var prototype = Object.getPrototypeOf(container);\n  if (prototype.forEach) {\n    var _ret2 = function () {\n      var result = [];\n      container.forEach(function (x, i, e) {\n        return result.push(visitor(x, i, e));\n      });\n      return {\n        v: result\n      };\n    }();\n\n    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n  }\n\n  var isKeyed = isKeyedContainer(container);\n  // const result = new Array(count(container));\n  var result = [];\n  if (isKeyed) {\n    // TODO - should this create an object?\n    var _iteratorNormalCompletion6 = true;\n    var _didIteratorError6 = false;\n    var _iteratorError6 = undefined;\n\n    try {\n      for (var _iterator6 = entries(container)[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n        var _step6$value = _slicedToArray(_step6.value, 2),\n            key = _step6$value[0],\n            value = _step6$value[1];\n\n        // result[index] = visitor(element, index, container);\n        result.push(visitor(value, key, container));\n      }\n    } catch (err) {\n      _didIteratorError6 = true;\n      _iteratorError6 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion6 && _iterator6.return) {\n          _iterator6.return();\n        }\n      } finally {\n        if (_didIteratorError6) {\n          throw _iteratorError6;\n        }\n      }\n    }\n  } else {\n    var index = 0;\n    var _iteratorNormalCompletion7 = true;\n    var _didIteratorError7 = false;\n    var _iteratorError7 = undefined;\n\n    try {\n      for (var _iterator7 = values(container)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n        var element = _step7.value;\n\n        // result[index] = visitor(element, index, container);\n        result.push(visitor(element, index, container));\n        index++;\n      }\n    } catch (err) {\n      _didIteratorError7 = true;\n      _iteratorError7 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion7 && _iterator7.return) {\n          _iterator7.return();\n        }\n      } finally {\n        if (_didIteratorError7) {\n          throw _iteratorError7;\n        }\n      }\n    }\n  }\n  return result;\n}\n\n// Attempt to create a simple (array, plain object) representation of\n// a nested structure of ES6 iterable classes.\n// Assumption is that if an entries() method is available, the iterable object\n// should be represented as an object, if not as an array.\nfunction toJS(container) {\n  if (!isObject(container)) {\n    return container;\n  }\n\n  if (isKeyedContainer(container)) {\n    var _result = {};\n    var _iteratorNormalCompletion8 = true;\n    var _didIteratorError8 = false;\n    var _iteratorError8 = undefined;\n\n    try {\n      for (var _iterator8 = entries(container)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n        var _step8$value = _slicedToArray(_step8.value, 2),\n            key = _step8$value[0],\n            value = _step8$value[1];\n\n        _result[key] = toJS(value);\n      }\n    } catch (err) {\n      _didIteratorError8 = true;\n      _iteratorError8 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion8 && _iterator8.return) {\n          _iterator8.return();\n        }\n      } finally {\n        if (_didIteratorError8) {\n          throw _iteratorError8;\n        }\n      }\n    }\n\n    return _result;\n  }\n\n  var result = [];\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = values(container)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var value = _step9.value;\n\n      result.push(toJS(value));\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  return result;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9saWIvdXRpbHMvY29udGFpbmVyLmpzPzMyNzAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbi8vIEVTNiBpbmNsdWRlcyBpdGVyYXRpb24gYW5kIGl0ZXJhYmxlIHByb3RvY29scywgYW5kIG5ldyBzdGFuZGFyZCBjb250YWluZXJzXG4vLyBJbmZsdWVudGlhbCBsaWJyYXJpZXMgbGlrZSBJbW11dGFibGUuanMgcHJvdmlkZSB1c2VmdWwgY29udGFpbmVycyB0aGF0XG4vLyBhZG9wdCB0aGVzZSBjb252ZW50aW9ucy5cbi8vXG4vLyBTbywgaXMgaXQgcG9zc2libGUgdG8gd3JpdGUgZ2VuZXJpYyBKYXZhU2NyaXB0IGNvZGUgdGhhdCB3b3JrcyB3aXRoIGFueVxuLy8gd2VsbC13cml0dGVuIGNvbnRhaW5lciBjbGFzcz8gQW5kIGlzIGl0IHBvc3NpYmxlIHRvIHdyaXRlIGdlbmVyaWMgY29udGFpbmVyXG4vLyBjbGFzc2VzIHRoYXQgd29yayB3aXRoIGFueSB3ZWxsLXdyaXR0ZW4gY29kZS5cbi8vXG4vLyBBbG1vc3QuIEJ1dCBpdCBpcyBub3QgdHJpdmlhbC4gSW1wb3J0YW50bHkgdGhlIHN0YW5kYXJkIEphdmFTY3JpcHQgYE9iamVjdGBzXG4vLyBsYWNrIGV2ZW4gYmFzaWMgaXRlcmF0aW9uIHN1cHBvcnQgYW5kIGV2ZW4gc3RhbmRhcmQgSmF2YVNjcmlwdCBgQXJyYXlgc1xuLy8gZGlmZmVyIGluIG1pbm9yIGJ1dCBpbXBvcnRhbnQgYXNwZWN0cyBmcm9tIHRoZSBuZXcgY2xhc3Nlcy5cbi8vXG4vLyBUaGUgYmFkIG5ld3MgaXMgdGhhdCBpdCBkb2VzIG5vdCBhcHBlYXIgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIGdvaW5nIHRvIGJlXG4vLyBzb2x2ZWQgc29vbiwgZXZlbiBpbiBhbiBhY3RpdmVseSBldm9sdmluZyBsYW5ndWFnZSBsaWtlIEphdmFTY3JpcHQuIFRoZVxuLy8gcmVhc29uIGlzIGNvbmNlcm5zLlxuLy9cbi8vIFRoZSBnb29kIG5ld3MgaXMgdGhhdCBpdCBpcyBub3Qgb3Zlcmx5IGhhcmQgdG8gXCJwYXBlciBvdmVyXCIgdGhlIGRpZmZlcmVuY2VzXG4vLyB3aXRoIGEgc2V0IG9mIHNtYWxsIGVmZmljaWVudCBmdW5jdGlvbnMuIEFuZCB2b2lsYSwgY29udGFpbmVyLmpzLlxuLy9cbi8vIERpZmZlcmVudCB0eXBlcyBvZiBjb250YWluZXJzIHByb3ZpZGUgZGlmZmVyZW50IHR5cGVzIG9mIGFjY2Vzcy5cbi8vIEEgcmFuZG9tIGFjY2VzcyBjb250YWluZXJcbi8vIEEga2V5ZWQgY29udGFpbmVyXG5cbnZhciBFUlJfTk9UX0NPTlRBSU5FUiA9ICdFeHBlY3RlZCBhIGNvbnRhaW5lcic7XG52YXIgRVJSX05PVF9LRVlFRF9DT05UQUlORVIgPSAnRXhwZWN0ZWQgYSBcImtleWVkXCIgY29udGFpbmVyJztcblxuLyoqXG4gKiBDaGVja3MgaWYgYXJndW1lbnQgaXMgYW4gaW5kZXhhYmxlIG9iamVjdCAobm90IGEgcHJpbWl0aXZlIHZhbHVlLCBub3IgbnVsbClcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgLSBKYXZhU2NyaXB0IHZhbHVlIHRvIGJlIHRlc3RlZFxuICogQHJldHVybiB7Qm9vbGVhbn0gLSB0cnVlIGlmIGFyZ3VtZW50IGlzIGEgSmF2YVNjcmlwdCBvYmplY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPT0gbnVsbCAmJiAodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih2YWx1ZSkpID09PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYXJndW1lbnQgaXMgYSBwbGFpbiBvYmplY3QgKG5vdCBhIGNsYXNzIG9yIGFycmF5IGV0YylcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgLSBKYXZhU2NyaXB0IHZhbHVlIHRvIGJlIHRlc3RlZFxuICogQHJldHVybiB7Qm9vbGVhbn0gLSB0cnVlIGlmIGFyZ3VtZW50IGlzIGEgcGxhaW4gSmF2YVNjcmlwdCBvYmplY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHZhbHVlKSkgPT09ICdvYmplY3QnICYmIHZhbHVlLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbnRhaW5lcih2YWx1ZSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KHZhbHVlKSB8fCBpc09iamVjdCh2YWx1ZSk7XG59XG5cbi8qKlxuICogRGVkdWNlcyBudW1lciBvZiBlbGVtZW50cyBpbiBhIEphdmFTY3JpcHQgY29udGFpbmVyLlxuICogLSBBdXRvLWRlZHVjdGlvbiBmb3IgRVM2IGNvbnRhaW5lcnMgdGhhdCBkZWZpbmUgYSBjb3VudCgpIG1ldGhvZFxuICogLSBBdXRvLWRlZHVjdGlvbiBmb3IgRVM2IGNvbnRhaW5lcnMgdGhhdCBkZWZpbmUgYSBzaXplIG1lbWJlclxuICogLSBBdXRvLWRlZHVjdGlvbiBmb3IgQ2xhc3NpYyBBcnJheXMgdmlhIHRoZSBidWlsdC1pbiBsZW5ndGggYXR0cmlidXRlXG4gKiAtIEFsc28gaGFuZGxlcyBvYmplY3RzLCBhbHRob3VnaCBub3RlIHRoYXQgdGhpcyBhbiBPKE4pIG9wZXJhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY291bnQoY29udGFpbmVyKSB7XG4gIC8vIENoZWNrIGlmIEVTNiBjb2xsZWN0aW9uIFwiY291bnRcIiBmdW5jdGlvbiBpcyBhdmFpbGFibGVcbiAgaWYgKHR5cGVvZiBjb250YWluZXIuY291bnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gY29udGFpbmVyLmNvdW50KCk7XG4gIH1cblxuICAvLyBDaGVjayBpZiBFUzYgY29sbGVjdGlvbiBcInNpemVcIiBhdHRyaWJ1dGUgaXMgc2V0XG4gIGlmIChOdW1iZXIuaXNGaW5pdGUoY29udGFpbmVyLnNpemUpKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5lci5zaXplO1xuICB9XG5cbiAgLy8gQ2hlY2sgaWYgYXJyYXkgbGVuZ3RoIGF0dHJpYnV0ZSBpcyBzZXRcbiAgLy8gTm90ZTogY2hlY2tpbmcgdGhpcyBsYXN0IHNpbmNlIHNvbWUgRVM2IGNvbGxlY3Rpb25zIChJbW11dGFibGUuanMpXG4gIC8vIGVtaXQgcHJvZnVzZSB3YXJuaW5ncyB3aGVuIHRyeWluZyB0byBhY2Nlc3MgYGxlbmd0aGAgYXR0cmlidXRlXG4gIGlmIChOdW1iZXIuaXNGaW5pdGUoY29udGFpbmVyLmxlbmd0aCkpIHtcbiAgICByZXR1cm4gY29udGFpbmVyLmxlbmd0aDtcbiAgfVxuXG4gIC8vIE5vdGUgdGhhdCBnZXR0aW5nIHRoZSBjb3VudCBvZiBhbiBvYmplY3QgaXMgTyhOKVxuICBpZiAoaXNQbGFpbk9iamVjdChjb250YWluZXIpKSB7XG4gICAgdmFyIGNvdW50ZXIgPSAwO1xuICAgIGZvciAodmFyIGtleSBpbiBjb250YWluZXIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgIGNvdW50ZXIrKztcbiAgICB9XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoRVJSX05PVF9DT05UQUlORVIpO1xufVxuXG4vLyBSZXR1cm5zIGFuIGl0ZXJhdG9yIG92ZXIgYWxsICoqdmFsdWVzKiogb2YgYSBjb250YWluZXJcbi8vXG4vLyBOb3RlOiBLZXllZCBjb250YWluZXJzIGFyZSBleHBlY3RlZCB0byBwcm92aWRlIGFuIGB2YWx1ZXMoKWAgbWV0aG9kLFxuLy8gd2l0aCB0aGUgZXhjZXB0aW9uIG9mIHBsYWluIG9iamVjdHMgd2hpY2ggZ2V0IHNwZWNpYWwgaGFuZGxpbmdcblxuZXhwb3J0IGZ1bmN0aW9uIHZhbHVlcyhjb250YWluZXIpIHtcbiAgLy8gSEFDSyAtIE5lZWRlZCB0byBtYWtlIGJ1YmxlIGNvbXBpbGVyIHdvcmtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY29udGFpbmVyKSkge1xuICAgIHJldHVybiBjb250YWluZXI7XG4gIH1cblxuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGNvbnRhaW5lcik7XG4gIGlmICh0eXBlb2YgcHJvdG90eXBlLnZhbHVlcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBjb250YWluZXIudmFsdWVzKCk7XG4gIH1cblxuICBpZiAodHlwZW9mIGNvbnRhaW5lci5jb25zdHJ1Y3Rvci52YWx1ZXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gY29udGFpbmVyLmNvbnN0cnVjdG9yLnZhbHVlcyhjb250YWluZXIpO1xuICB9XG5cbiAgdmFyIGl0ZXJhdG9yID0gY29udGFpbmVyW1N5bWJvbC5pdGVyYXRvcl07XG4gIGlmIChpdGVyYXRvcikge1xuICAgIHJldHVybiBjb250YWluZXI7XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoRVJSX05PVF9DT05UQUlORVIpO1xufVxuXG4vLyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEtFWUVEIENPTlRBSU5FUlNcbi8vIEV4YW1wbGVzOiBvYmplY3RzLCBNYXAsIEltbXV0YWJsZS5NYXAsIC4uLlxuXG5leHBvcnQgZnVuY3Rpb24gaXNLZXllZENvbnRhaW5lcihjb250YWluZXIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY29udGFpbmVyKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGNvbnRhaW5lcik7XG4gIC8vIEhBQ0sgdG8gY2xhc3NpZnkgSW1tdXRhYmxlLkxpc3QgYXMgbm9uIGtleWVkIGNvbnRhaW5lclxuICBpZiAodHlwZW9mIHByb3RvdHlwZS5zaGlmdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgaGFzS2V5ZWRNZXRob2RzID0gdHlwZW9mIHByb3RvdHlwZS5nZXQgPT09ICdmdW5jdGlvbic7XG4gIHJldHVybiBoYXNLZXllZE1ldGhvZHMgfHwgaXNQbGFpbk9iamVjdChjb250YWluZXIpO1xufVxuXG4vLyBSZXR1cm5zIGFuIGl0ZXJhdG9yIG92ZXIgYWxsICoqZW50cmllcyoqIG9mIGEgXCJrZXllZCBjb250YWluZXJcIlxuLy8gS2V5ZWQgY29udGFpbmVycyBhcmUgZXhwZWN0ZWQgdG8gcHJvdmlkZSBhIGBrZXlzKClgIG1ldGhvZCxcbi8vIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBwbGFpbiBvYmplY3RzLlxuLy9cbmV4cG9ydCBmdW5jdGlvbiBrZXlzKGtleWVkQ29udGFpbmVyKSB7XG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yoa2V5ZWRDb250YWluZXIpO1xuICBpZiAodHlwZW9mIHByb3RvdHlwZS5rZXlzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGtleWVkQ29udGFpbmVyLmtleXMoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2Yga2V5ZWRDb250YWluZXIuY29uc3RydWN0b3Iua2V5cyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBrZXllZENvbnRhaW5lci5jb25zdHJ1Y3Rvci5rZXlzKGtleWVkQ29udGFpbmVyKTtcbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcihFUlJfTk9UX0tFWUVEX0NPTlRBSU5FUik7XG59XG5cbi8vIFJldHVybnMgYW4gaXRlcmF0b3Igb3ZlciBhbGwgKiplbnRyaWVzKiogb2YgYSBcImtleWVkIGNvbnRhaW5lclwiXG4vL1xuLy8gS2V5ZWQgY29udGFpbmVycyBhcmUgZXhwZWN0ZWQgdG8gcHJvdmlkZSBhbiBgZW50cmllcygpYCBtZXRob2QsXG4vLyB3aXRoIHRoZSBleGNlcHRpb24gb2YgcGxhaW4gb2JqZWN0cy5cbi8vXG5leHBvcnQgZnVuY3Rpb24gZW50cmllcyhrZXllZENvbnRhaW5lcikge1xuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGtleWVkQ29udGFpbmVyKTtcbiAgaWYgKHR5cGVvZiBwcm90b3R5cGUuZW50cmllcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBrZXllZENvbnRhaW5lci5lbnRyaWVzKCk7XG4gIH1cblxuICAvLyBpZiAodHlwZW9mIHByb3RvdHlwZS5jb25zdHJ1Y3Rvci5lbnRyaWVzID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vICAgcmV0dXJuIHByb3RvdHlwZS5jb25zdHJ1Y3Rvci5lbnRyaWVzKGtleWVkQ29udGFpbmVyKTtcbiAgLy8gfVxuXG4gIGlmICh0eXBlb2Yga2V5ZWRDb250YWluZXIuY29uc3RydWN0b3IuZW50cmllcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBrZXllZENvbnRhaW5lci5jb25zdHJ1Y3Rvci5lbnRyaWVzKGtleWVkQ29udGFpbmVyKTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG4vKipcbiAqIEFjY2VzcyBwcm9wZXJ0aWVzIG9mIG5lc3RlZCBjb250YWluZXJzIHVzaW5nIGRvdC1wYXRoIG5vdGF0aW9uXG4gKiAtIFN1cHBvcnRzIHBsYWluIG9iamVjdHMgYW5kIGFycmF5cywgYXMgd2VsbCBhcyBjbGFzc2VzIHdpdGggYGdldGAgbWV0aG9kc1xuICogICBzdWNoIGFzIEVTNiBNYXBzLCBJbW11dGFibGUuanMgb2JqZWN0cyBldGNcbiAqIC0gUmV0dXJucyB1bmRlZmluZWQgaWYgYW55IGNvbnRhaW5lciBpcyBub3QgdmFsaWQsIGluc3RlYWQgb2YgdGhyb3dpbmdcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29udGFpbmVyIC0gY29udGFpbmVyIHRoYXQgc3VwcG9ydHMgZ2V0XG4gKiBAcGFyYW0ge1N0cmluZ3wqfSBjb21wb3NpdGVLZXkgLSBrZXkgdG8gYWNjZXNzLCBjYW4gYmUgJy4nLXNlcGFyYXRlZCBzdHJpbmdcbiAqIEByZXR1cm4geyp9IC0gdmFsdWUgaW4gdGhlIGZpbmFsIGtleSBvZiB0aGUgbmVzdGVkIGNvbnRhaW5lclxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0KGNvbnRhaW5lciwgY29tcG9zaXRlS2V5KSB7XG4gIC8vIFNwbGl0IHRoZSBrZXkgaW50byBzdWJrZXlzXG4gIHZhciBrZXlMaXN0ID0gZ2V0S2V5cyhjb21wb3NpdGVLZXkpO1xuICAvLyBSZWN1cnNpdmVseSBnZXQgdGhlIHZhbHVlIG9mIGVhY2gga2V5O1xuICB2YXIgdmFsdWUgPSBjb250YWluZXI7XG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGtleUxpc3RbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICB2YXIga2V5ID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgIC8vIElmIGFueSBpbnRlcm1lZGlhdGUgc3ViZmllbGQgaXMgbm90IGEgY29udGFpbmVyLCByZXR1cm4gdW5kZWZpbmVkXG4gICAgICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgLy8gR2V0IHRoZSBgZ2V0dGVyYCBmb3IgdGhpcyBjb250YWluZXJcbiAgICAgIHZhciBnZXR0ZXIgPSBnZXRHZXR0ZXIodmFsdWUpO1xuICAgICAgLy8gVXNlIHRoZSBnZXR0ZXIgdG8gZ2V0IHRoZSB2YWx1ZSBmb3IgdGhlIGtleVxuICAgICAgdmFsdWUgPSBnZXR0ZXIodmFsdWUsIGtleSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG4gICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gRGVmYXVsdCBnZXR0ZXIgaXMgY29udGFpbmVyIGluZGV4aW5nXG52YXIgc3F1YXJlQnJhY2tldEdldHRlciA9IGZ1bmN0aW9uIHNxdWFyZUJyYWNrZXRHZXR0ZXIoY29udGFpbmVyLCBrZXkpIHtcbiAgcmV0dXJuIGNvbnRhaW5lcltrZXldO1xufTtcbnZhciBnZXRNZXRob2RHZXR0ZXIgPSBmdW5jdGlvbiBnZXRNZXRob2RHZXR0ZXIob2JqLCBrZXkpIHtcbiAgcmV0dXJuIG9iai5nZXQoa2V5KTtcbn07XG4vLyBDYWNoZSBrZXkgdG8ga2V5IGFycmF5cyBmb3Igc3BlZWRcbnZhciBrZXlNYXAgPSB7fTtcblxuLy8gTG9va3MgZm9yIGEgYGdldGAgZnVuY3Rpb24gb24gdGhlIHByb3RvdHlwZVxuLy8gVE9ETyAtIGZvbGxvdyBwcm90b3R5cGUgY2hhaW4/XG4vLyBAcHJpdmF0ZVxuLy8gQHJldHVybiB7RnVuY3Rpb259IC0gZ2V0IGZ1bmN0aW9uOiAoY29udGFpbmVyLCBrZXkpID0+IHZhbHVlXG5mdW5jdGlvbiBnZXRHZXR0ZXIoY29udGFpbmVyKSB7XG4gIC8vIENoZWNrIGlmIGNvbnRhaW5lciBoYXMgYSBzcGVjaWFsIGdldCBtZXRob2RcbiAgdmFyIHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihjb250YWluZXIpO1xuICByZXR1cm4gcHJvdG90eXBlLmdldCA/IGdldE1ldGhvZEdldHRlciA6IHNxdWFyZUJyYWNrZXRHZXR0ZXI7XG59XG5cbi8vIFRha2VzIGEgc3RyaW5nIG9mICcuJyBzZXBhcmF0ZWQga2V5cyBhbmQgcmV0dXJucyBhbiBhcnJheSBvZiBrZXlzXG4vLyBFLmcuICdmZWF0dXJlLmdlb21ldHJ5LnR5cGUnID0+ICdmZWF0dXJlJywgJ2dlb21ldHJ5JywgJ3R5cGUnXG4vLyBAcHJpdmF0ZVxuZnVuY3Rpb24gZ2V0S2V5cyhjb21wb3NpdGVLZXkpIHtcbiAgaWYgKHR5cGVvZiBjb21wb3NpdGVLZXkgPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZWxzZSBhc3N1bWUgc3RyaW5nIGFuZCBzcGxpdCBhcm91bmQgZG90c1xuICAgIHZhciBrZXlMaXN0ID0ga2V5TWFwW2NvbXBvc2l0ZUtleV07XG4gICAgaWYgKCFrZXlMaXN0KSB7XG4gICAgICBrZXlMaXN0ID0gY29tcG9zaXRlS2V5LnNwbGl0KCcuJyk7XG4gICAgICBrZXlNYXBbY29tcG9zaXRlS2V5XSA9IGtleUxpc3Q7XG4gICAgfVxuICAgIHJldHVybiBrZXlMaXN0O1xuICB9XG4gIC8vIFdyYXAgaW4gYXJyYXkgaWYgbmVlZGVkXG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNvbXBvc2l0ZUtleSkgPyBjb21wb3NpdGVLZXkgOiBbY29tcG9zaXRlS2V5XTtcbn1cblxuLy8gXCJHZW5lcmljXCIgZm9yRWFjaCB0aGF0IGZpcnN0IGF0dGVtcHRzIHRvIGNhbGwgYVxuZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2goY29udGFpbmVyLCB2aXNpdG9yKSB7XG4gIC8vIEhhY2sgdG8gd29yayBhcm91bmQgbGltaXRhdGlvbnMgaW4gYnVibGUgY29tcGlsZXJcbiAgdmFyIHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihjb250YWluZXIpO1xuICBpZiAocHJvdG90eXBlLmZvckVhY2gpIHtcbiAgICBjb250YWluZXIuZm9yRWFjaCh2aXNpdG9yKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgaXNLZXllZCA9IGlzS2V5ZWRDb250YWluZXIoY29udGFpbmVyKTtcbiAgaWYgKGlzS2V5ZWQpIHtcbiAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlO1xuICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTtcbiAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkO1xuXG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSBlbnRyaWVzKGNvbnRhaW5lcilbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHtcbiAgICAgICAgdmFyIF9zdGVwMiR2YWx1ZSA9IF9zbGljZWRUb0FycmF5KF9zdGVwMi52YWx1ZSwgMiksXG4gICAgICAgICAgICBrZXkgPSBfc3RlcDIkdmFsdWVbMF0sXG4gICAgICAgICAgICB2YWx1ZSA9IF9zdGVwMiR2YWx1ZVsxXTtcblxuICAgICAgICB2aXNpdG9yKHZhbHVlLCBrZXksIGNvbnRhaW5lcik7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBfZGlkSXRlcmF0b3JFcnJvcjIgPSB0cnVlO1xuICAgICAgX2l0ZXJhdG9yRXJyb3IyID0gZXJyO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yICYmIF9pdGVyYXRvcjIucmV0dXJuKSB7XG4gICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikge1xuICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWU7XG4gIHZhciBfZGlkSXRlcmF0b3JFcnJvcjMgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yMyA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvcjMgPSB2YWx1ZXMoY29udGFpbmVyKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwMzsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IChfc3RlcDMgPSBfaXRlcmF0b3IzLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gdHJ1ZSkge1xuICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDMudmFsdWU7XG5cbiAgICAgIC8vIHJlc3VsdFtpbmRleF0gPSB2aXNpdG9yKGVsZW1lbnQsIGluZGV4LCBjb250YWluZXIpO1xuICAgICAgdmlzaXRvcihlbGVtZW50LCBpbmRleCwgY29udGFpbmVyKTtcbiAgICAgIGluZGV4Kys7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZGlkSXRlcmF0b3JFcnJvcjMgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yMyA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyAmJiBfaXRlcmF0b3IzLnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3IzLnJldHVybigpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IzKSB7XG4gICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1hcChjb250YWluZXIsIHZpc2l0b3IpIHtcbiAgLy8gSGFjayB0byB3b3JrIGFyb3VuZCBsaW1pdGF0aW9ucyBpbiBidWJsZSBjb21waWxlclxuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGNvbnRhaW5lcik7XG4gIGlmIChwcm90b3R5cGUuZm9yRWFjaCkge1xuICAgIHZhciBfcmV0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgY29udGFpbmVyLmZvckVhY2goZnVuY3Rpb24gKHgsIGksIGUpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5wdXNoKHZpc2l0b3IoeCwgaSwgZSkpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB2OiByZXN1bHRcbiAgICAgIH07XG4gICAgfSgpO1xuXG4gICAgaWYgKCh0eXBlb2YgX3JldCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoX3JldCkpID09PSBcIm9iamVjdFwiKSByZXR1cm4gX3JldC52O1xuICB9XG5cbiAgdmFyIGlzS2V5ZWQgPSBpc0tleWVkQ29udGFpbmVyKGNvbnRhaW5lcik7XG4gIC8vIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheShjb3VudChjb250YWluZXIpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBpZiAoaXNLZXllZCkge1xuICAgIC8vIFRPRE8gLSBzaG91bGQgdGhpcyBjcmVhdGUgYW4gb2JqZWN0P1xuICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCA9IHRydWU7XG4gICAgdmFyIF9kaWRJdGVyYXRvckVycm9yNCA9IGZhbHNlO1xuICAgIHZhciBfaXRlcmF0b3JFcnJvcjQgPSB1bmRlZmluZWQ7XG5cbiAgICB0cnkge1xuICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yNCA9IGVudHJpZXMoY29udGFpbmVyKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCA9IChfc3RlcDQgPSBfaXRlcmF0b3I0Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb240ID0gdHJ1ZSkge1xuICAgICAgICB2YXIgX3N0ZXA0JHZhbHVlID0gX3NsaWNlZFRvQXJyYXkoX3N0ZXA0LnZhbHVlLCAyKSxcbiAgICAgICAgICAgIGtleSA9IF9zdGVwNCR2YWx1ZVswXSxcbiAgICAgICAgICAgIHZhbHVlID0gX3N0ZXA0JHZhbHVlWzFdO1xuXG4gICAgICAgIC8vIHJlc3VsdFtpbmRleF0gPSB2aXNpdG9yKGVsZW1lbnQsIGluZGV4LCBjb250YWluZXIpO1xuICAgICAgICByZXN1bHQucHVzaCh2aXNpdG9yKHZhbHVlLCBrZXksIGNvbnRhaW5lcikpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgX2RpZEl0ZXJhdG9yRXJyb3I0ID0gdHJ1ZTtcbiAgICAgIF9pdGVyYXRvckVycm9yNCA9IGVycjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCAmJiBfaXRlcmF0b3I0LnJldHVybikge1xuICAgICAgICAgIF9pdGVyYXRvcjQucmV0dXJuKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjQpIHtcbiAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjUgPSB0cnVlO1xuICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjUgPSBmYWxzZTtcbiAgICB2YXIgX2l0ZXJhdG9yRXJyb3I1ID0gdW5kZWZpbmVkO1xuXG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIF9pdGVyYXRvcjUgPSB2YWx1ZXMoY29udGFpbmVyKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNTsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNSA9IChfc3RlcDUgPSBfaXRlcmF0b3I1Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241ID0gdHJ1ZSkge1xuICAgICAgICB2YXIgZWxlbWVudCA9IF9zdGVwNS52YWx1ZTtcblxuICAgICAgICAvLyByZXN1bHRbaW5kZXhdID0gdmlzaXRvcihlbGVtZW50LCBpbmRleCwgY29udGFpbmVyKTtcbiAgICAgICAgcmVzdWx0LnB1c2godmlzaXRvcihlbGVtZW50LCBpbmRleCwgY29udGFpbmVyKSk7XG4gICAgICAgIGluZGV4Kys7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBfZGlkSXRlcmF0b3JFcnJvcjUgPSB0cnVlO1xuICAgICAgX2l0ZXJhdG9yRXJyb3I1ID0gZXJyO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241ICYmIF9pdGVyYXRvcjUucmV0dXJuKSB7XG4gICAgICAgICAgX2l0ZXJhdG9yNS5yZXR1cm4oKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yNSkge1xuICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yNTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlKGNvbnRhaW5lciwgdmlzaXRvcikge1xuICAvLyBIYWNrIHRvIHdvcmsgYXJvdW5kIGxpbWl0YXRpb25zIGluIGJ1YmxlIGNvbXBpbGVyXG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoY29udGFpbmVyKTtcbiAgaWYgKHByb3RvdHlwZS5mb3JFYWNoKSB7XG4gICAgdmFyIF9yZXQyID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgY29udGFpbmVyLmZvckVhY2goZnVuY3Rpb24gKHgsIGksIGUpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5wdXNoKHZpc2l0b3IoeCwgaSwgZSkpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB2OiByZXN1bHRcbiAgICAgIH07XG4gICAgfSgpO1xuXG4gICAgaWYgKCh0eXBlb2YgX3JldDIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKF9yZXQyKSkgPT09IFwib2JqZWN0XCIpIHJldHVybiBfcmV0Mi52O1xuICB9XG5cbiAgdmFyIGlzS2V5ZWQgPSBpc0tleWVkQ29udGFpbmVyKGNvbnRhaW5lcik7XG4gIC8vIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheShjb3VudChjb250YWluZXIpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBpZiAoaXNLZXllZCkge1xuICAgIC8vIFRPRE8gLSBzaG91bGQgdGhpcyBjcmVhdGUgYW4gb2JqZWN0P1xuICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNiA9IHRydWU7XG4gICAgdmFyIF9kaWRJdGVyYXRvckVycm9yNiA9IGZhbHNlO1xuICAgIHZhciBfaXRlcmF0b3JFcnJvcjYgPSB1bmRlZmluZWQ7XG5cbiAgICB0cnkge1xuICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yNiA9IGVudHJpZXMoY29udGFpbmVyKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNjsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNiA9IChfc3RlcDYgPSBfaXRlcmF0b3I2Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb242ID0gdHJ1ZSkge1xuICAgICAgICB2YXIgX3N0ZXA2JHZhbHVlID0gX3NsaWNlZFRvQXJyYXkoX3N0ZXA2LnZhbHVlLCAyKSxcbiAgICAgICAgICAgIGtleSA9IF9zdGVwNiR2YWx1ZVswXSxcbiAgICAgICAgICAgIHZhbHVlID0gX3N0ZXA2JHZhbHVlWzFdO1xuXG4gICAgICAgIC8vIHJlc3VsdFtpbmRleF0gPSB2aXNpdG9yKGVsZW1lbnQsIGluZGV4LCBjb250YWluZXIpO1xuICAgICAgICByZXN1bHQucHVzaCh2aXNpdG9yKHZhbHVlLCBrZXksIGNvbnRhaW5lcikpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgX2RpZEl0ZXJhdG9yRXJyb3I2ID0gdHJ1ZTtcbiAgICAgIF9pdGVyYXRvckVycm9yNiA9IGVycjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNiAmJiBfaXRlcmF0b3I2LnJldHVybikge1xuICAgICAgICAgIF9pdGVyYXRvcjYucmV0dXJuKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjYpIHtcbiAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjcgPSB0cnVlO1xuICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjcgPSBmYWxzZTtcbiAgICB2YXIgX2l0ZXJhdG9yRXJyb3I3ID0gdW5kZWZpbmVkO1xuXG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIF9pdGVyYXRvcjcgPSB2YWx1ZXMoY29udGFpbmVyKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNzsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNyA9IChfc3RlcDcgPSBfaXRlcmF0b3I3Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb243ID0gdHJ1ZSkge1xuICAgICAgICB2YXIgZWxlbWVudCA9IF9zdGVwNy52YWx1ZTtcblxuICAgICAgICAvLyByZXN1bHRbaW5kZXhdID0gdmlzaXRvcihlbGVtZW50LCBpbmRleCwgY29udGFpbmVyKTtcbiAgICAgICAgcmVzdWx0LnB1c2godmlzaXRvcihlbGVtZW50LCBpbmRleCwgY29udGFpbmVyKSk7XG4gICAgICAgIGluZGV4Kys7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBfZGlkSXRlcmF0b3JFcnJvcjcgPSB0cnVlO1xuICAgICAgX2l0ZXJhdG9yRXJyb3I3ID0gZXJyO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb243ICYmIF9pdGVyYXRvcjcucmV0dXJuKSB7XG4gICAgICAgICAgX2l0ZXJhdG9yNy5yZXR1cm4oKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yNykge1xuICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yNztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vLyBBdHRlbXB0IHRvIGNyZWF0ZSBhIHNpbXBsZSAoYXJyYXksIHBsYWluIG9iamVjdCkgcmVwcmVzZW50YXRpb24gb2Zcbi8vIGEgbmVzdGVkIHN0cnVjdHVyZSBvZiBFUzYgaXRlcmFibGUgY2xhc3Nlcy5cbi8vIEFzc3VtcHRpb24gaXMgdGhhdCBpZiBhbiBlbnRyaWVzKCkgbWV0aG9kIGlzIGF2YWlsYWJsZSwgdGhlIGl0ZXJhYmxlIG9iamVjdFxuLy8gc2hvdWxkIGJlIHJlcHJlc2VudGVkIGFzIGFuIG9iamVjdCwgaWYgbm90IGFzIGFuIGFycmF5LlxuZXhwb3J0IGZ1bmN0aW9uIHRvSlMoY29udGFpbmVyKSB7XG4gIGlmICghaXNPYmplY3QoY29udGFpbmVyKSkge1xuICAgIHJldHVybiBjb250YWluZXI7XG4gIH1cblxuICBpZiAoaXNLZXllZENvbnRhaW5lcihjb250YWluZXIpKSB7XG4gICAgdmFyIF9yZXN1bHQgPSB7fTtcbiAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjggPSB0cnVlO1xuICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjggPSBmYWxzZTtcbiAgICB2YXIgX2l0ZXJhdG9yRXJyb3I4ID0gdW5kZWZpbmVkO1xuXG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIF9pdGVyYXRvcjggPSBlbnRyaWVzKGNvbnRhaW5lcilbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDg7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjggPSAoX3N0ZXA4ID0gX2l0ZXJhdG9yOC5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uOCA9IHRydWUpIHtcbiAgICAgICAgdmFyIF9zdGVwOCR2YWx1ZSA9IF9zbGljZWRUb0FycmF5KF9zdGVwOC52YWx1ZSwgMiksXG4gICAgICAgICAgICBrZXkgPSBfc3RlcDgkdmFsdWVbMF0sXG4gICAgICAgICAgICB2YWx1ZSA9IF9zdGVwOCR2YWx1ZVsxXTtcblxuICAgICAgICBfcmVzdWx0W2tleV0gPSB0b0pTKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIF9kaWRJdGVyYXRvckVycm9yOCA9IHRydWU7XG4gICAgICBfaXRlcmF0b3JFcnJvcjggPSBlcnI7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjggJiYgX2l0ZXJhdG9yOC5yZXR1cm4pIHtcbiAgICAgICAgICBfaXRlcmF0b3I4LnJldHVybigpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3I4KSB7XG4gICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXN1bHQ7XG4gIH1cblxuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uOSA9IHRydWU7XG4gIHZhciBfZGlkSXRlcmF0b3JFcnJvcjkgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yOSA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvcjkgPSB2YWx1ZXMoY29udGFpbmVyKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOTsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uOSA9IChfc3RlcDkgPSBfaXRlcmF0b3I5Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb245ID0gdHJ1ZSkge1xuICAgICAgdmFyIHZhbHVlID0gX3N0ZXA5LnZhbHVlO1xuXG4gICAgICByZXN1bHQucHVzaCh0b0pTKHZhbHVlKSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZGlkSXRlcmF0b3JFcnJvcjkgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yOSA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uOSAmJiBfaXRlcmF0b3I5LnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3I5LnJldHVybigpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3I5KSB7XG4gICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi91dGlscy9jb250YWluZXIuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 9 */
/* exports provided: default, createMat4 */
/* exports used: default, createMat4 */
/*!***************************************!*\
  !*** ./src/lib/viewports/viewport.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_gl_matrix__);\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createMat4;\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// eslint-disable\n// View and Projection Matrix management\n\n// gl-matrix is a large dependency for a small module.\n// However since it is used by mapbox etc, it should already be present\n// in most target application bundles.\n\n\nvar IDENTITY = createMat4();\n\nvar Viewport = function () {\n  /**\n   * @classdesc\n   * Manages coordinate system transformations for deck.gl.\n   *\n   * Note: The Viewport is immutable in the sense that it only has accessors.\n   * A new viewport instance should be created if any parameters have changed.\n   *\n   * @class\n   * @param {Object} opt - options\n   * @param {Boolean} mercator=true - Whether to use mercator projection\n   *\n   * @param {Number} opt.width=1 - Width of \"viewport\" or window\n   * @param {Number} opt.height=1 - Height of \"viewport\" or window\n   * @param {Array} opt.center=[0, 0] - Center of viewport\n   *   [longitude, latitude] or [x, y]\n   * @param {Number} opt.scale=1 - Either use scale or zoom\n   * @param {Number} opt.pitch=0 - Camera angle in degrees (0 is straight down)\n   * @param {Number} opt.bearing=0 - Map rotation in degrees (0 means north is up)\n   * @param {Number} opt.altitude= - Altitude of camera in screen units\n   *\n   * Web mercator projection short-hand parameters\n   * @param {Number} opt.latitude - Center of viewport on map (alternative to opt.center)\n   * @param {Number} opt.longitude - Center of viewport on map (alternative to opt.center)\n   * @param {Number} opt.zoom - Scale = Math.pow(2,zoom) on map (alternative to opt.scale)\n   */\n  /* eslint-disable complexity */\n  function Viewport() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? 1 : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? 1 : _ref$height,\n        _ref$viewMatrix = _ref.viewMatrix,\n        viewMatrix = _ref$viewMatrix === undefined ? IDENTITY : _ref$viewMatrix,\n        _ref$projectionMatrix = _ref.projectionMatrix,\n        projectionMatrix = _ref$projectionMatrix === undefined ? IDENTITY : _ref$projectionMatrix;\n\n    _classCallCheck(this, Viewport);\n\n    // Silently allow apps to send in 0,0\n    this.width = width || 1;\n    this.height = height || 1;\n    this.scale = 1;\n\n    this.viewMatrix = viewMatrix;\n    this.projectionMatrix = projectionMatrix;\n\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    var vpm = createMat4();\n    __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].multiply(vpm, vpm, this.projectionMatrix);\n    __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].multiply(vpm, vpm, this.viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // Calculate matrices and scales needed for projection\n    /**\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n    var m = createMat4();\n\n    // Scale with viewport window's width and height in pixels\n    __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].scale(m, m, [this.width, this.height, 1]);\n    // Convert to (0, 1)\n    __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].translate(m, m, [0.5, 0.5, 0]);\n    __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].scale(m, m, [0.5, 0.5, 1]);\n    // Project to clip space (-1, 1)\n    __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].multiply(m, m, this.viewProjectionMatrix);\n\n    var mInverse = __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].invert(createMat4(), m);\n    if (!mInverse) {\n      throw new Error('Pixel project matrix not invertible');\n    }\n\n    this.pixelProjectionMatrix = m;\n    this.pixelUnprojectionMatrix = mInverse;\n\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectFlat = this.projectFlat.bind(this);\n    this.unprojectFlat = this.unprojectFlat.bind(this);\n    this.getMatrices = this.getMatrices.bind(this);\n  }\n  /* eslint-enable complexity */\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n\n\n  _createClass(Viewport, [{\n    key: 'equals',\n    value: function equals(viewport) {\n      if (!(viewport instanceof Viewport)) {\n        return false;\n      }\n\n      return viewport.width === this.width && viewport.height === this.height && __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].equals(viewport.projectionMatrix, this.projectionMatrix) && __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].equals(viewport.viewMatrix, this.viewMatrix);\n    }\n\n    /**\n     * Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n     * using viewport projection parameters\n     * - [longitude, latitude] to [x, y]\n     * - [longitude, latitude, Z] => [x, y, z]\n     * Note: By default, returns top-left coordinates for canvas/SVG type render\n     *\n     * @param {Array} lngLatZ - [lng, lat] or [lng, lat, Z]\n     * @param {Object} opts - options\n     * @param {Object} opts.topLeft=true - Whether projected coords are top left\n     * @return {Array} - [x, y] or [x, y, z] in top left coords\n     */\n\n  }, {\n    key: 'project',\n    value: function project(xyz) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$topLeft = _ref2.topLeft,\n          topLeft = _ref2$topLeft === undefined ? true : _ref2$topLeft;\n\n      var Z = xyz[2] || 0;\n      // console.error('projecting non-linear', xyz);\n\n      var _projectFlat = this.projectFlat(xyz),\n          _projectFlat2 = _slicedToArray(_projectFlat, 2),\n          X = _projectFlat2[0],\n          Y = _projectFlat2[1];\n\n      var v = [X, Y, Z, 1];\n      // console.error('projecting linear', v);\n      // vec4.sub(v, v, [this.centerX, this.centerY, 0, 0]);\n      __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"vec4\"].transformMat4(v, v, this.pixelProjectionMatrix);\n      // Divide by w\n      var scale = 1 / v[3];\n      __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"vec4\"].multiply(v, v, [scale, scale, scale, scale]);\n      // console.error('projected', v);\n      var x = v[0],\n          z = v[2];\n\n      var y = topLeft ? this.height - v[1] : v[1];\n      return xyz.length === 2 ? [x, y] : [x, y, z];\n    }\n\n    /**\n     * Unproject pixel coordinates on screen onto world coordinates,\n     * (possibly [lon, lat]) on map.\n     * - [x, y] => [lng, lat]\n     * - [x, y, z] => [lng, lat, Z]\n     * @param {Array} xyz -\n     * @return {Array} - [lng, lat, Z] or [X, Y, Z]\n     */\n\n  }, {\n    key: 'unproject',\n    value: function unproject(xyz) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref3$topLeft = _ref3.topLeft,\n          topLeft = _ref3$topLeft === undefined ? true : _ref3$topLeft;\n\n      // console.error('unprojecting linear', xyz);\n      var _xyz = _slicedToArray(xyz, 3),\n          _xyz$ = _xyz[0],\n          x = _xyz$ === undefined ? 0 : _xyz$,\n          _xyz$2 = _xyz[1],\n          y = _xyz$2 === undefined ? 0 : _xyz$2,\n          _xyz$3 = _xyz[2],\n          z = _xyz$3 === undefined ? 0 : _xyz$3;\n      // const y2 = topLeft ? this.height - 1 - y : y;\n\n\n      var y2 = topLeft ? this.height - y : y;\n      var v = [x, y2, z, 1];\n      __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"vec4\"].transformMat4(v, v, this.pixelUnprojectionMatrix);\n      var scale = 1 / v[3];\n      __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"vec4\"].multiply(v, v, [scale, scale, scale, scale]);\n      // console.error('unprojecting non-linear', v);\n\n      var _unprojectFlat = this.unprojectFlat(v),\n          _unprojectFlat2 = _slicedToArray(_unprojectFlat, 2),\n          x0 = _unprojectFlat2[0],\n          y0 = _unprojectFlat2[1];\n      // console.error('unprojected', [x0, y0]);\n\n\n      var z0 = v[2];\n\n      return xyz.length === 2 ? [x0, y0] : [x0, y0, z0];\n    }\n\n    // NON_LINEAR PROJECTION HOOKS\n    // Used for web meractor projection\n\n    /**\n     * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n     * Performs the nonlinear part of the web mercator projection.\n     * Remaining projection is done with 4x4 matrices which also handles\n     * perspective.\n     * @param {Array} lngLat - [lng, lat] coordinates\n     *   Specifies a point on the sphere to project onto the map.\n     * @return {Array} [x,y] coordinates.\n     */\n\n  }, {\n    key: 'projectFlat',\n    value: function projectFlat(_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          x = _ref5[0],\n          y = _ref5[1];\n\n      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scale;\n\n      return this._projectFlat.apply(this, arguments);\n    }\n\n    /**\n     * Unproject world point [x,y] on map onto {lat, lon} on sphere\n     * @param {object|Vector} xy - object with {x,y} members\n     *  representing point on projected map plane\n     * @return {GeoCoordinates} - object with {lat,lon} of point on sphere.\n     *   Has toArray method if you need a GeoJSON Array.\n     *   Per cartographic tradition, lat and lon are specified as degrees.\n     */\n\n  }, {\n    key: 'unprojectFlat',\n    value: function unprojectFlat(xyz) {\n      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scale;\n\n      return this._unprojectFlat.apply(this, arguments);\n    }\n\n    // _projectFlat(xyz, scale = this.scale) {\n    //   return xyz;\n    // }\n\n    // _unprojectFlat(xyz, scale = this.scale) {\n    //   return xyz;\n    // }\n\n  }, {\n    key: 'getMatrices',\n    value: function getMatrices() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$modelMatrix = _ref6.modelMatrix,\n          modelMatrix = _ref6$modelMatrix === undefined ? null : _ref6$modelMatrix;\n\n      var modelViewProjectionMatrix = this.viewProjectionMatrix;\n      var pixelProjectionMatrix = this.pixelProjectionMatrix;\n      var pixelUnprojectionMatrix = this.pixelUnprojectionMatrix;\n\n      if (modelMatrix) {\n        modelViewProjectionMatrix = __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].multiply([], this.viewProjectionMatrix, modelMatrix);\n        pixelProjectionMatrix = __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].multiply([], this.pixelProjectionMatrix, modelMatrix);\n        pixelUnprojectionMatrix = __WEBPACK_IMPORTED_MODULE_0_gl_matrix__[\"mat4\"].invert([], pixelProjectionMatrix);\n      }\n\n      var matrices = Object.assign({\n        modelViewProjectionMatrix: modelViewProjectionMatrix,\n        viewProjectionMatrix: this.viewProjectionMatrix,\n        viewMatrix: this.viewMatrix,\n        projectionMatrix: this.projectionMatrix,\n\n        // project/unproject between pixels and world\n        pixelProjectionMatrix: pixelProjectionMatrix,\n        pixelUnprojectionMatrix: pixelUnprojectionMatrix,\n\n        width: this.width,\n        height: this.height,\n        scale: this.scale\n      },\n\n      // Subclass can add additional params\n      // TODO - Fragile: better to make base Viewport class aware of all params\n      this._getParams());\n\n      return matrices;\n    }\n\n    // INTERNAL METHODS\n\n    // Can be subclassed to add additional fields to `getMatrices`\n\n  }, {\n    key: '_getParams',\n    value: function _getParams() {\n      return {};\n    }\n  }]);\n\n  return Viewport;\n}();\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Viewport;\nfunction createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/* unknown exports provided */
/* exports used: default */
/*!*************************!*\
  !*** external "earcut" ***!
  \*************************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_10__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlYXJjdXRcIj81ZmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xMF9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZWFyY3V0XCJcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 11 */
/* exports provided: Effect, EffectManager */
/* exports used: EffectManager, Effect */
/*!***************************************!*\
  !*** ./src/experimental/lib/index.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__effect__ = __webpack_require__(/*! ./effect */ 45);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_0__effect__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__effect_manager__ = __webpack_require__(/*! ./effect-manager */ 44);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__effect_manager__[\"a\"]; });\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhwZXJpbWVudGFsL2xpYi9pbmRleC5qcz8wMjk1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgRWZmZWN0IH0gZnJvbSAnLi9lZmZlY3QnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBFZmZlY3RNYW5hZ2VyIH0gZnJvbSAnLi9lZmZlY3QtbWFuYWdlcic7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZXhwZXJpbWVudGFsL2xpYi9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 12 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/react/autobind.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = autobind;\nvar PREDEFINED = ['constructor', 'render', 'componentWillMount', 'componentDidMount', 'componentWillReceiveProps', 'shouldComponentUpdate', 'componentWillUpdate', 'componentDidUpdate', 'componentWillUnmount'];\n\n/**\n * Binds the \"this\" argument of all functions on a class instance to the instance\n * @param {Object} obj - class instance (typically a react component)\n */\nfunction autobind(obj) {\n  var proto = Object.getPrototypeOf(obj);\n  var propNames = Object.getOwnPropertyNames(proto);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step.value;\n\n      if (typeof obj[key] === 'function') {\n        if (!PREDEFINED.find(function (name) {\n          return key === name;\n        })) {\n          obj[key] = obj[key].bind(obj);\n        }\n      }\n    };\n\n    for (var _iterator = propNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcmVhY3QvYXV0b2JpbmQuanM/ZWMyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUFJFREVGSU5FRCA9IFsnY29uc3RydWN0b3InLCAncmVuZGVyJywgJ2NvbXBvbmVudFdpbGxNb3VudCcsICdjb21wb25lbnREaWRNb3VudCcsICdjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJywgJ3Nob3VsZENvbXBvbmVudFVwZGF0ZScsICdjb21wb25lbnRXaWxsVXBkYXRlJywgJ2NvbXBvbmVudERpZFVwZGF0ZScsICdjb21wb25lbnRXaWxsVW5tb3VudCddO1xuXG4vKipcbiAqIEJpbmRzIHRoZSBcInRoaXNcIiBhcmd1bWVudCBvZiBhbGwgZnVuY3Rpb25zIG9uIGEgY2xhc3MgaW5zdGFuY2UgdG8gdGhlIGluc3RhbmNlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIC0gY2xhc3MgaW5zdGFuY2UgKHR5cGljYWxseSBhIHJlYWN0IGNvbXBvbmVudClcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXV0b2JpbmQob2JqKSB7XG4gIHZhciBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopO1xuICB2YXIgcHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvdG8pO1xuICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcCgpIHtcbiAgICAgIHZhciBrZXkgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgaWYgKHR5cGVvZiBvYmpba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBpZiAoIVBSRURFRklORUQuZmluZChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgIHJldHVybiBrZXkgPT09IG5hbWU7XG4gICAgICAgIH0pKSB7XG4gICAgICAgICAgb2JqW2tleV0gPSBvYmpba2V5XS5iaW5kKG9iaik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gcHJvcE5hbWVzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgX2xvb3AoKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvcmVhY3QvYXV0b2JpbmQuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 13 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/react/deckgl.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ 30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__autobind__ = __webpack_require__(/*! ./autobind */ 12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__webgl_renderer__ = __webpack_require__(/*! ./webgl-renderer */ 70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib__ = __webpack_require__(/*! ../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__experimental__ = __webpack_require__(/*! ../experimental */ 43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_viewports__ = __webpack_require__(/*! ../lib/viewports */ 15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_utils__ = __webpack_require__(/*! ../lib/utils */ 3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n// import {Viewport, WebMercatorViewport} from 'viewport-mercator-project';\n\n\n\nfunction noop() {}\n\nvar propTypes = {\n  id: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].string,\n  width: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].number.isRequired,\n  height: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].number.isRequired,\n  layers: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].arrayOf(__WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].instanceOf(__WEBPACK_IMPORTED_MODULE_3__lib__[\"b\" /* Layer */])).isRequired,\n  effects: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].arrayOf(__WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].instanceOf(__WEBPACK_IMPORTED_MODULE_4__experimental__[\"a\" /* Effect */])),\n  gl: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].object,\n  debug: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].bool,\n  viewport: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].instanceOf(__WEBPACK_IMPORTED_MODULE_6__lib_viewports__[\"b\" /* Viewport */]),\n  onWebGLInitialized: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func,\n  onLayerClick: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func,\n  onLayerHover: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func,\n  onAfterRender: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func\n};\n\nvar defaultProps = {\n  id: 'deckgl-overlay',\n  debug: false,\n  gl: null,\n  effects: [],\n  onWebGLInitialized: noop,\n  onLayerClick: noop,\n  onLayerHover: noop,\n  onAfterRender: noop\n};\n\nvar DeckGL = function (_React$Component) {\n  _inherits(DeckGL, _React$Component);\n\n  function DeckGL(props) {\n    _classCallCheck(this, DeckGL);\n\n    var _this = _possibleConstructorReturn(this, (DeckGL.__proto__ || Object.getPrototypeOf(DeckGL)).call(this, props));\n\n    _this.state = {};\n    _this.needsRedraw = true;\n    _this.layerManager = null;\n    _this.effectManager = null;\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__autobind__[\"a\" /* default */])(_this);\n    return _this;\n  }\n\n  _createClass(DeckGL, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this._updateLayers(nextProps);\n    }\n  }, {\n    key: '_updateLayers',\n    value: function _updateLayers(nextProps) {\n      var width = nextProps.width,\n          height = nextProps.height,\n          latitude = nextProps.latitude,\n          longitude = nextProps.longitude,\n          zoom = nextProps.zoom,\n          pitch = nextProps.pitch,\n          bearing = nextProps.bearing,\n          altitude = nextProps.altitude;\n      var viewport = nextProps.viewport;\n\n      // If Viewport is not supplied, create one from mercator props\n\n      viewport = viewport || new __WEBPACK_IMPORTED_MODULE_6__lib_viewports__[\"a\" /* WebMercatorViewport */]({\n        width: width, height: height, latitude: latitude, longitude: longitude, zoom: zoom, pitch: pitch, bearing: bearing, altitude: altitude\n      });\n\n      if (this.layerManager) {\n        this.layerManager.setViewport(viewport).updateLayers({ newLayers: nextProps.layers });\n      }\n    }\n  }, {\n    key: '_onRendererInitialized',\n    value: function _onRendererInitialized(_ref) {\n      var gl = _ref.gl,\n          canvas = _ref.canvas;\n\n      gl.enable(__WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"GL\"].BLEND);\n      gl.blendFunc(__WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"GL\"].SRC_ALPHA, __WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"GL\"].ONE_MINUS_SRC_ALPHA);\n\n      this.props.onWebGLInitialized(gl);\n\n      // Note: avoid React setState due GL animation loop / setState timing issue\n      this.layerManager = new __WEBPACK_IMPORTED_MODULE_3__lib__[\"c\" /* LayerManager */]({ gl: gl });\n      this.effectManager = new __WEBPACK_IMPORTED_MODULE_4__experimental__[\"b\" /* EffectManager */]({ gl: gl, layerManager: this.layerManager });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var effect = _step.value;\n\n          this.effectManager.addEffect(effect);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this._updateLayers(this.props);\n\n      // Check if a mouse event has been specified and that at least one of the layers is pickable\n      var hasEvent = this.props.onLayerClick !== noop || this.props.onLayerHover !== noop;\n      var hasPickableLayer = this.layerManager.layers.map(function (l) {\n        return l.props.pickable;\n      }).includes(true);\n      if (hasEvent && !hasPickableLayer) {\n        __WEBPACK_IMPORTED_MODULE_7__lib_utils__[\"a\" /* log */].once(0, 'You have supplied a mouse event handler but none of your layers got the `pickable` flag.');\n      }\n\n      this.events = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"addEvents\"])(canvas, {\n        cacheSize: false,\n        cachePosition: false,\n        centerOrigin: false,\n        onClick: this._onClick,\n        onMouseMove: this._onMouseMove\n      });\n    }\n\n    // Route events to layers\n\n  }, {\n    key: '_onClick',\n    value: function _onClick(event) {\n      var x = event.x,\n          y = event.y;\n\n      var selectedInfos = this.layerManager.pickLayer({ x: x, y: y, mode: 'click' });\n      var firstInfo = selectedInfos.find(function (info) {\n        return info.index >= 0;\n      });\n      // Event.event holds the original MouseEvent object\n      this.props.onLayerClick(firstInfo, selectedInfos, event.event);\n    }\n\n    // Route events to layers\n\n  }, {\n    key: '_onMouseMove',\n    value: function _onMouseMove(event) {\n      var x = event.x,\n          y = event.y;\n\n      var selectedInfos = this.layerManager.pickLayer({ x: x, y: y, mode: 'hover' });\n      var firstInfo = selectedInfos.find(function (info) {\n        return info.index >= 0;\n      });\n      // Event.event holds the original MouseEvent object\n      this.props.onLayerHover(firstInfo, selectedInfos, event.event);\n    }\n  }, {\n    key: '_onRenderFrame',\n    value: function _onRenderFrame(_ref2) {\n      var gl = _ref2.gl;\n\n      var redraw = this.layerManager.needsRedraw({ clearRedrawFlags: true });\n      if (!redraw) {\n        return;\n      }\n\n      // clear depth and color buffers\n      gl.clear(__WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"GL\"].COLOR_BUFFER_BIT | __WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"GL\"].DEPTH_BUFFER_BIT);\n\n      this.effectManager.preDraw();\n      this.layerManager.drawLayers({ pass: 'primary' });\n      this.effectManager.draw();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          width = _props.width,\n          height = _props.height,\n          gl = _props.gl,\n          debug = _props.debug;\n\n\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_2__webgl_renderer__[\"a\" /* default */], Object.assign({}, this.props, {\n        width: width,\n        height: height,\n        gl: gl,\n        debug: debug,\n        viewport: { x: 0, y: 0, width: width, height: height },\n        onRendererInitialized: this._onRendererInitialized,\n        onNeedRedraw: this._onNeedRedraw,\n        onRenderFrame: this._onRenderFrame,\n        onMouseMove: this._onMouseMove,\n        onClick: this._onClick\n      }));\n    }\n  }]);\n\n  return DeckGL;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = DeckGL;\n\n\nDeckGL.propTypes = propTypes;\nDeckGL.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 14 */
/* unknown exports provided */
/*!********************************************!*\
  !*** ./src/lib/viewports/flat-viewport.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable */\n\n\nvar PI = Math.PI;\nvar pow = Math.pow;\nvar tan = Math.tan;\nvar log = Math.log;\nvar atan = Math.atan;\nvar exp = Math.exp;\nvar DEGREES_TO_RADIANS = PI / 180;\nvar RADIANS_TO_DEGREES = 180 / PI;\nfunction radians(value) {\n  return value * DEGREES_TO_RADIANS;\n}\nfunction degrees(value) {\n  return value * RADIANS_TO_DEGREES;\n}\n// see: https://en.wikipedia.org/wiki/Web_Mercator\nfunction ViewportMercator() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var scale = (opts.tileSize || 512) * 0.5 / PI * pow(2, opts.zoom);\n  var lamda = radians(opts.longitude);\n  var phi = radians(opts.latitude);\n  var x = scale * (lamda + PI);\n  var y = scale * (PI - log(tan(PI * 0.25 + phi * 0.5)));\n  var offsetX = opts.width * 0.5 - x;\n  var offsetY = opts.height * 0.5 - y;\n\n  function project(lnglat2) {\n    var lamda2 = lnglat2[0] * DEGREES_TO_RADIANS;\n    var phi2 = lnglat2[1] * DEGREES_TO_RADIANS;\n    var x2 = scale * (lamda2 + PI);\n    var y2 = scale * (PI - log(tan(PI * 0.25 + phi2 * 0.5)));\n    return [x2 + offsetX, y2 + offsetY];\n  }\n\n  function unproject(xy) {\n    var x2 = xy[0] - offsetX;\n    var y2 = xy[1] - offsetY;\n    var lamda2 = x2 / scale - PI;\n    var phi2 = 2 * (atan(exp(PI - y2 / scale)) - PI * 0.25);\n    return [degrees(lamda2), degrees(phi2)];\n  }\n\n  function contains(lnglat2) {\n    var xy = project(lnglat2);\n    var x = xy[0];\n    var y = xy[1];\n    return x >= 0 && x <= opts.width && y >= 0 && y <= opts.height;\n  }\n\n  return { project: project, unproject: unproject, contains: contains };\n}\n\nmodule.exports = ViewportMercator;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3ZpZXdwb3J0cy9mbGF0LXZpZXdwb3J0LmpzP2U4NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE1IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG5cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cbi8qIGVzbGludC1kaXNhYmxlICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBQSSA9IE1hdGguUEk7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgdGFuID0gTWF0aC50YW47XG52YXIgbG9nID0gTWF0aC5sb2c7XG52YXIgYXRhbiA9IE1hdGguYXRhbjtcbnZhciBleHAgPSBNYXRoLmV4cDtcbnZhciBERUdSRUVTX1RPX1JBRElBTlMgPSBQSSAvIDE4MDtcbnZhciBSQURJQU5TX1RPX0RFR1JFRVMgPSAxODAgLyBQSTtcbmZ1bmN0aW9uIHJhZGlhbnModmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICogREVHUkVFU19UT19SQURJQU5TO1xufVxuZnVuY3Rpb24gZGVncmVlcyh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgKiBSQURJQU5TX1RPX0RFR1JFRVM7XG59XG4vLyBzZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1dlYl9NZXJjYXRvclxuZnVuY3Rpb24gVmlld3BvcnRNZXJjYXRvcigpIHtcbiAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIHZhciBzY2FsZSA9IChvcHRzLnRpbGVTaXplIHx8IDUxMikgKiAwLjUgLyBQSSAqIHBvdygyLCBvcHRzLnpvb20pO1xuICB2YXIgbGFtZGEgPSByYWRpYW5zKG9wdHMubG9uZ2l0dWRlKTtcbiAgdmFyIHBoaSA9IHJhZGlhbnMob3B0cy5sYXRpdHVkZSk7XG4gIHZhciB4ID0gc2NhbGUgKiAobGFtZGEgKyBQSSk7XG4gIHZhciB5ID0gc2NhbGUgKiAoUEkgLSBsb2codGFuKFBJICogMC4yNSArIHBoaSAqIDAuNSkpKTtcbiAgdmFyIG9mZnNldFggPSBvcHRzLndpZHRoICogMC41IC0geDtcbiAgdmFyIG9mZnNldFkgPSBvcHRzLmhlaWdodCAqIDAuNSAtIHk7XG5cbiAgZnVuY3Rpb24gcHJvamVjdChsbmdsYXQyKSB7XG4gICAgdmFyIGxhbWRhMiA9IGxuZ2xhdDJbMF0gKiBERUdSRUVTX1RPX1JBRElBTlM7XG4gICAgdmFyIHBoaTIgPSBsbmdsYXQyWzFdICogREVHUkVFU19UT19SQURJQU5TO1xuICAgIHZhciB4MiA9IHNjYWxlICogKGxhbWRhMiArIFBJKTtcbiAgICB2YXIgeTIgPSBzY2FsZSAqIChQSSAtIGxvZyh0YW4oUEkgKiAwLjI1ICsgcGhpMiAqIDAuNSkpKTtcbiAgICByZXR1cm4gW3gyICsgb2Zmc2V0WCwgeTIgKyBvZmZzZXRZXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVucHJvamVjdCh4eSkge1xuICAgIHZhciB4MiA9IHh5WzBdIC0gb2Zmc2V0WDtcbiAgICB2YXIgeTIgPSB4eVsxXSAtIG9mZnNldFk7XG4gICAgdmFyIGxhbWRhMiA9IHgyIC8gc2NhbGUgLSBQSTtcbiAgICB2YXIgcGhpMiA9IDIgKiAoYXRhbihleHAoUEkgLSB5MiAvIHNjYWxlKSkgLSBQSSAqIDAuMjUpO1xuICAgIHJldHVybiBbZGVncmVlcyhsYW1kYTIpLCBkZWdyZWVzKHBoaTIpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbnRhaW5zKGxuZ2xhdDIpIHtcbiAgICB2YXIgeHkgPSBwcm9qZWN0KGxuZ2xhdDIpO1xuICAgIHZhciB4ID0geHlbMF07XG4gICAgdmFyIHkgPSB4eVsxXTtcbiAgICByZXR1cm4geCA+PSAwICYmIHggPD0gb3B0cy53aWR0aCAmJiB5ID49IDAgJiYgeSA8PSBvcHRzLmhlaWdodDtcbiAgfVxuXG4gIHJldHVybiB7IHByb2plY3Q6IHByb2plY3QsIHVucHJvamVjdDogdW5wcm9qZWN0LCBjb250YWluczogY29udGFpbnMgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBWaWV3cG9ydE1lcmNhdG9yO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi92aWV3cG9ydHMvZmxhdC12aWV3cG9ydC5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 15 */
/* exports provided: default, ViewportMercatorProject, FlatViewport, Viewport, PerspectiveViewport, OrthographicViewport, WebMercatorViewport */
/* exports used: WebMercatorViewport, Viewport */
/*!************************************!*\
  !*** ./src/lib/viewports/index.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__flat_viewport__ = __webpack_require__(/*! ./flat-viewport */ 14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__flat_viewport___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__flat_viewport__);\n/* unused harmony reexport default */\n/* unused harmony reexport ViewportMercatorProject */\n/* unused harmony reexport FlatViewport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__viewport__ = __webpack_require__(/*! ./viewport */ 9);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__viewport__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__perspective_viewport__ = __webpack_require__(/*! ./perspective-viewport */ 68);\n/* unused harmony reexport PerspectiveViewport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__orthographic_viewport__ = __webpack_require__(/*! ./orthographic-viewport */ 67);\n/* unused harmony reexport OrthographicViewport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__web_mercator_viewport__ = __webpack_require__(/*! ./web-mercator-viewport */ 69);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_4__web_mercator_viewport__[\"a\"]; });\n// Classic web-mercator-project\n\n\n\n\n// 3D viewports\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3ZpZXdwb3J0cy9pbmRleC5qcz84OTkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENsYXNzaWMgd2ViLW1lcmNhdG9yLXByb2plY3RcbmV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2ZsYXQtdmlld3BvcnQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBWaWV3cG9ydE1lcmNhdG9yUHJvamVjdCB9IGZyb20gJy4vZmxhdC12aWV3cG9ydCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEZsYXRWaWV3cG9ydCB9IGZyb20gJy4vZmxhdC12aWV3cG9ydCc7XG5cbi8vIDNEIHZpZXdwb3J0c1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBWaWV3cG9ydCB9IGZyb20gJy4vdmlld3BvcnQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQZXJzcGVjdGl2ZVZpZXdwb3J0IH0gZnJvbSAnLi9wZXJzcGVjdGl2ZS12aWV3cG9ydCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE9ydGhvZ3JhcGhpY1ZpZXdwb3J0IH0gZnJvbSAnLi9vcnRob2dyYXBoaWMtdmlld3BvcnQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBXZWJNZXJjYXRvclZpZXdwb3J0IH0gZnJvbSAnLi93ZWItbWVyY2F0b3Itdmlld3BvcnQnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi92aWV3cG9ydHMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 16 */
/* exports provided: default */
/* exports used: default */
/*!*************************************************************!*\
  !*** ./src/experimental/effects/reflection-effect/index.js ***!
  \*************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reflection_effect__ = __webpack_require__(/*! ./reflection-effect */ 42);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__reflection_effect__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhwZXJpbWVudGFsL2VmZmVjdHMvcmVmbGVjdGlvbi1lZmZlY3QvaW5kZXguanM/ZDg0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9yZWZsZWN0aW9uLWVmZmVjdCc7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZXhwZXJpbWVudGFsL2VmZmVjdHMvcmVmbGVjdGlvbi1lZmZlY3QvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 17 */
/* exports provided: default */
/* exports used: default */
/*!************************************************!*\
  !*** ./src/layers/core/arc-layer/arc-layer.js ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [0, 0, 255, 255];\n\nvar defaultProps = {\n  strokeWidth: 1,\n  getSourcePosition: function getSourcePosition(x) {\n    return x.sourcePosition;\n  },\n  getTargetPosition: function getTargetPosition(x) {\n    return x.targetPosition;\n  },\n  getSourceColor: function getSourceColor(x) {\n    return x.color;\n  },\n  getTargetColor: function getTargetColor(x) {\n    return x.color;\n  }\n};\n\nvar ArcLayer = function (_Layer) {\n  _inherits(ArcLayer, _Layer);\n\n  function ArcLayer() {\n    _classCallCheck(this, ArcLayer);\n\n    return _possibleConstructorReturn(this, (ArcLayer.__proto__ || Object.getPrototypeOf(ArcLayer)).apply(this, arguments));\n  }\n\n  _createClass(ArcLayer, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({ model: this._createModel(gl) });\n\n      var attributeManager = this.state.attributeManager;\n      /* eslint-disable max-len */\n\n      attributeManager.addInstanced({\n        instancePositions: { size: 4, accessor: ['getSourcePosition', 'getTargetPosition'], update: this.calculateInstancePositions },\n        instanceSourceColors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getSourceColor', update: this.calculateInstanceSourceColors },\n        instanceTargetColors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getTargetColor', update: this.calculateInstanceTargetColors }\n      });\n      /* eslint-enable max-len */\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var gl = this.context.gl;\n\n      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);\n      gl.lineWidth(lineWidth);\n      this.state.model.render(uniforms);\n      // Setting line width back to 1 is here to workaround a Google Chrome bug\n      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with\n      // correct parameter\n      // This is not happening on Safari and Firefox\n      gl.lineWidth(1.0);\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME arc-layer-vertex-shader\\n\\nconst float N = 49.0;\\n\\nattribute vec3 positions;\\nattribute vec4 instanceSourceColors;\\nattribute vec4 instanceTargetColors;\\nattribute vec4 instancePositions;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\nfloat paraboloid(vec2 source, vec2 target, float ratio) {\\n\\n  vec2 x = mix(source, target, ratio);\\n  vec2 center = mix(source, target, 0.5);\\n\\n  float dSourceCenter = distance(source, center);\\n  float dXCenter = distance(x, center);\\n  return (dSourceCenter + dXCenter) * (dSourceCenter - dXCenter);\\n}\\n\\nvoid main(void) {\\n  vec2 source = preproject(instancePositions.xy);\\n  vec2 target = preproject(instancePositions.zw);\\n\\n  float segmentRatio = smoothstep(0.0, 1.0, positions.x / N);\\n\\n  float vertex_height = paraboloid(source, target, segmentRatio);\\n  if (vertex_height < 0.0) vertex_height = 0.0;\\n  vec3 p = vec3(\\n    // xy: linear interpolation of source & target\\n    mix(source, target, segmentRatio),\\n    // z: paraboloid interpolate of source & target\\n    sqrt(vertex_height)\\n  );\\n\\n  gl_Position = project(vec4(p, 1.0));\\n\\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\\n\\n  vColor = mix(\\n    vec4(color.rgb, color.a * opacity),\\n    vec4(instancePickingColors / 255., 1.),\\n    renderPickingBuffer\\n  );\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME arc-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: '_createModel',\n    value: function _createModel(gl) {\n      var positions = [];\n      var NUM_SEGMENTS = 50;\n      for (var i = 0; i < NUM_SEGMENTS; i++) {\n        positions = [].concat(_toConsumableArray(positions), [i, i, i]);\n      }\n\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].LINE_STRIP,\n          positions: new Float32Array(positions)\n        }),\n        isInstanced: true\n      });\n    }\n  }, {\n    key: 'calculateInstancePositions',\n    value: function calculateInstancePositions(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getSourcePosition = _props.getSourcePosition,\n          getTargetPosition = _props.getTargetPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var sourcePosition = getSourcePosition(object);\n          var targetPosition = getTargetPosition(object);\n          value[i + 0] = sourcePosition[0];\n          value[i + 1] = sourcePosition[1];\n          value[i + 2] = targetPosition[0];\n          value[i + 3] = targetPosition[1];\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceSourceColors',\n    value: function calculateInstanceSourceColors(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getSourceColor = _props2.getSourceColor;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var color = getSourceColor(object) || DEFAULT_COLOR;\n          value[i + 0] = color[0];\n          value[i + 1] = color[1];\n          value[i + 2] = color[2];\n          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceTargetColors',\n    value: function calculateInstanceTargetColors(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getTargetColor = _props3.getTargetColor;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var object = _step3.value;\n\n          var color = getTargetColor(object) || DEFAULT_COLOR;\n          value[i + 0] = color[0];\n          value[i + 1] = color[1];\n          value[i + 2] = color[2];\n          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ArcLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ArcLayer;\n\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 18 */
/* exports provided: default */
/* exports used: default */
/*!**************************************************!*\
  !*** ./src/layers/core/line-layer/line-layer.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [0, 255, 0, 255];\n\nvar defaultProps = {\n  getSourcePosition: function getSourcePosition(x) {\n    return x.sourcePosition;\n  },\n  getTargetPosition: function getTargetPosition(x) {\n    return x.targetPosition;\n  },\n  getColor: function getColor(x) {\n    return x.color || DEFAULT_COLOR;\n  },\n  strokeWidth: 1\n};\n\nvar LineLayer = function (_Layer) {\n  _inherits(LineLayer, _Layer);\n\n  function LineLayer() {\n    _classCallCheck(this, LineLayer);\n\n    return _possibleConstructorReturn(this, (LineLayer.__proto__ || Object.getPrototypeOf(LineLayer)).apply(this, arguments));\n  }\n\n  _createClass(LineLayer, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({ model: this.createModel(gl) });\n\n      var attributeManager = this.state.attributeManager;\n      /* eslint-disable max-len */\n\n      attributeManager.addInstanced({\n        instanceSourcePositions: { size: 3, accessor: 'getSourcePosition', update: this.calculateInstanceSourcePositions },\n        instanceTargetPositions: { size: 3, accessor: 'getTargetPosition', update: this.calculateInstanceTargetPositions },\n        instanceColors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateInstanceColors }\n      });\n      /* eslint-enable max-len */\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var gl = this.context.gl;\n\n      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);\n      gl.lineWidth(lineWidth);\n      this.state.model.render(uniforms);\n      // Setting line width back to 1 is here to workaround a Google Chrome bug\n      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with\n      // correct parameter\n      // This is not happening on Safari and Firefox\n      gl.lineWidth(1.0);\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME line-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec3 instanceSourcePositions;\\nattribute vec3 instanceTargetPositions;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  // Position\\n  vec3 source = project_position(instanceSourcePositions);\\n  vec3 target = project_position(instanceTargetPositions);\\n\\n  // linear interpolation of source & target to pick right coord\\n  float segmentIndex = positions.x;\\n  vec3 p = mix(source, target, segmentIndex);\\n\\n  gl_Position = project_to_clipspace(vec4(p, 1.));\\n\\n  // Color\\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\\n  vColor = mix(\\n    color,\\n    pickingColor,\\n    renderPickingBuffer\\n  );\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n#define SHADER_NAME line-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'createModel',\n    value: function createModel(gl) {\n      var positions = [0, 0, 0, 1, 1, 1];\n\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].LINE_STRIP,\n          positions: new Float32Array(positions)\n        }),\n        isInstanced: true\n      });\n    }\n  }, {\n    key: 'calculateInstanceSourcePositions',\n    value: function calculateInstanceSourcePositions(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getSourcePosition = _props.getSourcePosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var sourcePosition = getSourcePosition(object);\n          value[i + 0] = sourcePosition[0];\n          value[i + 1] = sourcePosition[1];\n          value[i + 2] = sourcePosition[2] || 0;\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceTargetPositions',\n    value: function calculateInstanceTargetPositions(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getTargetPosition = _props2.getTargetPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var targetPosition = getTargetPosition(object);\n          value[i + 0] = targetPosition[0];\n          value[i + 1] = targetPosition[1];\n          value[i + 2] = targetPosition[2] || 0;\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceColors',\n    value: function calculateInstanceColors(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getColor = _props3.getColor;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var object = _step3.value;\n\n          var color = getColor(object);\n          value[i + 0] = color[0];\n          value[i + 1] = color[1];\n          value[i + 2] = color[2];\n          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }]);\n\n  return LineLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = LineLayer;\n\n\nLineLayer.layerName = 'LineLayer';\nLineLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 19 */
/* exports provided: default */
/* exports used: default */
/*!**************************************************!*\
  !*** ./src/layers/core/path-layer/path-layer.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [0, 0, 0, 255];\n\nvar defaultProps = {\n  opacity: 1,\n  strokeWidth: 1, // stroke width in meters\n  miterLimit: 4,\n  strokeMinPixels: 0, //  min stroke width in pixels\n  strokeMaxPixels: Number.MAX_SAFE_INTEGER, // max stroke width in pixels\n  getPath: function getPath(object) {\n    return object.path;\n  },\n  getColor: function getColor(object) {\n    return object.color;\n  },\n  getWidth: function getWidth(object) {\n    return object.width;\n  }\n};\n\nvar isClosed = function isClosed(path) {\n  var firstPoint = path[0];\n  var lastPoint = path[path.length - 1];\n  return firstPoint[0] === lastPoint[0] && firstPoint[1] === lastPoint[1] && firstPoint[2] === lastPoint[2];\n};\n\nvar PathLayer = function (_Layer) {\n  _inherits(PathLayer, _Layer);\n\n  function PathLayer() {\n    _classCallCheck(this, PathLayer);\n\n    return _possibleConstructorReturn(this, (PathLayer.__proto__ || Object.getPrototypeOf(PathLayer)).apply(this, arguments));\n  }\n\n  _createClass(PathLayer, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '#define SHADER_NAME path-layer-vertex-shader\\n\\nattribute float directions;\\nattribute vec3 positions;\\nattribute vec3 leftDeltas;\\nattribute vec3 rightDeltas;\\n\\nattribute vec4 colors;\\nattribute vec3 pickingColors;\\n\\nuniform float thickness;\\nuniform float strokeMinPixels;\\nuniform float strokeMaxPixels;\\nuniform float miterLimit;\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\n// calculate line join positions\\nvec2 lineJoin(vec3 prevProjected, vec3 currProjected, vec3 nextProjected) {\\n  // get 2D screen coordinates\\n  vec2 prevScreen = prevProjected.xy;\\n  vec2 currScreen = currProjected.xy;\\n  vec2 nextScreen = nextProjected.xy;\\n\\n  float len = clamp(project_scale(thickness),\\n    strokeMinPixels, strokeMaxPixels);\\n\\n  vec2 dir = vec2(0.0);\\n  if (currScreen == prevScreen) {\\n    // starting point uses (next - current)\\n    dir = normalize(nextScreen - currScreen);\\n  } else if (currScreen == nextScreen) {\\n    // ending point uses (current - previous)\\n    dir = normalize(currScreen - prevScreen);\\n  } else {\\n    // somewhere in middle, needs a join\\n    // get directions from (C - B) and (B - A)\\n    vec2 dirA = normalize(currScreen - prevScreen);\\n    vec2 dirB = normalize(nextScreen - currScreen);\\n    // now compute the miter join normal and length\\n    vec2 tangent = normalize(dirA + dirB);\\n    vec2 perp = vec2(-dirA.y, dirA.x);\\n    vec2 miterVec = vec2(-tangent.y, tangent.x);\\n    dir = tangent;\\n    len *= min(miterLimit, 1.0 / dot(miterVec, perp));\\n  }\\n  vec2 normal = vec2(-dir.y, dir.x);\\n  normal *= len / 2.0;\\n\\n  return currProjected.xy + normal * directions;\\n}\\n\\nvoid main() {\\n  vec4 color = vec4(colors.rgb, colors.a * opacity) / 255.;\\n  vec4 pickingColor = vec4(pickingColors.rgb, 255.) / 255.;\\n  vColor = mix(color, pickingColor, renderPickingBuffer);\\n\\n  vec3 prevProjected = project_position(positions - leftDeltas);\\n  vec3 currProjected = project_position(positions);\\n  vec3 nextProjected = project_position(positions + rightDeltas);\\n\\n  gl_Position = project_to_clipspace(\\n    vec4(\\n      lineJoin(prevProjected, currProjected, nextProjected),\\n      currProjected.z + 0.1,\\n      1.0\\n    )\\n  );\\n}\\n',\n        fs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME path-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({\n        model: this.getModel(gl),\n        numInstances: 0,\n        IndexType: gl.getExtension('OES_element_index_uint') ? Uint32Array : Uint16Array\n      });\n\n      var attributeManager = this.state.attributeManager;\n\n      var noAlloc = true;\n      /* eslint-disable max-len */\n      attributeManager.addDynamic({\n        indices: { size: 1, isIndexed: true, update: this.calculateIndices, noAlloc: noAlloc },\n        positions: { size: 3, update: this.calculatePositions, noAlloc: noAlloc },\n        leftDeltas: { size: 3, update: this.calculateLeftDeltas, noAlloc: noAlloc },\n        rightDeltas: { size: 3, update: this.calculateRightDeltas, noAlloc: noAlloc },\n        directions: { size: 1, accessor: 'getWidth', update: this.calculateDirections, noAlloc: noAlloc },\n        colors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateColors, noAlloc: noAlloc },\n        pickingColors: { size: 3, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, update: this.calculatePickingColors, noAlloc: noAlloc }\n      });\n      /* eslint-enable max-len */\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var getPath = this.props.getPath;\n      var _state = this.state,\n          attributeManager = _state.attributeManager,\n          IndexType = _state.IndexType;\n\n\n      if (changeFlags.dataChanged) {\n        // this.state.paths only stores point positions in each path\n        var paths = props.data.map(getPath);\n        var pointCount = paths.reduce(function (count, path) {\n          return count + path.length;\n        }, 0);\n\n        // each point will generate two vertices for outside and inside\n        if (IndexType === Uint16Array && pointCount * 2 > 65535) {\n          throw new Error('Vertex count exceeds browser\\'s limit');\n        }\n\n        this.setState({ paths: paths, pointCount: pointCount });\n        attributeManager.invalidateAll();\n      }\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var _props = this.props,\n          opacity = _props.opacity,\n          strokeWidth = _props.strokeWidth,\n          miterLimit = _props.miterLimit,\n          strokeMinPixels = _props.strokeMinPixels,\n          strokeMaxPixels = _props.strokeMaxPixels;\n\n\n      this.state.model.render(Object.assign({}, uniforms, {\n        opacity: opacity,\n        thickness: strokeWidth,\n        miterLimit: miterLimit,\n        strokeMinPixels: strokeMinPixels,\n        strokeMaxPixels: strokeMaxPixels\n      }));\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        fs: shaders.fs,\n        vs: shaders.vs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].TRIANGLES\n        }),\n        vertexCount: 0,\n        isIndexed: true\n      });\n    }\n  }, {\n    key: 'calculateIndices',\n    value: function calculateIndices(attribute) {\n      var _state2 = this.state,\n          paths = _state2.paths,\n          IndexType = _state2.IndexType,\n          model = _state2.model,\n          pointCount = _state2.pointCount;\n\n      // each path with length n has n-1 line segments\n      // * 2 * 3: each segment is rendered as 2 triangles with 3 vertices\n\n      var indexCount = (pointCount - paths.length) * 2 * 3;\n      model.setVertexCount(indexCount);\n\n      var indices = new IndexType(indexCount);\n\n      var i = 0;\n      var offset = 0;\n      paths.forEach(function (path) {\n        // counter-clockwise triangulation\n        //                ___\n        //             0 |  /| 2  (outside edge)\n        //  o---o  =>    o / o\n        //             1 |/__| 3  (inside edge)\n        //\n        for (var ptIndex = 0; ptIndex < path.length - 1; ptIndex++) {\n          // triangle A with indices: 0, 1, 2\n          indices[i++] = offset + 0;\n          indices[i++] = offset + 1;\n          indices[i++] = offset + 2;\n          // triangle B with indices: 2, 1, 3\n          indices[i++] = offset + 2;\n          indices[i++] = offset + 1;\n          indices[i++] = offset + 3;\n          // move to the next segment\n          offset += 2;\n        }\n        // move to the next path\n        offset += 2;\n      });\n\n      attribute.value = indices;\n      attribute.target = __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].ELEMENT_ARRAY_BUFFER;\n    }\n  }, {\n    key: 'calculatePositions',\n    value: function calculatePositions(attribute) {\n      var _state3 = this.state,\n          paths = _state3.paths,\n          pointCount = _state3.pointCount;\n\n      var positions = new Float32Array(pointCount * attribute.size * 2);\n\n      var i = 0;\n      paths.forEach(function (path) {\n        path.forEach(function (point) {\n          // two copies for outside edge and inside edge each\n          positions[i++] = point[0];\n          positions[i++] = point[1];\n          positions[i++] = point[2] || 0;\n          positions[i++] = point[0];\n          positions[i++] = point[1];\n          positions[i++] = point[2] || 0;\n        });\n      });\n\n      attribute.value = positions;\n    }\n  }, {\n    key: 'calculateLeftDeltas',\n    value: function calculateLeftDeltas(attribute) {\n      var _state4 = this.state,\n          paths = _state4.paths,\n          pointCount = _state4.pointCount;\n      var size = attribute.size;\n\n\n      var leftDeltas = new Float32Array(pointCount * size * 2);\n\n      var i = 0;\n      paths.forEach(function (path) {\n        path.reduce(function (prevPoint, point) {\n          if (prevPoint) {\n            // two copies for outside edge and inside edge each\n            leftDeltas[i++] = point[0] - prevPoint[0];\n            leftDeltas[i++] = point[1] - prevPoint[1];\n            leftDeltas[i++] = point[2] - prevPoint[2] || 0;\n            leftDeltas[i++] = point[0] - prevPoint[0];\n            leftDeltas[i++] = point[1] - prevPoint[1];\n            leftDeltas[i++] = point[2] - prevPoint[2] || 0;\n          }\n          return point;\n        }, isClosed(path) ? path[path.length - 2] : path[0]);\n      });\n\n      attribute.value = leftDeltas;\n    }\n  }, {\n    key: 'calculateRightDeltas',\n    value: function calculateRightDeltas(attribute) {\n      var _state5 = this.state,\n          paths = _state5.paths,\n          pointCount = _state5.pointCount;\n      var size = attribute.size;\n\n\n      var rightDeltas = new Float32Array(pointCount * size * 2);\n\n      var i = 0;\n      paths.forEach(function (path) {\n        path.forEach(function (point, ptIndex) {\n          var nextPoint = path[ptIndex + 1];\n          if (!nextPoint) {\n            nextPoint = isClosed(path) ? path[1] : point;\n          }\n\n          // two copies for outside edge and inside edge each\n          rightDeltas[i++] = nextPoint[0] - point[0];\n          rightDeltas[i++] = nextPoint[1] - point[1];\n          rightDeltas[i++] = nextPoint[2] - point[2] || 0;\n          rightDeltas[i++] = nextPoint[0] - point[0];\n          rightDeltas[i++] = nextPoint[1] - point[1];\n          rightDeltas[i++] = nextPoint[2] - point[2] || 0;\n        });\n      });\n\n      attribute.value = rightDeltas;\n    }\n  }, {\n    key: 'calculateDirections',\n    value: function calculateDirections(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getWidth = _props2.getWidth;\n      var _state6 = this.state,\n          paths = _state6.paths,\n          pointCount = _state6.pointCount;\n\n      var directions = new Float32Array(pointCount * 2);\n\n      var i = 0;\n      paths.forEach(function (path, index) {\n        var w = getWidth(data[index], index);\n        if (isNaN(w)) {\n          w = 1;\n        }\n        for (var ptIndex = 0; ptIndex < path.length; ptIndex++) {\n          directions[i++] = w;\n          directions[i++] = -w;\n        }\n      });\n\n      attribute.value = directions;\n    }\n  }, {\n    key: 'calculateColors',\n    value: function calculateColors(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getColor = _props3.getColor;\n      var _state7 = this.state,\n          paths = _state7.paths,\n          pointCount = _state7.pointCount;\n      var size = attribute.size;\n\n      var colors = new Uint8ClampedArray(pointCount * size * 2);\n\n      var i = 0;\n      paths.forEach(function (path, index) {\n        var color = getColor(data[index], index) || DEFAULT_COLOR;\n        if (Array.isArray(color[0])) {\n          if (color.length !== path.length) {\n            throw new Error('PathLayer getColor() returned a color array, but the number of ' + ('colors returned doesn\\'t match the number of points in the path. Index ' + index));\n          }\n          color.forEach(function (pointColor) {\n            var alpha = isNaN(pointColor[3]) ? 255 : pointColor[3];\n            // two copies for outside edge and inside edge each\n            colors[i++] = pointColor[0];\n            colors[i++] = pointColor[1];\n            colors[i++] = pointColor[2];\n            colors[i++] = alpha;\n            colors[i++] = pointColor[0];\n            colors[i++] = pointColor[1];\n            colors[i++] = pointColor[2];\n            colors[i++] = alpha;\n          });\n        } else {\n          var pointColor = color;\n          if (isNaN(pointColor[3])) {\n            pointColor[3] = 255;\n          }\n          for (var ptIndex = 0; ptIndex < path.length; ptIndex++) {\n            // two copies for outside edge and inside edge each\n            colors[i++] = pointColor[0];\n            colors[i++] = pointColor[1];\n            colors[i++] = pointColor[2];\n            colors[i++] = pointColor[3];\n            colors[i++] = pointColor[0];\n            colors[i++] = pointColor[1];\n            colors[i++] = pointColor[2];\n            colors[i++] = pointColor[3];\n          }\n        }\n      });\n\n      attribute.value = colors;\n    }\n\n    // Override the default picking colors calculation\n\n  }, {\n    key: 'calculatePickingColors',\n    value: function calculatePickingColors(attribute) {\n      var _this2 = this;\n\n      var _state8 = this.state,\n          paths = _state8.paths,\n          pointCount = _state8.pointCount;\n      var size = attribute.size;\n\n      var pickingColors = new Uint8ClampedArray(pointCount * size * 2);\n\n      var i = 0;\n      paths.forEach(function (path, index) {\n        var pickingColor = _this2.encodePickingColor(index);\n        for (var ptIndex = 0; ptIndex < path.length; ptIndex++) {\n          // two copies for outside edge and inside edge each\n          pickingColors[i++] = pickingColor[0];\n          pickingColors[i++] = pickingColor[1];\n          pickingColors[i++] = pickingColor[2];\n          pickingColors[i++] = pickingColor[0];\n          pickingColors[i++] = pickingColor[1];\n          pickingColors[i++] = pickingColor[2];\n        }\n      });\n\n      attribute.value = pickingColors;\n    }\n  }]);\n\n  return PathLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = PathLayer;\n\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 20 */
/* exports provided: default */
/* exports used: default */
/*!********************************************************!*\
  !*** ./src/layers/core/polygon-layer/polygon-layer.js ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__polygon_tesselator__ = __webpack_require__(/*! ./polygon-tesselator */ 50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__polygon_tesselator_extruded__ = __webpack_require__(/*! ./polygon-tesselator-extruded */ 49);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\n// Polygon geometry generation is managed by the polygon tesselator\n\n\n\n\n// const defaultColor = [0, 0, 0, 255];\n\nvar defaultProps = {\n  // Whether to extrude in 2.5D\n  extruded: false,\n  // Whether to draw a GL.LINES wireframe of the polygon\n  // TODO - not clear that this should be part of the main layer\n  wireframe: false,\n  // Accessor for polygon geometry\n  getPolygon: function getPolygon(f) {\n    return __WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"c\" /* Container */].get(f, 'polygon') || __WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"c\" /* Container */].get(f, 'geometry.coordinates');\n  },\n  // Accessor for extrusion height\n  getHeight: function getHeight(f) {\n    return __WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"c\" /* Container */].get(f, 'height') || __WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"c\" /* Container */].get(f, 'properties.height') || 0;\n  },\n  // Accessor for color\n  getColor: function getColor(f) {\n    return __WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"c\" /* Container */].get(f, 'color') || __WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"c\" /* Container */].get(f, 'properties.color');\n  },\n  // Optional settings for 'lighting' shader module\n  lightSettings: {}\n};\n\nvar PolygonLayer = function (_Layer) {\n  _inherits(PolygonLayer, _Layer);\n\n  function PolygonLayer() {\n    _classCallCheck(this, PolygonLayer);\n\n    return _possibleConstructorReturn(this, (PolygonLayer.__proto__ || Object.getPrototypeOf(PolygonLayer)).apply(this, arguments));\n  }\n\n  _createClass(PolygonLayer, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n#define SHADER_NAME polygon-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec3 normals;\\nattribute vec4 colors;\\nattribute vec3 pickingColors;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\nuniform vec3 selectedPickingColor;\\n\\n// PICKING\\nuniform float pickingEnabled;\\nvarying vec4 vPickingColor;\\n\\nvoid picking_setPickColor(vec3 pickingColor) {\\n  vPickingColor = vec4(pickingColor,  1.);\\n}\\n\\nvec4 picking_setNormalAndPickColors(vec4 color, vec3 pickingColor) {\\n  vec4 pickingColor4 = vec4(pickingColor.rgb, 1.);\\n  vPickingColor = mix(color, pickingColor4, pickingEnabled);\\n  return color;\\n}\\n\\n// vec4 getColor(vec4 color, float opacity, vec3 pickingColor, float renderPickingBuffer) {\\n//   vec4 color4 = vec4(color.xyz / 255., color.w / 255. * opacity);\\n//   vec4 pickingColor4 = vec4(pickingColor / 255., 1.);\\n//   return mix(color4, pickingColor4, renderPickingBuffer);\\n// }\\n\\nvoid main(void) {\\n  vec3 position_modelspace = project_position(positions);\\n  gl_Position = project_to_clipspace(vec4(position_modelspace, 1.));\\n\\n  vec3 litColor = lighting_filterColor(position_modelspace, normals, colors.rgb);\\n  // vec3 litColor = colors.rgb;\\n\\n  vec4 color = vec4(litColor.rgb, colors.a * opacity) / 255.;\\n  picking_setNormalAndPickColors(color, pickingColors / 255.);\\n}\\n',\n        fs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n#define SHADER_NAME polygon-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\n// PICKING\\n// uniform bool pickingEnabled;\\nvarying vec4 vPickingColor;\\nvec4 picking_getColor() {\\n  return vPickingColor;\\n}\\n// PICKING\\n\\nvoid main(void) {\\n  gl_FragColor = picking_getColor();\\n}\\n',\n        modules: ['lighting']\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({\n        model: this.getModel(gl),\n        numInstances: 0,\n        IndexType: gl.getExtension('OES_element_index_uint') ? Uint32Array : Uint16Array\n      });\n\n      var attributeManager = this.state.attributeManager;\n\n      var noAlloc = true;\n      /* eslint-disable max-len */\n      attributeManager.addDynamic({\n        indices: { size: 1, isIndexed: true, update: this.calculateIndices, noAlloc: noAlloc },\n        positions: { size: 3, accessor: 'getHeight', update: this.calculatePositions, noAlloc: noAlloc },\n        normals: { size: 3, update: this.calculateNormals, noAlloc: noAlloc },\n        colors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateColors, noAlloc: noAlloc },\n        pickingColors: { size: 3, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, update: this.calculatePickingColors, noAlloc: noAlloc }\n      });\n      /* eslint-enable max-len */\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var props = _ref.props,\n          oldProps = _ref.oldProps,\n          changeFlags = _ref.changeFlags;\n\n      this.updateGeometry({ props: props, oldProps: oldProps, changeFlags: changeFlags });\n\n      if (props.extruded) {\n        this.setUniforms(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"b\" /* lighting */].updateSettings({\n          settings: props.lightSettings,\n          prevSettings: oldProps.lightSettings\n        }));\n      } else {\n        this.setUniforms(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"b\" /* lighting */].updateSettings({ settings: { enabled: false } }));\n      }\n    }\n  }, {\n    key: 'updateGeometry',\n    value: function updateGeometry(_ref2) {\n      var _this2 = this;\n\n      var props = _ref2.props,\n          oldProps = _ref2.oldProps,\n          changeFlags = _ref2.changeFlags;\n\n      var geometryChanged = props.extruded !== oldProps.extruded || props.wireframe !== oldProps.wireframe;\n\n      if (changeFlags.dataChanged || geometryChanged) {\n        (function () {\n          var getPolygon = props.getPolygon,\n              extruded = props.extruded,\n              wireframe = props.wireframe,\n              _getHeight = props.getHeight;\n\n          // TODO - avoid creating a temporary array here: let the tesselator iterate\n\n          var polygons = props.data.map(getPolygon);\n\n          _this2.setState({\n            polygonTesselator: !extruded ? new __WEBPACK_IMPORTED_MODULE_5__polygon_tesselator__[\"a\" /* PolygonTesselator */]({ polygons: polygons }) : new __WEBPACK_IMPORTED_MODULE_6__polygon_tesselator_extruded__[\"a\" /* PolygonTesselatorExtruded */]({ polygons: polygons, wireframe: wireframe,\n              getHeight: function getHeight(polygonIndex) {\n                return _getHeight(_this2.props.data[polygonIndex]);\n              }\n            })\n          });\n\n          _this2.state.attributeManager.invalidateAll();\n        })();\n      }\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: this.props.wireframe ? __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].LINES : __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].TRIANGLES\n        }),\n        vertexCount: 0,\n        isIndexed: true\n      });\n    }\n  }, {\n    key: 'calculateIndices',\n    value: function calculateIndices(attribute) {\n      attribute.value = this.state.polygonTesselator.indices();\n      attribute.target = __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].ELEMENT_ARRAY_BUFFER;\n      this.state.model.setVertexCount(attribute.value.length / attribute.size);\n    }\n  }, {\n    key: 'calculatePositions',\n    value: function calculatePositions(attribute) {\n      attribute.value = this.state.polygonTesselator.positions();\n    }\n  }, {\n    key: 'calculateNormals',\n    value: function calculateNormals(attribute) {\n      attribute.value = this.state.polygonTesselator.normals();\n    }\n  }, {\n    key: 'calculateColors',\n    value: function calculateColors(attribute) {\n      var _this3 = this;\n\n      attribute.value = this.state.polygonTesselator.colors({\n        getColor: function getColor(polygonIndex) {\n          return _this3.props.getColor(_this3.props.data[polygonIndex]);\n        }\n      });\n    }\n\n    // Override the default picking colors calculation\n\n  }, {\n    key: 'calculatePickingColors',\n    value: function calculatePickingColors(attribute) {\n      attribute.value = this.state.polygonTesselator.pickingColors();\n    }\n  }]);\n\n  return PolygonLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = PolygonLayer;\n\n\nPolygonLayer.layerName = 'PolygonLayer';\nPolygonLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 21 */
/* exports provided: default */
/* exports used: default */
/*!****************************************************************!*\
  !*** ./src/layers/core/scatterplot-layer/scatterplot-layer.js ***!
  \****************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [255, 0, 255, 255];\n\nvar defaultProps = {\n  getPosition: function getPosition(x) {\n    return x.position;\n  },\n  getRadius: function getRadius(x) {\n    return x.radius || 30;\n  },\n  getColor: function getColor(x) {\n    return x.color || DEFAULT_COLOR;\n  },\n  radius: 30, //  point radius in meters\n  radiusMinPixels: 0, //  min point radius in pixels\n  radiusMaxPixels: Number.MAX_SAFE_INTEGER, // max point radius in pixels\n  drawOutline: false,\n  strokeWidth: 1\n};\n\nvar ScatterplotLayer = function (_Layer) {\n  _inherits(ScatterplotLayer, _Layer);\n\n  function ScatterplotLayer() {\n    _classCallCheck(this, ScatterplotLayer);\n\n    return _possibleConstructorReturn(this, (ScatterplotLayer.__proto__ || Object.getPrototypeOf(ScatterplotLayer)).apply(this, arguments));\n  }\n\n  _createClass(ScatterplotLayer, [{\n    key: 'getShaders',\n    value: function getShaders(id) {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME scatterplot-layer-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec3 instancePositions;\\nattribute float instanceRadius;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float radius;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  // Multiply out radius and clamp to limits\\n  float radiusPixels = clamp(\\n    project_scale(radius * instanceRadius),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n\\n  // Find the center of the point and add the current vertex\\n  vec3 center = project_position(instancePositions);\\n  vec3 vertex = positions * radiusPixels;\\n  gl_Position = project_to_clipspace(vec4(center + vertex, 1.0));\\n\\n  // Apply opacity to instance color, or return instance picking color\\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\\n  vColor = mix(color, pickingColor, renderPickingBuffer);\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({ model: this._getModel(gl) });\n\n      /* eslint-disable max-len */\n      this.state.attributeManager.addInstanced({\n        instancePositions: { size: 3, accessor: 'getPosition', update: this.calculateInstancePositions },\n        instanceRadius: { size: 1, accessor: 'getRadius', defaultValue: 1, update: this.calculateInstanceRadius },\n        instanceColors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateInstanceColors }\n      });\n      /* eslint-enable max-len */\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(info) {\n      var props = info.props,\n          oldProps = info.oldProps;\n\n      if (props.drawOutline !== oldProps.drawOutline) {\n        this.state.model.geometry.drawMode = props.drawOutline ? __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].LINE_LOOP : __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].TRIANGLE_FAN;\n      }\n      _get(ScatterplotLayer.prototype.__proto__ || Object.getPrototypeOf(ScatterplotLayer.prototype), 'updateState', this).call(this, info);\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var gl = this.context.gl;\n\n      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);\n      gl.lineWidth(lineWidth);\n      this.state.model.render(Object.assign({}, uniforms, {\n        radius: this.props.radius,\n        radiusMinPixels: this.props.radiusMinPixels,\n        radiusMaxPixels: this.props.radiusMaxPixels\n      }));\n      // Setting line width back to 1 is here to workaround a Google Chrome bug\n      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with\n      // correct parameter\n      // This is not happening on Safari and Firefox\n      gl.lineWidth(1.0);\n    }\n  }, {\n    key: '_getModel',\n    value: function _getModel(gl) {\n      var NUM_SEGMENTS = 16;\n      var positions = [];\n      for (var i = 0; i < NUM_SEGMENTS; i++) {\n        positions.push(Math.cos(Math.PI * 2 * i / NUM_SEGMENTS), Math.sin(Math.PI * 2 * i / NUM_SEGMENTS), 0);\n      }\n      /* eslint-disable */\n\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].TRIANGLE_FAN,\n          positions: new Float32Array(positions)\n        }),\n        isInstanced: true\n      });\n      return model;\n    }\n  }, {\n    key: 'calculateInstancePositions',\n    value: function calculateInstancePositions(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getPosition = _props.getPosition;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var point = _step.value;\n\n          var position = getPosition(point);\n          value[i++] = position[0];\n          value[i++] = position[1];\n          value[i++] = position[2] || 0;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceRadius',\n    value: function calculateInstanceRadius(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getRadius = _props2.getRadius;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var point = _step2.value;\n\n          var radius = getRadius(point);\n          value[i++] = isNaN(radius) ? 1 : radius;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceColors',\n    value: function calculateInstanceColors(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getColor = _props3.getColor;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var point = _step3.value;\n\n          var color = getColor(point) || DEFAULT_COLOR;\n          value[i++] = color[0];\n          value[i++] = color[1];\n          value[i++] = color[2];\n          value[i++] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ScatterplotLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ScatterplotLayer;\n\n\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 22 */
/* exports provided: default */
/* exports used: default */
/*!*********************************************************!*\
  !*** ./src/layers/deprecated/choropleth-layer/index.js ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__choropleth_layer__ = __webpack_require__(/*! ./choropleth-layer */ 52);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__choropleth_layer__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2RlcHJlY2F0ZWQvY2hvcm9wbGV0aC1sYXllci9pbmRleC5qcz84OTFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2Nob3JvcGxldGgtbGF5ZXInO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xheWVycy9kZXByZWNhdGVkL2Nob3JvcGxldGgtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 23 */
/* exports provided: isSimple, normalize, getVertexCount, getTriangleCount, forEachVertex */
/* exports used: normalize, getVertexCount, getTriangleCount, forEachVertex */
/*!**************************************************!*\
  !*** ./src/layers/core/polygon-layer/polygon.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* unused harmony export isSimple */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = normalize;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getVertexCount;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getTriangleCount;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = forEachVertex;\n\n\n// Basic polygon support\n//\n// Handles simple and complex polygons\n// Simple polygons are arrays of vertices, implicitly \"closed\"\n// Complex polygons are arrays of simple polygons, with the first polygon\n// representing the outer hull and other polygons representing holes\n\n/**\n * Check if this is a non-nested polygon (i.e. the first element of the first element is a number)\n * @param {Array} polygon - either a complex or simple polygon\n * @return {Boolean} - true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction isSimple(polygon) {\n  return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n\n/**\n * Normalize to ensure that all polygons in a list are complex - simplifies processing\n * @param {Array} polygon - either a complex or a simple polygon\n * @param {Object} opts\n * @param {Object} opts.dimensions - if 3, the coords will be padded with 0's if needed\n * @return {Array} - returns a complex polygons\n */\nfunction normalize(polygon) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$dimensions = _ref.dimensions,\n      dimensions = _ref$dimensions === undefined ? 3 : _ref$dimensions;\n\n  return isSimple(polygon) ? [polygon] : polygon;\n}\n\n/**\n * Check if this is a non-nested polygon (i.e. the first element of the first element is a number)\n * @param {Array} polygon - either a complex or simple polygon\n * @return {Boolean} - true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction getVertexCount(polygon) {\n  return isSimple(polygon) ? __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].count(polygon) : polygon.reduce(function (count, simplePolygon) {\n    return count + __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].count(simplePolygon);\n  }, 0);\n}\n\n// Return number of triangles needed to tesselate the polygon\nfunction getTriangleCount(polygon) {\n  var triangleCount = 0;\n  var first = true;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = normalize(polygon)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var simplePolygon = _step.value;\n\n      var size = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].count(simplePolygon);\n      if (first) {\n        triangleCount += size > 3 ? size - 3 : 0;\n      } else {\n        triangleCount += size + 1;\n      }\n      first = false;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return triangleCount;\n}\n\nfunction forEachVertex(polygon, visitor) {\n  if (isSimple(polygon)) {\n    __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(polygon, visitor);\n    return;\n  }\n\n  var vertexIndex = 0;\n  __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(polygon, function (simplePolygon) {\n    __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(simplePolygon, function (v, i, p) {\n      return visitor(v, vertexIndex, polygon);\n    });\n    vertexIndex++;\n  });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2NvcmUvcG9seWdvbi1sYXllci9wb2x5Z29uLmpzPzA0NWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSAnLi4vLi4vLi4vbGliL3V0aWxzJztcblxuLy8gQmFzaWMgcG9seWdvbiBzdXBwb3J0XG4vL1xuLy8gSGFuZGxlcyBzaW1wbGUgYW5kIGNvbXBsZXggcG9seWdvbnNcbi8vIFNpbXBsZSBwb2x5Z29ucyBhcmUgYXJyYXlzIG9mIHZlcnRpY2VzLCBpbXBsaWNpdGx5IFwiY2xvc2VkXCJcbi8vIENvbXBsZXggcG9seWdvbnMgYXJlIGFycmF5cyBvZiBzaW1wbGUgcG9seWdvbnMsIHdpdGggdGhlIGZpcnN0IHBvbHlnb25cbi8vIHJlcHJlc2VudGluZyB0aGUgb3V0ZXIgaHVsbCBhbmQgb3RoZXIgcG9seWdvbnMgcmVwcmVzZW50aW5nIGhvbGVzXG5cbi8qKlxuICogQ2hlY2sgaWYgdGhpcyBpcyBhIG5vbi1uZXN0ZWQgcG9seWdvbiAoaS5lLiB0aGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgZmlyc3QgZWxlbWVudCBpcyBhIG51bWJlcilcbiAqIEBwYXJhbSB7QXJyYXl9IHBvbHlnb24gLSBlaXRoZXIgYSBjb21wbGV4IG9yIHNpbXBsZSBwb2x5Z29uXG4gKiBAcmV0dXJuIHtCb29sZWFufSAtIHRydWUgaWYgdGhlIHBvbHlnb24gaXMgYSBzaW1wbGUgcG9seWdvbiAoaS5lLiBub3QgYW4gYXJyYXkgb2YgcG9seWdvbnMpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NpbXBsZShwb2x5Z29uKSB7XG4gIHJldHVybiBwb2x5Z29uLmxlbmd0aCA+PSAxICYmIHBvbHlnb25bMF0ubGVuZ3RoID49IDIgJiYgTnVtYmVyLmlzRmluaXRlKHBvbHlnb25bMF1bMF0pO1xufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0byBlbnN1cmUgdGhhdCBhbGwgcG9seWdvbnMgaW4gYSBsaXN0IGFyZSBjb21wbGV4IC0gc2ltcGxpZmllcyBwcm9jZXNzaW5nXG4gKiBAcGFyYW0ge0FycmF5fSBwb2x5Z29uIC0gZWl0aGVyIGEgY29tcGxleCBvciBhIHNpbXBsZSBwb2x5Z29uXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICogQHBhcmFtIHtPYmplY3R9IG9wdHMuZGltZW5zaW9ucyAtIGlmIDMsIHRoZSBjb29yZHMgd2lsbCBiZSBwYWRkZWQgd2l0aCAwJ3MgaWYgbmVlZGVkXG4gKiBAcmV0dXJuIHtBcnJheX0gLSByZXR1cm5zIGEgY29tcGxleCBwb2x5Z29uc1xuICovXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplKHBvbHlnb24pIHtcbiAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LFxuICAgICAgX3JlZiRkaW1lbnNpb25zID0gX3JlZi5kaW1lbnNpb25zLFxuICAgICAgZGltZW5zaW9ucyA9IF9yZWYkZGltZW5zaW9ucyA9PT0gdW5kZWZpbmVkID8gMyA6IF9yZWYkZGltZW5zaW9ucztcblxuICByZXR1cm4gaXNTaW1wbGUocG9seWdvbikgPyBbcG9seWdvbl0gOiBwb2x5Z29uO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHRoaXMgaXMgYSBub24tbmVzdGVkIHBvbHlnb24gKGkuZS4gdGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIGZpcnN0IGVsZW1lbnQgaXMgYSBudW1iZXIpXG4gKiBAcGFyYW0ge0FycmF5fSBwb2x5Z29uIC0gZWl0aGVyIGEgY29tcGxleCBvciBzaW1wbGUgcG9seWdvblxuICogQHJldHVybiB7Qm9vbGVhbn0gLSB0cnVlIGlmIHRoZSBwb2x5Z29uIGlzIGEgc2ltcGxlIHBvbHlnb24gKGkuZS4gbm90IGFuIGFycmF5IG9mIHBvbHlnb25zKVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmVydGV4Q291bnQocG9seWdvbikge1xuICByZXR1cm4gaXNTaW1wbGUocG9seWdvbikgPyBDb250YWluZXIuY291bnQocG9seWdvbikgOiBwb2x5Z29uLnJlZHVjZShmdW5jdGlvbiAoY291bnQsIHNpbXBsZVBvbHlnb24pIHtcbiAgICByZXR1cm4gY291bnQgKyBDb250YWluZXIuY291bnQoc2ltcGxlUG9seWdvbik7XG4gIH0sIDApO1xufVxuXG4vLyBSZXR1cm4gbnVtYmVyIG9mIHRyaWFuZ2xlcyBuZWVkZWQgdG8gdGVzc2VsYXRlIHRoZSBwb2x5Z29uXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJpYW5nbGVDb3VudChwb2x5Z29uKSB7XG4gIHZhciB0cmlhbmdsZUNvdW50ID0gMDtcbiAgdmFyIGZpcnN0ID0gdHJ1ZTtcbiAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gbm9ybWFsaXplKHBvbHlnb24pW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgdmFyIHNpbXBsZVBvbHlnb24gPSBfc3RlcC52YWx1ZTtcblxuICAgICAgdmFyIHNpemUgPSBDb250YWluZXIuY291bnQoc2ltcGxlUG9seWdvbik7XG4gICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgdHJpYW5nbGVDb3VudCArPSBzaXplID4gMyA/IHNpemUgLSAzIDogMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyaWFuZ2xlQ291bnQgKz0gc2l6ZSArIDE7XG4gICAgICB9XG4gICAgICBmaXJzdCA9IGZhbHNlO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJpYW5nbGVDb3VudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2hWZXJ0ZXgocG9seWdvbiwgdmlzaXRvcikge1xuICBpZiAoaXNTaW1wbGUocG9seWdvbikpIHtcbiAgICBDb250YWluZXIuZm9yRWFjaChwb2x5Z29uLCB2aXNpdG9yKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgdmVydGV4SW5kZXggPSAwO1xuICBDb250YWluZXIuZm9yRWFjaChwb2x5Z29uLCBmdW5jdGlvbiAoc2ltcGxlUG9seWdvbikge1xuICAgIENvbnRhaW5lci5mb3JFYWNoKHNpbXBsZVBvbHlnb24sIGZ1bmN0aW9uICh2LCBpLCBwKSB7XG4gICAgICByZXR1cm4gdmlzaXRvcih2LCB2ZXJ0ZXhJbmRleCwgcG9seWdvbik7XG4gICAgfSk7XG4gICAgdmVydGV4SW5kZXgrKztcbiAgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGF5ZXJzL2NvcmUvcG9seWdvbi1sYXllci9wb2x5Z29uLmpzXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 24 */
/* exports provided: default */
/* exports used: default */
/*!****************************************************!*\
  !*** ./src/layers/core/scatterplot-layer/index.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scatterplot_layer__ = __webpack_require__(/*! ./scatterplot-layer */ 21);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__scatterplot_layer__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2NvcmUvc2NhdHRlcnBsb3QtbGF5ZXIvaW5kZXguanM/ZjE2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9zY2F0dGVycGxvdC1sYXllcic7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGF5ZXJzL2NvcmUvc2NhdHRlcnBsb3QtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 25 */
/* exports provided: default */
/* exports used: default */
/*!**************************************!*\
  !*** ./src/lib/attribute-manager.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(/*! ./utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_assert__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable guard-for-in */\n\n\n\nfunction noop() {}\n\nvar AttributeManager = function () {\n  /**\n   * @classdesc\n   * Automated attribute generation and management. Suitable when a set of\n   * vertex shader attributes are generated by iteration over a data array,\n   * and updates to these attributes are needed either when the data itself\n   * changes, or when other data relevant to the calculations change.\n   *\n   * - First the application registers descriptions of its dynamic vertex\n   *   attributes using AttributeManager.add().\n   * - Then, when any change that affects attributes is detected by the\n   *   application, the app will call AttributeManager.invalidate().\n   * - Finally before it renders, it calls AttributeManager.update() to\n   *   ensure that attributes are automatically rebuilt if anything has been\n   *   invalidated.\n   *\n   * The application provided update functions describe how attributes\n   * should be updated from a data array and are expected to traverse\n   * that data array (or iterable) and fill in the attribute's typed array.\n   *\n   * Note that the attribute manager intentionally does not do advanced\n   * change detection, but instead makes it easy to build such detection\n   * by offering the ability to \"invalidate\" each attribute separately.\n   *\n   * Summary:\n   * - keeps track of valid state for each attribute\n   * - auto reallocates attributes when needed\n   * - auto updates attributes with registered updater functions\n   * - allows overriding with application supplied buffers\n   *\n   * Limitations:\n   * - There are currently no provisions for only invalidating a range of\n   *   indices in an attribute.\n   *\n   * @class\n   * @param {Object} [props]\n   * @param {String} [props.id] - identifier (for debugging)\n   */\n  function AttributeManager() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$id = _ref.id,\n        id = _ref$id === undefined ? 'attribute-manager' : _ref$id;\n\n    _classCallCheck(this, AttributeManager);\n\n    this.id = id;\n    this.attributes = {};\n    this.updateTriggers = {};\n    this.allocedInstances = -1;\n    this.needsRedraw = true;\n    this.userData = {};\n\n    this.onUpdateStart = noop;\n    this.onUpdateEnd = noop;\n    this.onLog = this._defaultLog;\n\n    // For debugging sanity, prevent uninitialized members\n    Object.seal(this);\n  }\n\n  /**\n   * Adds attributes\n   * Takes a map of attribute descriptor objects\n   * - keys are attribute names\n   * - values are objects with attribute fields\n   *\n   * attribute.size - number of elements per object\n   * attribute.updater - number of elements\n   * attribute.instanced=0 - is this is an instanced attribute (a.k.a. divisor)\n   * attribute.noAlloc=false - if this attribute should not be allocated\n   *\n   * @example\n   * attributeManager.add({\n   *   positions: {size: 2, update: calculatePositions}\n   *   colors: {size: 3, update: calculateColors}\n   * });\n   *\n   * @param {Object} attributes - attribute map (see above)\n   * @param {Object} updaters - separate map of update functions (deprecated)\n   */\n\n\n  _createClass(AttributeManager, [{\n    key: 'add',\n    value: function add(attributes) {\n      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._add(attributes, updaters);\n    }\n\n    /* Marks an attribute for update\n     * @param {string} triggerName: attribute or accessor name\n     */\n\n  }, {\n    key: 'invalidate',\n    value: function invalidate(triggerName) {\n      var attributes = this.attributes,\n          updateTriggers = this.updateTriggers;\n\n      var attributesToUpdate = updateTriggers[triggerName];\n\n      if (!attributesToUpdate) {\n        var message = 'invalidating non-existent attribute ' + triggerName + ' for ' + this.id + '\\n';\n        message += 'Valid attributes: ' + Object.keys(attributes).join(', ');\n        __WEBPACK_IMPORTED_MODULE_2_assert___default()(attributesToUpdate, message);\n      }\n      attributesToUpdate.forEach(function (name) {\n        var attribute = attributes[name];\n        if (attribute) {\n          attribute.needsUpdate = true;\n        }\n      });\n      // For performance tuning\n      this.onLog(1, 'invalidated attribute ' + attributesToUpdate + ' for ' + this.id);\n    }\n  }, {\n    key: 'invalidateAll',\n    value: function invalidateAll() {\n      var attributes = this.attributes;\n\n      for (var attributeName in attributes) {\n        this.invalidate(attributeName);\n      }\n    }\n\n    /**\n     * Ensure all attribute buffers are updated from props or data.\n     *\n     * Note: Any preallocated buffers in \"buffers\" matching registered attribute\n     * names will be used. No update will happen in this case.\n     * Note: Calls onUpdateStart and onUpdateEnd log callbacks before and after.\n     *\n     * @param {Object} opts - options\n     * @param {Object} opts.data - data (iterable object)\n     * @param {Object} opts.numInstances - count of data\n     * @param {Object} opts.buffers = {} - pre-allocated buffers\n     * @param {Object} opts.props - passed to updaters\n     * @param {Object} opts.context - Used as \"this\" context for updaters\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          data = _ref2.data,\n          numInstances = _ref2.numInstances,\n          _ref2$props = _ref2.props,\n          props = _ref2$props === undefined ? {} : _ref2$props,\n          _ref2$buffers = _ref2.buffers,\n          buffers = _ref2$buffers === undefined ? {} : _ref2$buffers,\n          _ref2$context = _ref2.context,\n          context = _ref2$context === undefined ? {} : _ref2$context,\n          _ref2$ignoreUnknownAt = _ref2.ignoreUnknownAttributes,\n          ignoreUnknownAttributes = _ref2$ignoreUnknownAt === undefined ? false : _ref2$ignoreUnknownAt;\n\n      // First apply any application provided buffers\n      this._checkExternalBuffers({ buffers: buffers, ignoreUnknownAttributes: ignoreUnknownAttributes });\n      this._setExternalBuffers(buffers);\n\n      // Only initiate alloc/update (and logging) if actually needed\n      if (this._analyzeBuffers({ numInstances: numInstances })) {\n        this.onUpdateStart(this.id);\n        this._updateBuffers({ numInstances: numInstances, data: data, props: props, context: context });\n        this.onUpdateEnd(this.id);\n      }\n    }\n\n    /**\n     * Sets log functions to help trace or time attribute updates.\n     * Default logging uses luma logger.\n     *\n     * Note that the app may not be in control of when update is called,\n     * so hooks are provided for update start and end.\n     *\n     * @param {Object} [opts]\n     * @param {String} [opts.onLog=] - called to print\n     * @param {String} [opts.onUpdateStart=] - called before update() starts\n     * @param {String} [opts.onUpdateEnd=] - called after update() ends\n     */\n\n  }, {\n    key: 'setLogFunctions',\n    value: function setLogFunctions() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          onLog = _ref3.onLog,\n          onUpdateStart = _ref3.onUpdateStart,\n          onUpdateEnd = _ref3.onUpdateEnd;\n\n      this.onLog = onLog !== undefined ? onLog : this.onLog;\n      this.onUpdateStart = onUpdateStart !== undefined ? onUpdateStart : this.onUpdateStart;\n      this.onUpdateEnd = onUpdateEnd !== undefined ? onUpdateEnd : this.onUpdateEnd;\n    }\n\n    /**\n     * Returns all attribute descriptors\n     * Note: Format matches luma.gl Model/Program.setAttributes()\n     * @return {Object} attributes - descriptors\n     */\n\n  }, {\n    key: 'getAttributes',\n    value: function getAttributes() {\n      return this.attributes;\n    }\n\n    /**\n     * Returns changed attribute descriptors\n     * This indicates which WebGLBuggers need to be updated\n     * @return {Object} attributes - descriptors\n     */\n\n  }, {\n    key: 'getChangedAttributes',\n    value: function getChangedAttributes(_ref4) {\n      var _ref4$clearChangedFla = _ref4.clearChangedFlags,\n          clearChangedFlags = _ref4$clearChangedFla === undefined ? false : _ref4$clearChangedFla;\n      var attributes = this.attributes;\n\n      var changedAttributes = {};\n      for (var attributeName in attributes) {\n        var attribute = attributes[attributeName];\n        if (attribute.changed) {\n          attribute.changed = attribute.changed && !clearChangedFlags;\n          changedAttributes[attributeName] = attribute;\n        }\n      }\n      return changedAttributes;\n    }\n\n    /**\n     * Returns the redraw flag, optionally clearing it.\n     * Redraw flag will be set if any attributes attributes changed since\n     * flag was last cleared.\n     *\n     * @param {Object} [opts]\n     * @param {String} [opts.clearRedrawFlags=false] - whether to clear the flag\n     * @return {Boolean} - whether a redraw is needed.\n     */\n\n  }, {\n    key: 'getNeedsRedraw',\n    value: function getNeedsRedraw() {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$clearRedrawFlag = _ref5.clearRedrawFlags,\n          clearRedrawFlags = _ref5$clearRedrawFlag === undefined ? false : _ref5$clearRedrawFlag;\n\n      var redraw = this.needsRedraw;\n      redraw = redraw || this.needsRedraw;\n      this.needsRedraw = this.needsRedraw && !clearRedrawFlags;\n      return redraw;\n    }\n\n    /**\n     * Sets the redraw flag.\n     * @param {Boolean} redraw=true\n     * @return {AttributeManager} - for chaining\n     */\n\n  }, {\n    key: 'setNeedsRedraw',\n    value: function setNeedsRedraw() {\n      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.needsRedraw = true;\n      return this;\n    }\n\n    // DEPRECATED METHODS\n\n    /**\n     * @deprecated since version 2.5, use add() instead\n     * Adds attributes\n     * @param {Object} attributes - attribute map (see above)\n     * @param {Object} updaters - separate map of update functions (deprecated)\n     */\n\n  }, {\n    key: 'addDynamic',\n    value: function addDynamic(attributes) {\n      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._add(attributes, updaters);\n    }\n\n    /**\n     * @deprecated since version 2.5, use add() instead\n     * Adds attributes\n     * @param {Object} attributes - attribute map (see above)\n     * @param {Object} updaters - separate map of update functions (deprecated)\n     */\n\n  }, {\n    key: 'addInstanced',\n    value: function addInstanced(attributes) {\n      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._add(attributes, updaters, { instanced: 1 });\n    }\n\n    // PRIVATE METHODS\n\n    // Default logger\n\n  }, {\n    key: '_defaultLog',\n    value: function _defaultLog(level, message) {\n      __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].log(level, message);\n    }\n\n    // Used to register an attribute\n\n  }, {\n    key: '_add',\n    value: function _add(attributes) {\n      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var newAttributes = {};\n\n      for (var attributeName in attributes) {\n        // support for separate update function map\n        // For now, just copy any attributes from that map into the main map\n        // TODO - Attribute maps are a deprecated feature, remove\n        if (attributeName in updaters) {\n          attributes[attributeName] = Object.assign({}, attributes[attributeName], updaters[attributeName]);\n        }\n\n        var attribute = attributes[attributeName];\n\n        var isIndexed = attribute.isIndexed || attribute.elements;\n        var size = attribute.elements && 1 || attribute.size;\n        var value = attribute.value || null;\n\n        // Initialize the attribute descriptor, with WebGL and metadata fields\n        var attributeData = Object.assign({\n          // Ensure that fields are present before Object.seal()\n          target: undefined,\n          userData: {} // Reserved for application\n        },\n        // Metadata\n        attribute, {\n          // State\n          isExternalBuffer: false,\n          needsAlloc: false,\n          needsUpdate: false,\n          changed: false,\n\n          // Luma fields\n          isIndexed: isIndexed,\n          size: size,\n          value: value\n        }, _extraProps);\n        // Sanity - no app fields on our attributes. Use userData instead.\n        Object.seal(attributeData);\n\n        // Check all fields and generate helpful error messages\n        this._validateAttributeDefinition(attributeName, attributeData);\n\n        // Add to both attributes list (for registration with model)\n        newAttributes[attributeName] = attributeData;\n      }\n\n      Object.assign(this.attributes, newAttributes);\n\n      this._mapUpdateTriggersToAttributes();\n    }\n\n    // build updateTrigger name to attribute name mapping\n\n  }, {\n    key: '_mapUpdateTriggersToAttributes',\n    value: function _mapUpdateTriggersToAttributes() {\n      var _this = this;\n\n      var triggers = {};\n\n      var _loop = function _loop(attributeName) {\n        var attribute = _this.attributes[attributeName];\n        var accessor = attribute.accessor;\n\n        // use attribute name as update trigger key\n\n        triggers[attributeName] = [attributeName];\n\n        // use accessor name as update trigger key\n        if (typeof accessor === 'string') {\n          accessor = [accessor];\n        }\n        if (Array.isArray(accessor)) {\n          accessor.forEach(function (accessorName) {\n            if (!triggers[accessorName]) {\n              triggers[accessorName] = [];\n            }\n            triggers[accessorName].push(attributeName);\n          });\n        }\n      };\n\n      for (var attributeName in this.attributes) {\n        _loop(attributeName);\n      }\n\n      this.updateTriggers = triggers;\n    }\n  }, {\n    key: '_validateAttributeDefinition',\n    value: function _validateAttributeDefinition(attributeName, attribute) {\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(attribute.size >= 1 && attribute.size <= 4, 'Attribute definition for ' + attributeName + ' invalid size');\n\n      // Check that either 'accessor' or 'update' is a valid function\n      var hasUpdater = attribute.noAlloc || typeof attribute.update === 'function' || typeof attribute.accessor === 'string';\n      if (!hasUpdater) {\n        throw new Error('Attribute ' + attributeName + ' missing update or accessor');\n      }\n    }\n\n    // Checks that any attribute buffers in props are valid\n    // Note: This is just to help app catch mistakes\n\n  }, {\n    key: '_checkExternalBuffers',\n    value: function _checkExternalBuffers() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$buffers = _ref6.buffers,\n          buffers = _ref6$buffers === undefined ? {} : _ref6$buffers,\n          _ref6$ignoreUnknownAt = _ref6.ignoreUnknownAttributes,\n          ignoreUnknownAttributes = _ref6$ignoreUnknownAt === undefined ? false : _ref6$ignoreUnknownAt;\n\n      var attributes = this.attributes;\n\n      for (var attributeName in buffers) {\n        var attribute = attributes[attributeName];\n        if (!attribute && !ignoreUnknownAttributes) {\n          throw new Error('Unknown attribute prop ' + attributeName);\n        }\n        // const buffer = buffers[attributeName];\n        // TODO - check buffer type\n      }\n    }\n\n    // Set the buffers for the supplied attributes\n    // Update attribute buffers from any attributes in props\n    // Detach any previously set buffers, marking all\n    // Attributes for auto allocation\n    /* eslint-disable max-statements */\n\n  }, {\n    key: '_setExternalBuffers',\n    value: function _setExternalBuffers(bufferMap) {\n      var attributes = this.attributes,\n          numInstances = this.numInstances;\n\n      // Copy the refs of any supplied buffers in the props\n\n      for (var attributeName in attributes) {\n        var attribute = attributes[attributeName];\n        var buffer = bufferMap[attributeName];\n        attribute.isExternalBuffer = false;\n        if (buffer) {\n          if (!(buffer instanceof Float32Array)) {\n            throw new Error('Attribute properties must be of type Float32Array');\n          }\n          if (attribute.auto && buffer.length <= numInstances * attribute.size) {\n            throw new Error('Attribute prop array must match length and size');\n          }\n\n          attribute.isExternalBuffer = true;\n          attribute.needsUpdate = false;\n          if (attribute.value !== buffer) {\n            attribute.value = buffer;\n            attribute.changed = true;\n            this.needsRedraw = true;\n          }\n        }\n      }\n    }\n    /* eslint-enable max-statements */\n\n    /* Checks that typed arrays for attributes are big enough\n     * sets alloc flag if not\n     * @return {Boolean} whether any updates are needed\n     */\n\n  }, {\n    key: '_analyzeBuffers',\n    value: function _analyzeBuffers(_ref7) {\n      var numInstances = _ref7.numInstances;\n      var attributes = this.attributes;\n\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(numInstances !== undefined, 'numInstances not defined');\n\n      // Track whether any allocations or updates are needed\n      var needsUpdate = false;\n\n      for (var attributeName in attributes) {\n        var attribute = attributes[attributeName];\n        if (!attribute.isExternalBuffer) {\n          // Do we need to reallocate the attribute's typed array?\n          var needsAlloc = attribute.value === null || attribute.value.length / attribute.size < numInstances;\n          if (needsAlloc && (attribute.update || attribute.accessor)) {\n            attribute.needsAlloc = true;\n            needsUpdate = true;\n          }\n          if (attribute.needsUpdate) {\n            needsUpdate = true;\n          }\n        }\n      }\n\n      return needsUpdate;\n    }\n\n    /**\n     * @private\n     * Calls update on any buffers that need update\n     * TODO? - If app supplied all attributes, no need to iterate over data\n     *\n     * @param {Object} opts - options\n     * @param {Object} opts.data - data (iterable object)\n     * @param {Object} opts.numInstances - count of data\n     * @param {Object} opts.buffers = {} - pre-allocated buffers\n     * @param {Object} opts.props - passed to updaters\n     * @param {Object} opts.context - Used as \"this\" context for updaters\n     */\n    /* eslint-disable max-statements, complexity */\n\n  }, {\n    key: '_updateBuffers',\n    value: function _updateBuffers(_ref8) {\n      var numInstances = _ref8.numInstances,\n          data = _ref8.data,\n          props = _ref8.props,\n          context = _ref8.context;\n      var attributes = this.attributes;\n\n      // Allocate at least one element to ensure a valid buffer\n\n      var allocCount = Math.max(numInstances, 1);\n\n      for (var attributeName in attributes) {\n        var attribute = attributes[attributeName];\n\n        // Allocate a new typed array if needed\n        if (attribute.needsAlloc) {\n          var ArrayType = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"glArrayFromType\"])(attribute.type || __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].FLOAT);\n          attribute.value = new ArrayType(attribute.size * allocCount);\n          this.onLog(2, this.id + ':' + attributeName + ' allocated ' + allocCount);\n          attribute.needsAlloc = false;\n          attribute.needsUpdate = true;\n        }\n\n        // Call updater function if needed\n        if (attribute.needsUpdate) {\n          this._updateBuffer({ attribute: attribute, attributeName: attributeName, numInstances: numInstances, data: data, props: props, context: context });\n        }\n      }\n\n      this.allocedInstances = allocCount;\n    }\n  }, {\n    key: '_updateBuffer',\n    value: function _updateBuffer(_ref9) {\n      var attribute = _ref9.attribute,\n          attributeName = _ref9.attributeName,\n          numInstances = _ref9.numInstances,\n          data = _ref9.data,\n          props = _ref9.props,\n          context = _ref9.context;\n      var update = attribute.update,\n          accessor = attribute.accessor;\n\n      if (update) {\n        // Custom updater - typically for non-instanced layers\n        this.onLog(2, this.id + ':' + attributeName + ' updating ' + numInstances);\n        update.call(context, attribute, { data: data, props: props, numInstances: numInstances });\n        this._checkAttributeArray(attribute, attributeName);\n      } else if (accessor) {\n        // Standard updater\n        this._updateBufferViaStandardAccessor({ attribute: attribute, data: data, props: props });\n        this._checkAttributeArray(attribute, attributeName);\n      } else {\n        this.onLog(2, this.id + ':' + attributeName + ' missing update function');\n      }\n\n      attribute.needsUpdate = false;\n      attribute.changed = true;\n      this.needsRedraw = true;\n    }\n    /* eslint-enable max-statements */\n\n  }, {\n    key: '_updateBufferViaStandardAccessor',\n    value: function _updateBufferViaStandardAccessor(_ref10) {\n      var attribute = _ref10.attribute,\n          data = _ref10.data,\n          props = _ref10.props;\n      var accessor = attribute.accessor,\n          value = attribute.value,\n          size = attribute.size;\n\n      var accessorFunc = props[accessor];\n\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(typeof accessorFunc === 'function', 'accessor \"' + accessor + '\" is not a function');\n\n      var _attribute$defaultVal = attribute.defaultValue,\n          defaultValue = _attribute$defaultVal === undefined ? [0, 0, 0, 0] : _attribute$defaultVal;\n\n      defaultValue = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var objectValue = accessorFunc(object);\n          objectValue = Array.isArray(objectValue) ? objectValue : [objectValue];\n          /* eslint-disable no-fallthrough, default-case */\n          switch (size) {\n            case 4:\n              value[i + 3] = Number.isFinite(objectValue[3]) ? objectValue[3] : defaultValue[3];\n            case 3:\n              value[i + 2] = Number.isFinite(objectValue[2]) ? objectValue[2] : defaultValue[2];\n            case 2:\n              value[i + 1] = Number.isFinite(objectValue[1]) ? objectValue[1] : defaultValue[1];\n            case 1:\n              value[i + 0] = Number.isFinite(objectValue[0]) ? objectValue[0] : defaultValue[0];\n          }\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_checkAttributeArray',\n    value: function _checkAttributeArray(attribute, attributeName) {\n      var value = attribute.value;\n\n      if (value && value.length >= 4) {\n        var valid = Number.isFinite(value[0]) && Number.isFinite(value[1]) && Number.isFinite(value[2]) && Number.isFinite(value[3]);\n        if (!valid) {\n          throw new Error('Illegal attribute generated for ' + attributeName);\n        }\n      }\n    }\n  }]);\n\n  return AttributeManager;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = AttributeManager;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 26 */
/* exports provided: COORDINATE_SYSTEM */
/* exports used: COORDINATE_SYSTEM */
/*!******************************!*\
  !*** ./src/lib/constants.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return COORDINATE_SYSTEM; });\n// Note: The numeric values here are matched by shader code in the\n// \"project\" and \"project64\" shader modules. Both places need to be\n// updated.\n\n// TODO: Maybe \"POSITIONS\" would be a better name?\nvar COORDINATE_SYSTEM = {\n  // Positions are interpreted as [lng, lat, elevation]\n  // lng lat are degrees, elevation is meters. distances as meters.\n  LNGLAT: 1.0,\n\n  // Positions are interpreted as lng lat offsets: [deltaLng, deltaLat, elevation]\n  // deltaLng, deltaLat are delta degrees, elevation is meters.\n  // distances as meters.\n  LNGLAT_OFFSETS: 3.0,\n\n  // Positions are interpreted as meter offsets, distances as meters\n  METER_OFFSETS: 2.0,\n  METERS: 2.0,\n\n  // Positions and distances are not transformed: [x, y, z] in unit coordinates\n  IDENTITY: 0.0\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NvbnN0YW50cy5qcz82N2NmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IFRoZSBudW1lcmljIHZhbHVlcyBoZXJlIGFyZSBtYXRjaGVkIGJ5IHNoYWRlciBjb2RlIGluIHRoZVxuLy8gXCJwcm9qZWN0XCIgYW5kIFwicHJvamVjdDY0XCIgc2hhZGVyIG1vZHVsZXMuIEJvdGggcGxhY2VzIG5lZWQgdG8gYmVcbi8vIHVwZGF0ZWQuXG5cbi8vIFRPRE86IE1heWJlIFwiUE9TSVRJT05TXCIgd291bGQgYmUgYSBiZXR0ZXIgbmFtZT9cbmV4cG9ydCB2YXIgQ09PUkRJTkFURV9TWVNURU0gPSB7XG4gIC8vIFBvc2l0aW9ucyBhcmUgaW50ZXJwcmV0ZWQgYXMgW2xuZywgbGF0LCBlbGV2YXRpb25dXG4gIC8vIGxuZyBsYXQgYXJlIGRlZ3JlZXMsIGVsZXZhdGlvbiBpcyBtZXRlcnMuIGRpc3RhbmNlcyBhcyBtZXRlcnMuXG4gIExOR0xBVDogMS4wLFxuXG4gIC8vIFBvc2l0aW9ucyBhcmUgaW50ZXJwcmV0ZWQgYXMgbG5nIGxhdCBvZmZzZXRzOiBbZGVsdGFMbmcsIGRlbHRhTGF0LCBlbGV2YXRpb25dXG4gIC8vIGRlbHRhTG5nLCBkZWx0YUxhdCBhcmUgZGVsdGEgZGVncmVlcywgZWxldmF0aW9uIGlzIG1ldGVycy5cbiAgLy8gZGlzdGFuY2VzIGFzIG1ldGVycy5cbiAgTE5HTEFUX09GRlNFVFM6IDMuMCxcblxuICAvLyBQb3NpdGlvbnMgYXJlIGludGVycHJldGVkIGFzIG1ldGVyIG9mZnNldHMsIGRpc3RhbmNlcyBhcyBtZXRlcnNcbiAgTUVURVJfT0ZGU0VUUzogMi4wLFxuICBNRVRFUlM6IDIuMCxcblxuICAvLyBQb3NpdGlvbnMgYW5kIGRpc3RhbmNlcyBhcmUgbm90IHRyYW5zZm9ybWVkOiBbeCwgeSwgel0gaW4gdW5pdCBjb29yZGluYXRlc1xuICBJREVOVElUWTogMC4wXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi9jb25zdGFudHMuanNcbi8vIG1vZHVsZSBpZCA9IDI2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 27 */
/* exports provided: default, TEST_EXPORTS */
/* exports used: default */
/*!**************************!*\
  !*** ./src/lib/layer.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__attribute_manager__ = __webpack_require__(/*! ./attribute-manager */ 25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils__ = __webpack_require__(/*! ./utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_assert__);\n/* unused harmony export TEST_EXPORTS */\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* global window */\n\n\n\n\n\n/*\n * @param {string} props.id - layer name\n * @param {array}  props.data - array of data instances\n * @param {bool} props.opacity - opacity of the layer\n */\nvar defaultProps = {\n  dataIterator: null,\n  dataComparator: null,\n  numInstances: undefined,\n  visible: true,\n  pickable: false,\n  opacity: 0.8,\n  onHover: function onHover() {},\n  onClick: function onClick() {},\n  // Update triggers: a key change detection mechanism in deck.gl\n  // See layer documentation\n  updateTriggers: {}\n};\n\nvar counter = 0;\n\nvar Layer = function () {\n  /**\n   * @class\n   * @param {object} props - See docs and defaults above\n   */\n  function Layer(props) {\n    _classCallCheck(this, Layer);\n\n    // If sublayer has static defaultProps member, getDefaultProps will return it\n    var mergedDefaultProps = getDefaultProps(this);\n    // Merge supplied props with pre-merged default props\n    props = Object.assign({}, mergedDefaultProps, props);\n    // Accept null as data - otherwise apps and layers need to add ugly checks\n    props.data = props.data || [];\n    // Props are immutable\n    Object.freeze(props);\n\n    // Define all members and freeze layer\n    this.id = props.id;\n    this.props = props;\n    this.oldProps = null;\n    this.state = null;\n    this.context = null;\n    this.count = counter++;\n    Object.seal(this);\n\n    this.validateRequiredProp('id', function (x) {\n      return typeof x === 'string' && x !== '';\n    });\n    this.validateRequiredProp('data');\n  }\n\n  _createClass(Layer, [{\n    key: 'toString',\n    value: function toString() {\n      var className = this.constructor.layerName || this.constructor.name;\n      return className !== this.props.id ? '<' + className + ':\\'' + this.props.id + '\\'>' : '<' + className + '>';\n    }\n\n    // //////////////////////////////////////////////////\n    // LIFECYCLE METHODS, overridden by the layer subclasses\n\n    // Called once to set up the initial state\n    // App can create WebGL resources\n\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      throw new Error('Layer ' + this + ' has not defined initializeState');\n    }\n\n    // Let's layer control if updateState should be called\n\n  }, {\n    key: 'shouldUpdateState',\n    value: function shouldUpdateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          oldContext = _ref.oldContext,\n          context = _ref.context,\n          changeFlags = _ref.changeFlags;\n\n      return changeFlags.somethingChanged;\n    }\n\n    // Default implementation, all attributes will be invalidated and updated\n    // when data changes\n\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref2) {\n      var oldProps = _ref2.oldProps,\n          props = _ref2.props,\n          oldContext = _ref2.oldContext,\n          context = _ref2.context,\n          changeFlags = _ref2.changeFlags;\n\n      if (changeFlags.dataChanged) {\n        this.invalidateAttribute('all');\n      }\n    }\n\n    // Called once when layer is no longer matched and state will be discarded\n    // App can destroy WebGL resources here\n\n  }, {\n    key: 'finalizeState',\n    value: function finalizeState() {}\n\n    // Implement to generate sublayers\n\n  }, {\n    key: 'renderLayers',\n    value: function renderLayers() {\n      return null;\n    }\n\n    // If state has a model, draw it with supplied uniforms\n\n  }, {\n    key: 'draw',\n    value: function draw(_ref3) {\n      var _ref3$uniforms = _ref3.uniforms,\n          uniforms = _ref3$uniforms === undefined ? {} : _ref3$uniforms;\n\n      if (this.state.model) {\n        this.state.model.render(uniforms);\n      }\n    }\n\n    // If state has a model, draw it with supplied uniforms\n    /* eslint-disable max-statements */\n\n  }, {\n    key: 'pick',\n    value: function pick(_ref4) {\n      var info = _ref4.info,\n          uniforms = _ref4.uniforms,\n          pickEnableUniforms = _ref4.pickEnableUniforms,\n          pickDisableUniforms = _ref4.pickDisableUniforms,\n          mode = _ref4.mode;\n      var gl = this.context.gl;\n      var model = this.state.model;\n\n\n      if (model) {\n        model.setUniforms(pickEnableUniforms);\n        model.render(uniforms);\n        model.setUniforms(pickDisableUniforms);\n\n        // Read color in the central pixel, to be mapped with picking colors\n\n        var _info$devicePixel = _slicedToArray(info.devicePixel, 2),\n            x = _info$devicePixel[0],\n            y = _info$devicePixel[1];\n\n        var color = new Uint8Array(4);\n        gl.readPixels(x, y, 1, 1, __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].RGBA, __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].UNSIGNED_BYTE, color);\n\n        // Index < 0 means nothing selected\n        info.index = this.decodePickingColor(color);\n        info.color = color;\n\n        // TODO - selectedPickingColor should be removed?\n        if (mode === 'hover') {\n          var selectedPickingColor = new Float32Array(3);\n          selectedPickingColor[0] = color[0];\n          selectedPickingColor[1] = color[1];\n          selectedPickingColor[2] = color[2];\n          this.setUniforms({ selectedPickingColor: selectedPickingColor });\n        }\n      }\n    }\n    /* eslint-enable max-statements */\n\n    // END LIFECYCLE METHODS\n    // //////////////////////////////////////////////////\n\n    // Default implementation of attribute invalidation, can be redefine\n\n  }, {\n    key: 'invalidateAttribute',\n    value: function invalidateAttribute() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'all';\n\n      if (name === 'all') {\n        this.state.attributeManager.invalidateAll();\n      } else {\n        this.state.attributeManager.invalidate(name);\n      }\n    }\n\n    // Calls attribute manager to update any WebGL attributes, can be redefined\n\n  }, {\n    key: 'updateAttributes',\n    value: function updateAttributes(props) {\n      var _state = this.state,\n          attributeManager = _state.attributeManager,\n          model = _state.model;\n\n      if (!attributeManager) {\n        return;\n      }\n\n      var numInstances = this.getNumInstances(props);\n      // Figure out data length\n      attributeManager.update({\n        data: props.data,\n        numInstances: numInstances,\n        props: props,\n        buffers: props,\n        context: this,\n        // Don't worry about non-attribute props\n        ignoreUnknownAttributes: true\n      });\n      if (model) {\n        var changedAttributes = attributeManager.getChangedAttributes({ clearChangedFlags: true });\n        model.setAttributes(changedAttributes);\n      }\n    }\n\n    // Public API\n\n    // Updates selected state members and marks the object for redraw\n\n  }, {\n    key: 'setState',\n    value: function setState(updateObject) {\n      Object.assign(this.state, updateObject);\n      this.state.needsRedraw = true;\n    }\n  }, {\n    key: 'setNeedsRedraw',\n    value: function setNeedsRedraw() {\n      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.state) {\n        this.state.needsRedraw = redraw;\n      }\n    }\n\n    // PROJECTION METHODS\n\n    /**\n     * Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n     *\n     * Note: Position conversion is done in shader, so in many cases there is no need\n     * for this function\n     * @param {Array|TypedArray} lngLat - long and lat values\n     * @return {Array|TypedArray} - x, y coordinates\n     */\n\n  }, {\n    key: 'project',\n    value: function project(lngLat) {\n      var viewport = this.context.viewport;\n\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(Array.isArray(lngLat), 'Layer.project needs [lng,lat]');\n      return viewport.project(lngLat);\n    }\n  }, {\n    key: 'unproject',\n    value: function unproject(xy) {\n      var viewport = this.context.viewport;\n\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(Array.isArray(xy), 'Layer.unproject needs [x,y]');\n      return viewport.unproject(xy);\n    }\n  }, {\n    key: 'projectFlat',\n    value: function projectFlat(lngLat) {\n      var viewport = this.context.viewport;\n\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(Array.isArray(lngLat), 'Layer.project needs [lng,lat]');\n      return viewport.projectFlat(lngLat);\n    }\n  }, {\n    key: 'unprojectFlat',\n    value: function unprojectFlat(xy) {\n      var viewport = this.context.viewport;\n\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(Array.isArray(xy), 'Layer.unproject needs [x,y]');\n      return viewport.unprojectFlat(xy);\n    }\n  }, {\n    key: 'screenToDevicePixels',\n    value: function screenToDevicePixels(screenPixels) {\n      var devicePixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio : 1;\n      return screenPixels * devicePixelRatio;\n    }\n\n    /**\n     * Returns the picking color that doesn't match any subfeature\n     * Use if some graphics do not belong to any pickable subfeature\n     * @return {Array} - a black color\n     */\n\n  }, {\n    key: 'nullPickingColor',\n    value: function nullPickingColor() {\n      return [0, 0, 0];\n    }\n\n    /**\n     * Returns the picking color that doesn't match any subfeature\n     * Use if some graphics do not belong to any pickable subfeature\n     * @param {int} i - index to be decoded\n     * @return {Array} - the decoded color\n     */\n\n  }, {\n    key: 'encodePickingColor',\n    value: function encodePickingColor(i) {\n      return [(i + 1) % 256, Math.floor((i + 1) / 256) % 256, Math.floor((i + 1) / 256 / 256) % 256];\n    }\n\n    /**\n     * Returns the picking color that doesn't match any subfeature\n     * Use if some graphics do not belong to any pickable subfeature\n     * @param {Uint8Array} color - color array to be decoded\n     * @return {Array} - the decoded picking color\n     */\n\n  }, {\n    key: 'decodePickingColor',\n    value: function decodePickingColor(color) {\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(color instanceof Uint8Array);\n\n      var _color = _slicedToArray(color, 3),\n          i1 = _color[0],\n          i2 = _color[1],\n          i3 = _color[2];\n      // 1 was added to seperate from no selection\n\n\n      var index = i1 + i2 * 256 + i3 * 65536 - 1;\n      return index;\n    }\n  }, {\n    key: 'calculateInstancePickingColors',\n    value: function calculateInstancePickingColors(attribute, _ref5) {\n      var numInstances = _ref5.numInstances;\n      var value = attribute.value,\n          size = attribute.size;\n      // add 1 to index to seperate from no selection\n\n      for (var i = 0; i < numInstances; i++) {\n        var pickingColor = this.encodePickingColor(i);\n        value[i * size + 0] = pickingColor[0];\n        value[i * size + 1] = pickingColor[1];\n        value[i * size + 2] = pickingColor[2];\n      }\n    }\n\n    // DATA ACCESS API\n    // Data can use iterators and may not be random access\n\n    // Use iteration (the only required capability on data) to get first element\n\n  }, {\n    key: 'getFirstObject',\n    value: function getFirstObject() {\n      var data = this.props.data;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          return object;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    // INTERNAL METHODS\n\n    // Deduces numer of instances. Intention is to support:\n    // - Explicit setting of numInstances\n    // - Auto-deduction for ES6 containers that define a size member\n    // - Auto-deduction for Classic Arrays via the built-in length attribute\n    // - Auto-deduction via arrays\n\n  }, {\n    key: 'getNumInstances',\n    value: function getNumInstances(props) {\n      props = props || this.props;\n\n      // First check if the layer has set its own value\n      if (this.state && this.state.numInstances !== undefined) {\n        return this.state.numInstances;\n      }\n\n      // Check if app has provided an explicit value\n      if (props.numInstances !== undefined) {\n        return props.numInstances;\n      }\n\n      // Use container library to get a count for any ES6 container or object\n      var _props = props,\n          data = _props.data;\n\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils__[\"g\" /* count */])(data);\n    }\n\n    // LAYER MANAGER API\n    // Should only be called by the deck.gl LayerManager class\n\n    // Called by layer manager when a new layer is found\n    /* eslint-disable max-statements */\n\n  }, {\n    key: 'initializeLayer',\n    value: function initializeLayer(updateParams) {\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(this.context.gl, 'Layer context missing gl');\n      __WEBPACK_IMPORTED_MODULE_3_assert___default()(!this.state, 'Layer missing state');\n\n      this.state = {};\n\n      // Initialize state only once\n      this.setState({\n        attributeManager: new __WEBPACK_IMPORTED_MODULE_1__attribute_manager__[\"a\" /* default */]({ id: this.props.id }),\n        model: null,\n        needsRedraw: true,\n        dataChanged: true\n      });\n\n      // Add attribute manager loggers if provided\n      this.state.attributeManager.setLogFunctions(this.props);\n\n      var attributeManager = this.state.attributeManager;\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slows down non instanced layers\n\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].UNSIGNED_BYTE,\n          size: 3,\n          update: this.calculateInstancePickingColors\n        }\n      });\n\n      // Call subclass lifecycle methods\n      this.initializeState();\n      this.updateState(updateParams);\n      // End subclass lifecycle methods\n\n      // Add any subclass attributes\n      this.updateAttributes(this.props);\n      this._updateBaseUniforms();\n\n      var model = this.state.model;\n\n      if (model) {\n        model.setInstanceCount(this.getNumInstances());\n        model.id = this.props.id;\n        model.program.id = this.props.id + '-program';\n        model.geometry.id = this.props.id + '-geometry';\n        model.setAttributes(attributeManager.getAttributes());\n      }\n    }\n\n    // Called by layer manager when existing layer is getting new props\n\n  }, {\n    key: 'updateLayer',\n    value: function updateLayer(updateParams) {\n      // Check for deprecated method\n      if (this.shouldUpdate) {\n        __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].once(0, 'deck.gl v3 ' + this + ': \"shouldUpdate\" deprecated, renamed to \"shouldUpdateState\"');\n      }\n\n      // Call subclass lifecycle method\n      var stateNeedsUpdate = this.shouldUpdateState(updateParams);\n      // End lifecycle method\n\n      if (stateNeedsUpdate) {\n\n        // Call deprecated lifecycle method if defined\n        var hasRedefinedMethod = this.willReceiveProps && this.willReceiveProps !== Layer.prototype.willReceiveProps;\n        if (hasRedefinedMethod) {\n          __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].once(0, 'deck.gl v3 willReceiveProps deprecated. Use updateState in ' + this);\n          var oldProps = updateParams.oldProps,\n              props = updateParams.props,\n              changeFlags = updateParams.changeFlags;\n\n          this.setState(changeFlags);\n          this.willReceiveProps(oldProps, props, changeFlags);\n          this.setState({\n            dataChanged: false,\n            viewportChanged: false\n          });\n        }\n        // End lifecycle method\n\n        // Call subclass lifecycle method\n        this.updateState(updateParams);\n        // End lifecycle method\n\n        // Run the attribute updaters\n        this.updateAttributes(updateParams.props);\n        this._updateBaseUniforms();\n\n        if (this.state.model) {\n          this.state.model.setInstanceCount(this.getNumInstances());\n        }\n      }\n    }\n    /* eslint-enable max-statements */\n\n    // Called by manager when layer is about to be disposed\n    // Note: not guaranteed to be called on application shutdown\n\n  }, {\n    key: 'finalizeLayer',\n    value: function finalizeLayer() {\n      // Call subclass lifecycle method\n      this.finalizeState();\n      // End lifecycle method\n    }\n\n    // Calculates uniforms\n\n  }, {\n    key: 'drawLayer',\n    value: function drawLayer(_ref6) {\n      var _ref6$uniforms = _ref6.uniforms,\n          uniforms = _ref6$uniforms === undefined ? {} : _ref6$uniforms;\n\n      // Call subclass lifecycle method\n      this.draw({ uniforms: uniforms });\n      // End lifecycle method\n    }\n\n    // {uniforms = {}, ...opts}\n\n  }, {\n    key: 'pickLayer',\n    value: function pickLayer(opts) {\n      // Call subclass lifecycle method\n      return this.pick(opts);\n      // End lifecycle method\n    }\n  }, {\n    key: 'diffProps',\n    value: function diffProps(oldProps, newProps, context) {\n      // First check if any props have changed (ignore props that will be examined separately)\n      var propsChangedReason = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils__[\"h\" /* compareProps */])({\n        newProps: newProps,\n        oldProps: oldProps,\n        ignoreProps: { data: null, updateTriggers: null }\n      });\n\n      // Now check if any data related props have changed\n      var dataChangedReason = this._diffDataProps(oldProps, newProps);\n\n      var propsChanged = Boolean(propsChangedReason);\n      var dataChanged = Boolean(dataChangedReason);\n      var viewportChanged = context.viewportChanged;\n      var somethingChanged = propsChanged || dataChanged || viewportChanged;\n\n      // Check update triggers to determine if any attributes need regeneration\n      // Note - if data has changed, all attributes will need regeneration, so skip this step\n      if (!dataChanged) {\n        this._diffUpdateTriggers(oldProps, newProps);\n      } else {\n        __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].log(1, 'dataChanged: ' + dataChanged);\n      }\n\n      return {\n        propsChanged: propsChanged,\n        dataChanged: dataChanged,\n        viewportChanged: viewportChanged,\n        somethingChanged: somethingChanged,\n        reason: dataChangedReason || propsChangedReason\n      };\n    }\n\n    // Checks state of attributes and model\n    // TODO - is attribute manager needed? - Model should be enough.\n\n  }, {\n    key: 'getNeedsRedraw',\n    value: function getNeedsRedraw() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$clearRedrawFlag = _ref7.clearRedrawFlags,\n          clearRedrawFlags = _ref7$clearRedrawFlag === undefined ? false : _ref7$clearRedrawFlag;\n\n      // this method may be called by the render loop as soon a the layer\n      // has been created, so guard against uninitialized state\n      if (!this.state) {\n        return false;\n      }\n\n      var redraw = false;\n      redraw = redraw || this.state.needsRedraw;\n      this.state.needsRedraw = this.state.needsRedraw && !clearRedrawFlags;\n\n      var _state2 = this.state,\n          attributeManager = _state2.attributeManager,\n          model = _state2.model;\n\n      redraw = redraw || attributeManager && attributeManager.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });\n      redraw = redraw || model && model.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });\n\n      return redraw;\n    }\n\n    // PRIVATE METHODS\n\n    // The comparison of the data prop requires special handling\n    // the dataComparator should be used if supplied\n\n  }, {\n    key: '_diffDataProps',\n    value: function _diffDataProps(oldProps, newProps) {\n      // Support optional app defined comparison of data\n      var dataComparator = newProps.dataComparator;\n\n      if (dataComparator) {\n        if (!dataComparator(newProps.data, oldProps.data)) {\n          return 'Data comparator detected a change';\n        }\n        // Otherwise, do a shallow equal on props\n      } else if (newProps.data !== oldProps.data) {\n        return 'A new data container was supplied';\n      }\n\n      return null;\n    }\n\n    // Checks if any update triggers have changed, and invalidate\n    // attributes accordingly.\n    /* eslint-disable max-statements */\n\n  }, {\n    key: '_diffUpdateTriggers',\n    value: function _diffUpdateTriggers(oldProps, newProps) {\n      // const {attributeManager} = this.state;\n      // const updateTriggerMap = attributeManager.getUpdateTriggerMap();\n\n      var change = false;\n\n      for (var propName in newProps.updateTriggers) {\n        var oldTriggers = oldProps.updateTriggers[propName] || {};\n        var newTriggers = newProps.updateTriggers[propName] || {};\n        var diffReason = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils__[\"h\" /* compareProps */])({\n          oldProps: oldTriggers,\n          newProps: newTriggers\n        });\n        if (diffReason) {\n          if (propName === 'all') {\n            __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].log(1, 'updateTriggers invalidating all attributes: ' + diffReason);\n            this.invalidateAttribute('all');\n            change = true;\n          } else {\n            __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].log(1, 'updateTriggers invalidating attribute ' + propName + ': ' + diffReason);\n            this.invalidateAttribute(propName);\n            change = true;\n          }\n        }\n      }\n\n      return change;\n    }\n    /* eslint-enable max-statements */\n\n  }, {\n    key: 'validateRequiredProp',\n    value: function validateRequiredProp(propertyName, condition) {\n      var value = this.props[propertyName];\n      if (value === undefined) {\n        throw new Error('Property ' + propertyName + ' undefined in layer ' + this);\n      }\n      if (condition && !condition(value)) {\n        throw new Error('Bad property ' + propertyName + ' in layer ' + this);\n      }\n    }\n  }, {\n    key: '_updateBaseUniforms',\n    value: function _updateBaseUniforms() {\n      this.setUniforms({\n        // apply gamma to opacity to make it visually \"linear\"\n        opacity: Math.pow(this.props.opacity, 1 / 2.2),\n        ONE: 1.0\n      });\n    }\n\n    // DEPRECATED METHODS\n    // shouldUpdate() {}\n\n  }, {\n    key: 'willReceiveProps',\n    value: function willReceiveProps() {}\n\n    // Updates selected state members and marks the object for redraw\n\n  }, {\n    key: 'setUniforms',\n    value: function setUniforms(uniformMap) {\n      if (this.state.model) {\n        this.state.model.setUniforms(uniformMap);\n      }\n      // TODO - set needsRedraw on the model?\n      this.state.needsRedraw = true;\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */])(3, 'layer.setUniforms', uniformMap);\n    }\n  }]);\n\n  return Layer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Layer;\n\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n\n// HELPERS\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return object.hasOwnProperty(prop) && object[prop];\n}\n/*\n * Return merged default props stored on layers constructor, create them if needed\n */\nfunction getDefaultProps(layer) {\n  var mergedDefaultProps = getOwnProperty(layer.constructor, 'mergedDefaultProps');\n  if (mergedDefaultProps) {\n    return mergedDefaultProps;\n  }\n  return mergeDefaultProps(layer);\n}\n\n/*\n * Walk the prototype chain and merge all default props\n */\nfunction mergeDefaultProps(layer) {\n  var subClassConstructor = layer.constructor;\n  var layerName = getOwnProperty(subClassConstructor, 'layerName');\n  if (!layerName) {\n    __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].once(0, 'layer ' + layer.constructor.name + ' does not specify a \"layerName\"');\n  }\n  var mergedDefaultProps = {\n    id: layerName || layer.constructor.name\n  };\n\n  while (layer) {\n    var layerDefaultProps = getOwnProperty(layer.constructor, 'defaultProps');\n    Object.freeze(layerDefaultProps);\n    if (layerDefaultProps) {\n      mergedDefaultProps = Object.assign({}, layerDefaultProps, mergedDefaultProps);\n    }\n    layer = Object.getPrototypeOf(layer);\n  }\n  // Store for quick lookup\n  subClassConstructor.mergedDefaultProps = mergedDefaultProps;\n  return mergedDefaultProps;\n}\n\nvar TEST_EXPORTS = {\n  mergeDefaultProps: mergeDefaultProps\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 28 */
/* exports provided: fp64, project, project64, updateSettings, lighting */
/* all exports used */
/*!*******************************************!*\
  !*** ./src/shader-utils/shader-chunks.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shaderlib_fp64__ = __webpack_require__(/*! ../shaderlib/fp64 */ 72);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"fp64\", function() { return __WEBPACK_IMPORTED_MODULE_0__shaderlib_fp64__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderlib_project__ = __webpack_require__(/*! ../shaderlib/project */ 74);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"project\", function() { return __WEBPACK_IMPORTED_MODULE_1__shaderlib_project__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaderlib_project64__ = __webpack_require__(/*! ../shaderlib/project64 */ 75);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"project64\", function() { return __WEBPACK_IMPORTED_MODULE_2__shaderlib_project64__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaderlib_lighting__ = __webpack_require__(/*! ../shaderlib/lighting */ 73);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"updateSettings\", function() { return __WEBPACK_IMPORTED_MODULE_3__shaderlib_lighting__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"lighting\", function() { return __WEBPACK_IMPORTED_MODULE_3__shaderlib_lighting__[\"a\"]; });\n// Load shader chunks\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hhZGVyLXV0aWxzL3NoYWRlci1jaHVua3MuanM/NWM1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMb2FkIHNoYWRlciBjaHVua3NcbmV4cG9ydCAqIGZyb20gJy4uL3NoYWRlcmxpYi9mcDY0JztcbmV4cG9ydCAqIGZyb20gJy4uL3NoYWRlcmxpYi9wcm9qZWN0JztcbmV4cG9ydCAqIGZyb20gJy4uL3NoYWRlcmxpYi9wcm9qZWN0NjQnO1xuZXhwb3J0ICogZnJvbSAnLi4vc2hhZGVybGliL2xpZ2h0aW5nJztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zaGFkZXItdXRpbHMvc2hhZGVyLWNodW5rcy5qc1xuLy8gbW9kdWxlIGlkID0gMjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 29 */
/* unknown exports provided */
/* exports used: default */
/*!*************************************!*\
  !*** external "lodash.flattendeep" ***!
  \*************************************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_29__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJsb2Rhc2guZmxhdHRlbmRlZXBcIj81M2RhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8yOV9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwibG9kYXNoLmZsYXR0ZW5kZWVwXCJcbi8vIG1vZHVsZSBpZCA9IDI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 30 */
/* unknown exports provided */
/* exports used: PropTypes, createElement, default */
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_30__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiPzNjNjIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzMwX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJyZWFjdFwiXG4vLyBtb2R1bGUgaWQgPSAzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 31 */
/* exports provided: default */
/* exports used: default */
/*!********************************************************!*\
  !*** ./src/layers/core/geojson-layer/geojson-layer.js ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scatterplot_layer__ = __webpack_require__(/*! ../scatterplot-layer */ 24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__path_layer_path_layer__ = __webpack_require__(/*! ../path-layer/path-layer */ 19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__polygon_layer_polygon_layer__ = __webpack_require__(/*! ../polygon-layer/polygon-layer */ 20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__geojson__ = __webpack_require__(/*! ./geojson */ 47);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\n\n\nvar defaultPointColor = [0xFF, 0x88, 0x00, 0xFF];\nvar defaultStrokeColor = [0x33, 0x33, 0x33, 0xFF];\nvar defaultFillColor = [0xBD, 0xE2, 0x7A, 0xFF];\n\nvar defaultProps = {\n  drawPoints: true,\n  drawLines: true,\n  drawPolygons: true,\n  fillPolygons: true,\n  // extrudePolygons: false,\n  // wireframe: false,\n\n  // Point accessors\n  getPointColor: function getPointColor(f) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(f, 'properties.color') || defaultPointColor;\n  },\n  getPointSize: function getPointSize(f) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(f, 'properties.size') || 5;\n  },\n\n  // Line and polygon outline accessors\n  getStrokeColor: function getStrokeColor(f) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(f, 'properties.strokeColor') || defaultStrokeColor;\n  },\n  getStrokeWidth: function getStrokeWidth(f) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(f, 'properties.strokeWidth') || 1;\n  },\n\n  // Polygon fill accessors\n  getFillColor: function getFillColor(f) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(f, 'properties.fillColor') || defaultFillColor;\n  },\n\n  // Polygon extrusion accessor\n  getHeight: function getHeight(f) {\n    return 1000;\n  }\n};\n\nfunction noop() {}\n\nvar getCoordinates = function getCoordinates(f) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(f, 'geometry.coordinates');\n};\n\nvar GeoJsonLayer = function (_Layer) {\n  _inherits(GeoJsonLayer, _Layer);\n\n  function GeoJsonLayer() {\n    _classCallCheck(this, GeoJsonLayer);\n\n    return _possibleConstructorReturn(this, (GeoJsonLayer.__proto__ || Object.getPrototypeOf(GeoJsonLayer)).apply(this, arguments));\n  }\n\n  _createClass(GeoJsonLayer, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      this.state = {\n        subLayers: null,\n        pickInfos: []\n      };\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n\n      if (changeFlags.dataChanged) {\n        var data = this.props.data;\n\n        var features = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__geojson__[\"a\" /* getGeojsonFeatures */])(data);\n        this.state.subLayers = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__geojson__[\"b\" /* separateGeojsonFeatures */])(features);\n      }\n    }\n  }, {\n    key: '_onHoverSublayer',\n    value: function _onHoverSublayer(info) {\n      this.state.pickInfos.push(info);\n    }\n  }, {\n    key: 'pick',\n    value: function pick(opts) {\n      _get(GeoJsonLayer.prototype.__proto__ || Object.getPrototypeOf(GeoJsonLayer.prototype), 'pick', this).call(this, opts);\n\n      var info = this.state.pickInfos.find(function (i) {\n        return i.index >= 0;\n      });\n\n      if (opts.mode === 'hover') {\n        this.state.pickInfos = [];\n      }\n\n      if (!info) {\n        return;\n      }\n\n      Object.assign(opts.info, info, {\n        layer: this,\n        feature: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"d\" /* get */])(info, 'object.feature') || info.object\n      });\n    }\n  }, {\n    key: 'renderLayers',\n    value: function renderLayers() {\n      var _state$subLayers = this.state.subLayers,\n          pointFeatures = _state$subLayers.pointFeatures,\n          lineFeatures = _state$subLayers.lineFeatures,\n          polygonFeatures = _state$subLayers.polygonFeatures,\n          polygonOutlineFeatures = _state$subLayers.polygonOutlineFeatures;\n      var _props = this.props,\n          id = _props.id,\n          getPointColor = _props.getPointColor,\n          getPointSize = _props.getPointSize,\n          getStrokeColor = _props.getStrokeColor,\n          getStrokeWidth = _props.getStrokeWidth,\n          getFillColor = _props.getFillColor,\n          getHeight = _props.getHeight;\n      var _props2 = this.props,\n          extruded = _props2.extruded,\n          wireframe = _props2.wireframe;\n      var _props3 = this.props,\n          drawPoints = _props3.drawPoints,\n          drawLines = _props3.drawLines,\n          drawPolygons = _props3.drawPolygons,\n          fillPolygons = _props3.fillPolygons;\n\n      drawPoints = drawPoints && pointFeatures && pointFeatures.length > 0;\n      drawLines = drawLines && lineFeatures && lineFeatures.length > 0;\n      drawPolygons = drawPolygons && polygonOutlineFeatures && polygonOutlineFeatures.length > 0;\n      fillPolygons = fillPolygons && polygonFeatures && polygonFeatures.length > 0;\n\n      // Override user's onHover and onClick props\n      var handlers = {\n        onHover: this._onHoverSublayer.bind(this),\n        onClick: noop\n      };\n\n      // Filled Polygon Layer\n      var polygonFillLayer = fillPolygons && new __WEBPACK_IMPORTED_MODULE_3__polygon_layer_polygon_layer__[\"a\" /* default */](Object.assign({}, this.props, handlers, {\n        id: id + '-polygon-fill',\n        data: polygonFeatures,\n        getPolygon: getCoordinates,\n        getHeight: getHeight,\n        getColor: getFillColor,\n        extruded: extruded,\n        wireframe: false,\n        updateTriggers: {\n          getHeight: this.props.updateTriggers.getHeight,\n          getColor: this.props.updateTriggers.getFillColor\n        }\n      }));\n\n      // Polygon outline or wireframe\n      var polygonOutlineLayer = null;\n      if (drawPolygons && extruded && wireframe) {\n        polygonOutlineLayer = new __WEBPACK_IMPORTED_MODULE_3__polygon_layer_polygon_layer__[\"a\" /* default */](Object.assign({}, this.props, handlers, {\n          id: id + '-polygon-wireframe',\n          data: polygonFeatures,\n          getPolygon: getCoordinates,\n          getHeight: getHeight,\n          getColor: getStrokeColor,\n          extruded: true,\n          wireframe: true,\n          updateTriggers: {\n            getColor: this.props.updateTriggers.getStrokeColor\n          }\n        }));\n      } else if (drawPolygons) {\n        polygonOutlineLayer = new __WEBPACK_IMPORTED_MODULE_2__path_layer_path_layer__[\"a\" /* default */](Object.assign({}, this.props, handlers, {\n          id: id + '-polygon-outline',\n          data: polygonOutlineFeatures,\n          getPath: getCoordinates,\n          getColor: getStrokeColor,\n          getWidth: getStrokeWidth,\n          updateTriggers: {\n            getColor: this.props.updateTriggers.getStrokeColor,\n            getWidth: this.props.updateTriggers.getStrokeWidth\n          }\n        }));\n      }\n\n      var lineLayer = drawLines && new __WEBPACK_IMPORTED_MODULE_2__path_layer_path_layer__[\"a\" /* default */](Object.assign({}, this.props, handlers, {\n        id: id + '-line-paths',\n        data: lineFeatures,\n        getPath: getCoordinates,\n        getColor: getStrokeColor,\n        getWidth: getStrokeWidth,\n        updateTriggers: {\n          getColor: this.props.updateTriggers.getStrokeColor,\n          getWidth: this.props.updateTriggers.getStrokeWidth\n        }\n      }));\n\n      var pointLayer = drawPoints && new __WEBPACK_IMPORTED_MODULE_1__scatterplot_layer__[\"a\" /* default */](Object.assign({}, this.props, handlers, {\n        id: id + '-points',\n        data: pointFeatures,\n        getPosition: getCoordinates,\n        getColor: getPointColor,\n        getRadius: getPointSize,\n        updateTriggers: {\n          getColor: this.props.updateTriggers.getPointColor,\n          getRadius: this.props.updateTriggers.getPointSize\n        }\n      }));\n\n      return [polygonFillLayer, polygonOutlineLayer, lineLayer, pointLayer].filter(Boolean);\n    }\n  }]);\n\n  return GeoJsonLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = GeoJsonLayer;\n\n\nGeoJsonLayer.layerName = 'GeoJsonLayer';\nGeoJsonLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 32 */
/* exports provided: default */
/* exports used: default */
/*!**************************************************!*\
  !*** ./src/layers/core/grid-layer/grid-layer.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_gl_matrix__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [255, 255, 255, 0];\n\n/**\n * A generic GridLayer that takes latitude longitude delta of cells as a uniform\n * and the min lat lng of cells. grid can be 3d when pass in a height\n * and set enable3d to true\n *\n * @param {array} props.data -\n * @param {boolean} props.enable3d - enable grid height\n * @param {number} props.latDelta - grid cell size in lat delta\n * @param {number} props.lngDelta - grid cell size in lng delta\n * @param {number} props.opacity - opacity\n * @param {function} props.getPosition - position accessor, returned as [minLng, minLat]\n * @param {function} props.getElevation - elevation accessor\n * @param {function} props.getColor - color accessor, returned as [r, g, b]\n */\nvar defaultProps = {\n  id: 'grid-layer',\n  data: [],\n  latDelta: 0.0089,\n  lngDelta: 0.0113,\n  enable3d: true,\n  opacity: 0.6,\n  getPosition: function getPosition(x) {\n    return x.position;\n  },\n  getElevation: function getElevation(x) {\n    return x.height;\n  },\n  getColor: function getColor(x) {\n    return x.color;\n  }\n};\n\n// viewMatrix added as Uniform for lighting calculation\nvar viewMatrixCompat = __WEBPACK_IMPORTED_MODULE_4_gl_matrix__[\"mat4\"].create();\n__WEBPACK_IMPORTED_MODULE_4_gl_matrix__[\"mat4\"].lookAt(viewMatrixCompat, [0, 0, 0], [0, 0, -1], [0, 1, 0]);\nvar viewMatrix = new Float32Array(viewMatrixCompat);\n\nvar GridLayer = function (_Layer) {\n  _inherits(GridLayer, _Layer);\n\n  function GridLayer() {\n    _classCallCheck(this, GridLayer);\n\n    return _possibleConstructorReturn(this, (GridLayer.__proto__ || Object.getPrototypeOf(GridLayer)).apply(this, arguments));\n  }\n\n  _createClass(GridLayer, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      var vertex = '// Inspired by screen-grid-layer vertex shader in deck.gl\\n\\n/* vertex shader for the grid-layer */\\n#define SHADER_NAME grid-layer-vs\\n#define LIGHT_MAX 1\\n\\nattribute vec3 positions;\\nattribute vec3 normals;\\n\\nattribute vec4 instancePositions;\\nattribute vec3 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\n// Picking uniforms\\n// Set to 1.0 if rendering picking buffer, 0.0 if rendering for display\\nuniform float renderPickingBuffer;\\nuniform vec3 selectedPickingColor;\\n\\n// Projection uniforms\\nuniform mat4 worldMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 worldInverseTransposeMatrix;\\n\\n// Custom uniforms\\nuniform float enable3d;\\nuniform float lngDelta;\\nuniform float latDelta;\\nuniform float opacity;\\n\\nuniform float testScale;\\n\\n// Lighting constants\\nconst vec3 ambientColor = vec3(0.8, 0.8, 0.8);\\nconst vec3 pointLocation = vec3(1.5, 1.5, 5.);\\nconst vec3 pointColor = vec3(0.7, 0.7, 0.7);\\nconst vec3 pointSpecularColor = vec3(0.6, 0.6, 0.6);\\nconst float shininess = 3.;\\nconst float pointLightAmbientCoefficient = 1.;\\n\\n// A magic number to scale elevation so that 1 unit approximate to 100 meter\\n#define ELEVATION_SCALE 80.\\n\\n// Result\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n\\n\\n  // cube gemoetry vertics are between -1 to 1, scale and transform it to between 0, 1\\n  vec2 ptPosition = instancePositions.xy + vec2((positions.x + 1.0 ) * lngDelta / 2.0, (positions.y + 1.0) * latDelta / 2.0);\\n\\n  vec2 pos = project_position(ptPosition);\\n\\n  // if 3d not enabled set elevation to 0\\n  float elevation =  mix(0., project_scale(instancePositions.w  * (positions.z + 1.) * ELEVATION_SCALE), enable3d);\\n\\n  // extrude positions\\n  vec3 extrudedPosition = vec3(pos.xy, elevation + 1.);\\n\\n  float selected = isPicked(instancePickingColors, selectedPickingColor);\\n\\n  vec3 lightWeighting = getLightWeight(\\n    viewMatrix,\\n    worldMatrix,\\n    worldInverseTransposeMatrix,\\n    positions,\\n    normals,\\n    selected,\\n    ambientColor,\\n    pointLocation,\\n    pointColor,\\n    pointSpecularColor,\\n    pointLightAmbientCoefficient,\\n    shininess\\n  );\\n\\n  vec3 lightWeightedColor = mix(vec3(1), lightWeighting, enable3d) * (instanceColors / 255.0);\\n  vec4 color = vec4(lightWeightedColor, opacity);\\n\\n  vec4 pickingColor = vec4(instancePickingColors / 255.0, 1.);\\n\\n  vColor = mix(color, pickingColor, renderPickingBuffer);\\n\\n  gl_Position = project_to_clipspace(vec4(extrudedPosition, 1.0));\\n}\\n';\n      var lighting = '// get lighitng from position normals and lighting config\\n\\nvec3 getLightWeight(\\n  mat4 viewMatrix,\\n  mat4 worldMatrix,\\n  mat4 worldInverseTransposeMatrix,\\n  vec3 positions,\\n  vec3 normals,\\n  float selected,\\n\\n  vec3 ambientColor,\\n  vec3 pointLocation,\\n  vec3 pointColor,\\n  vec3 pointSpecularColor,\\n  float pointLightAmbientCoefficient,\\n  float shininess\\n) {\\n  vec4 vPosition = worldMatrix * vec4(positions, 1.0);\\n  vec4 vTransformedNormal = worldInverseTransposeMatrix * vec4(normals, 1);\\n  vec3 normal = vTransformedNormal.xyz;\\n  vec3 eyeDirection = normalize(-vPosition.xyz);\\n\\n  vec3 transformedPointLocation = (viewMatrix * vec4(pointLocation, 1.0)).xyz;\\n  vec3 lightDirection = normalize(transformedPointLocation - vPosition.xyz);\\n  vec3 reflectionDirection = reflect(-lightDirection, normal);\\n\\n  float specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), clamp(shininess, 1., 32.));\\n  vec3 specularLight = specularLightWeighting * pointSpecularColor;\\n\\n  float diffuseLightWeighting = max(dot(normal, lightDirection), 0.0);\\n  vec3 diffuseLight = diffuseLightWeighting * pointColor;\\n\\n\\n  float factor = mix(0., 1., selected);\\n  return (ambientColor * pointLightAmbientCoefficient + factor) + diffuseLight + specularLight;\\n}\\n';\n      var picking = '// whether is point picked\\nfloat isPicked(vec3 pickingColors, vec3 selectedColor) {\\n return float(pickingColors.x == selectedColor.x\\n && pickingColors.y == selectedColor.y\\n && pickingColors.z == selectedColor.z);\\n}\\n';\n      var vs = picking.concat(lighting).concat(vertex);\n\n      return {\n        vs: vs,\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n/* fragment shader for the grid-layer */\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({ model: this._createModel(gl) });\n\n      var attributeManager = this.state.attributeManager;\n      /* eslint-disable max-len */\n\n      attributeManager.addInstanced({\n        instancePositions: { size: 4, accessor: ['getPosition', 'getElevation'], update: this.calculateInstancePositions },\n        instanceColors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateInstanceColors }\n      });\n      /* eslint-enable max-len */\n    }\n  }, {\n    key: '_createModel',\n    value: function _createModel(gl) {\n      var geometry = new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"CubeGeometry\"]({});\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: geometry,\n        isInstanced: true\n      });\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n\n      _get(GridLayer.prototype.__proto__ || Object.getPrototypeOf(GridLayer.prototype), 'draw', this).call(this, { uniforms: Object.assign({\n          enable3d: this.props.enable3d ? 1 : 0,\n          latDelta: this.props.latDelta,\n          lngDelta: this.props.lngDelta,\n          opacity: this.props.opacity,\n          viewMatrix: viewMatrix\n        }, uniforms) });\n    }\n  }, {\n    key: 'calculateInstancePositions',\n    value: function calculateInstancePositions(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getPosition = _props.getPosition,\n          getElevation = _props.getElevation;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var position = getPosition(object);\n          var height = getElevation(object) || 0;\n          value[i + 0] = position[0];\n          value[i + 1] = position[1];\n          value[i + 2] = 0;\n          value[i + 3] = height;\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceColors',\n    value: function calculateInstanceColors(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getColor = _props2.getColor;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var color = getColor(object) || DEFAULT_COLOR;\n          value[i + 0] = color[0];\n          value[i + 1] = color[1];\n          value[i + 2] = color[2];\n          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return GridLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = GridLayer;\n\n\nGridLayer.layerName = 'GridLayer';\nGridLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 33 */
/* exports provided: default */
/* exports used: default */
/*!********************************************************!*\
  !*** ./src/layers/core/hexagon-layer/hexagon-layer.js ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_assert__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_gl_matrix__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\n\n\nfunction positionsAreEqual(v1, v2) {\n  // Hex positions are expected to change entirely, not to maintain some\n  // positions and change others. Right now we only check a single vertex,\n  // because H3 guarantees order, but even if that wasn't true, this would only\n  // return a false positive for adjacent hexagons, which is close enough for\n  // our purposes.\n  return v1 === v2 || v1 && v2 && v1[0][0] === v2[0][0] && v1[0][1] === v2[0][1];\n}\n\nvar defaultProps = {\n  id: 'hexagon-layer',\n  data: [],\n  dotRadius: 1,\n  enable3d: true,\n  hexagonVertices: null,\n  invisibleColor: [0, 0, 0],\n  getCentroid: function getCentroid(x) {\n    return x.centroid;\n  },\n  getColor: function getColor(x) {\n    return x.color;\n  },\n  getAlpha: function getAlpha(x) {\n    return 255;\n  },\n  getElevation: function getElevation(x) {\n    return x.elevation;\n  }\n};\n\n// viewMatrix added as Uniform for lighting calculation\nvar viewMatrixCompat = __WEBPACK_IMPORTED_MODULE_5_gl_matrix__[\"mat4\"].create();\n__WEBPACK_IMPORTED_MODULE_5_gl_matrix__[\"mat4\"].lookAt(viewMatrixCompat, [0, 0, 0], [0, 0, -1], [0, 1, 0]);\nvar viewMatrix = new Float32Array(viewMatrixCompat);\n\nvar HexagonLayer = function (_Layer) {\n  _inherits(HexagonLayer, _Layer);\n\n  /**\n   * @classdesc\n   * HexagonLayer is a variation of grid layer, it is intended to render\n   * hexagon tessellations. It supports elevation, lighting as well\n   *\n   * @class\n   * @param {object} props\n   * @param {number} props.data - all hexagons\n   * @param {number} props.dotRadius - hexagon radius multiplier\n   * @param {boolean} props.enable3d - if set to false, all hexagons will be flat\n   * @param {array} props.hexagonVertices - primitive hexagon vertices as [[lon, lat]]\n   * @param {object} props.invisibleColor - hexagon invisible color\n   * @param {function} props.getCentroid - hexagon centroid should be formatted as [lon, lat]\n   * @param {function} props.getColor -  hexagon color should be formatted as [255, 255, 255]\n   * @param {function} props.alpha -  hexagon opacity should be from 0 - 255\n   * @param {function} props.getElevation - hexagon elevation 1 unit approximate to 100 meters\n   *\n   */\n  function HexagonLayer(props) {\n    _classCallCheck(this, HexagonLayer);\n\n    __WEBPACK_IMPORTED_MODULE_4_assert___default()(props.hexagonVertices, 'hexagonVertices must be supplied');\n    __WEBPACK_IMPORTED_MODULE_4_assert___default()(props.hexagonVertices.length === 6, 'hexagonVertices should be an array of 6 [lon, lat] paris');\n    return _possibleConstructorReturn(this, (HexagonLayer.__proto__ || Object.getPrototypeOf(HexagonLayer)).call(this, props));\n  }\n\n  /**\n   * DeckGL calls initializeState when GL context is available\n   * Essentially a deferred constructor\n   */\n\n\n  _createClass(HexagonLayer, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n\n      this.setState({ model: this.getModel(gl) });\n\n      var attributeManager = this.state.attributeManager;\n      /* eslint-disable max-len */\n\n      attributeManager.addInstanced({\n        instancePositions: { size: 3, accessor: ['getCentroid', 'getElevation'], update: this.calculateInstancePositions },\n        instanceColors: { size: 4, type: gl.UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateInstanceColors }\n      });\n      /* eslint-enable max-len */\n\n      this.updateRadiusAngle();\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          props = _ref.props,\n          oldProps = _ref.oldProps,\n          _ref$changeFlags = _ref.changeFlags,\n          dataChanged = _ref$changeFlags.dataChanged,\n          viewportChanged = _ref$changeFlags.viewportChanged;\n\n      var _state = this.state,\n          model = _state.model,\n          attributeManager = _state.attributeManager;\n\n\n      if (dataChanged) {\n        attributeManager.invalidateAll();\n      }\n\n      // Update the positions in the model if they've changes\n      var verticesChanged = !positionsAreEqual(oldProps.hexagonVertices, props.hexagonVertices);\n\n      if (model && (verticesChanged || viewportChanged)) {\n        this.updateRadiusAngle();\n      }\n\n      this.updateUniforms();\n    }\n  }, {\n    key: 'updateRadiusAngle',\n    value: function updateRadiusAngle() {\n      var _props = this.props,\n          vertices = _props.hexagonVertices,\n          dotRadius = _props.dotRadius;\n\n\n      var vertex0 = vertices[0];\n      var vertex3 = vertices[3];\n\n      // transform to space coordinates\n      var spaceCoord0 = this.projectFlat(vertex0);\n      var spaceCoord3 = this.projectFlat(vertex3);\n\n      // distance between two close centroids\n      var dx = spaceCoord0[0] - spaceCoord3[0];\n      var dy = spaceCoord0[1] - spaceCoord3[1];\n      var dxy = Math.sqrt(dx * dx + dy * dy);\n\n      this.setUniforms({\n        // Calculate angle that the perpendicular hexagon vertex axis is tilted\n        angle: Math.acos(dx / dxy) * -Math.sign(dy) + Math.PI / 2,\n        // Allow user to fine tune radius\n        radius: dxy / 2 * Math.max(0, Math.min(1, dotRadius))\n      });\n    }\n  }, {\n    key: 'getCylinderGeometry',\n    value: function getCylinderGeometry(radius) {\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"CylinderGeometry\"]({\n        radius: radius,\n        topRadius: radius,\n        bottomRadius: radius,\n        topCap: true,\n        bottomCap: true,\n        height: 1,\n        nradial: 6,\n        nvertical: 1\n      });\n    }\n  }, {\n    key: 'updateUniforms',\n    value: function updateUniforms() {\n      var _props2 = this.props,\n          opacity = _props2.opacity,\n          enable3d = _props2.enable3d,\n          invisibleColor = _props2.invisibleColor;\n\n      this.setUniforms({\n        enable3d: enable3d ? 1 : 0,\n        invisibleColor: invisibleColor,\n        opacity: opacity\n      });\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      var vertex = '#define SHADER_NAME extruded-hexagon-layer-vs\\n\\nattribute vec3 positions;\\nattribute vec3 normals;\\n\\nattribute vec3 instancePositions;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\n// Picking uniforms\\n// Set to 1.0 if rendering picking buffer, 0.0 if rendering for display\\nuniform float renderPickingBuffer;\\nuniform vec3 selectedPickingColor;\\n\\n// Projection uniforms\\nuniform mat4 worldMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 worldInverseTransposeMatrix;\\n\\n// Custom uniforms\\nuniform float opacity;\\nuniform vec3 invisibleColor;\\nuniform float radius;\\nuniform float angle;\\nuniform float enable3d;\\n\\n// Lighting constants\\nconst vec3 ambientColor = vec3(1., 1., 1.);\\nconst vec3 pointLocation = vec3(-1., 3., -1.);\\nconst vec3 pointColor = vec3(1., 1., 1.);\\nconst vec3 pointSpecularColor = vec3(0.6, 0.6, 0.6);\\nconst float shininess = 3.;\\nconst float pointLightAmbientCoefficient = 0.8;\\n\\n// Result\\nvarying vec4 vColor;\\n\\n// A magic number to scale elevation so that 1 unit approximate to 100 meter\\n#define ELEVATION_SCALE 80.\\n\\nvoid main(void) {\\n\\n  // rotate primitive position and normal\\n  mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\\n\\n  vec2 rPos = rotationMatrix * positions.xz;\\n  vec2 rNorm = rotationMatrix * normals.xz;\\n\\n  vec3 rotatedPositions = vec3(rPos.x, positions.y, rPos.y);\\n  vec3 rotatedNormals = vec3(rNorm.x, normals.y, rNorm.y);\\n\\n  // calculate elevation, if 3d not enabled set to 0\\n  // cylindar gemoetry height are between -0.5 to 0.5, transform it to between 0, 1\\n  float elevation =  mix(0., project_scale(instancePositions.z  * (positions.y + 0.5) * ELEVATION_SCALE), enable3d);\\n\\n  // project center of hexagon\\n  vec4 centroidPosition = vec4(project_position(instancePositions.xy), elevation, 0.0);\\n\\n  gl_Position = project_to_clipspace(centroidPosition + vec4(vec2(rotatedPositions.xz * radius), 0., 1.));\\n\\n  // check whether hexagon is currently picked\\n  float selected = isPicked(instancePickingColors, selectedPickingColor);\\n\\n  // calculate lighting\\n  vec3 lightWeighting = getLightWeight(\\n    viewMatrix,\\n    worldMatrix,\\n    worldInverseTransposeMatrix,\\n    rotatedPositions,\\n    rotatedNormals,\\n    selected,\\n    ambientColor,\\n    pointLocation,\\n    pointColor,\\n    pointSpecularColor,\\n    pointLightAmbientCoefficient,\\n    shininess\\n  );\\n\\n  vec3 lightWeightedColor = mix(vec3(1), lightWeighting, enable3d) * (instanceColors.rgb / 255.0);\\n\\n  // Hide hexagon if set to invisibleColor\\n  float alpha = instanceColors.rgb == invisibleColor ? 0. : opacity;\\n\\n  // Color: Either opacity-multiplied instance color, or picking color\\n  vec4 color = vec4(lightWeightedColor, alpha * instanceColors.a / 255.);\\n\\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\\n\\n  vColor = mix(color, pickingColor, renderPickingBuffer);\\n}\\n';\n      var lighting = '// get lighitng from position normals and lighting config\\n\\nvec3 getLightWeight(\\n  mat4 viewMatrix,\\n  mat4 worldMatrix,\\n  mat4 worldInverseTransposeMatrix,\\n  vec3 positions,\\n  vec3 normals,\\n  float selected,\\n\\n  vec3 ambientColor,\\n  vec3 pointLocation,\\n  vec3 pointColor,\\n  vec3 pointSpecularColor,\\n  float pointLightAmbientCoefficient,\\n  float shininess\\n) {\\n  vec4 vPosition = worldMatrix * vec4(positions, 1.0);\\n  vec4 vTransformedNormal = worldInverseTransposeMatrix * vec4(normals, 1);\\n  vec3 normal = vTransformedNormal.xyz;\\n  vec3 eyeDirection = normalize(-vPosition.xyz);\\n\\n  vec3 transformedPointLocation = (viewMatrix * vec4(pointLocation, 1.0)).xyz;\\n  vec3 lightDirection = normalize(transformedPointLocation - vPosition.xyz);\\n  vec3 reflectionDirection = reflect(-lightDirection, normal);\\n\\n  float specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), clamp(shininess, 1., 32.));\\n  vec3 specularLight = specularLightWeighting * pointSpecularColor;\\n\\n  float diffuseLightWeighting = max(dot(normal, lightDirection), 0.0);\\n  vec3 diffuseLight = diffuseLightWeighting * pointColor;\\n\\n\\n  float factor = mix(0., 1., selected);\\n  return (ambientColor * pointLightAmbientCoefficient + factor) + diffuseLight + specularLight;\\n}\\n';\n      var picking = '// whether is point picked\\nfloat isPicked(vec3 pickingColors, vec3 selectedColor) {\\n return float(pickingColors.x == selectedColor.x\\n && pickingColors.y == selectedColor.y\\n && pickingColors.z == selectedColor.z);\\n}\\n';\n      var vs = picking.concat(lighting).concat(vertex);\n\n      return {\n        vs: vs,\n        fs: '// See: npm glsl-shader-name\\n#define SHADER_NAME extruded-hexagon-layer-fs\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: this.getCylinderGeometry(1),\n        isInstanced: true\n      });\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n\n      _get(HexagonLayer.prototype.__proto__ || Object.getPrototypeOf(HexagonLayer.prototype), 'draw', this).call(this, { uniforms: Object.assign({}, { viewMatrix: viewMatrix }, uniforms) });\n    }\n  }, {\n    key: 'calculateInstancePositions',\n    value: function calculateInstancePositions(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getCentroid = _props3.getCentroid,\n          getElevation = _props3.getElevation;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var _getCentroid = getCentroid(object),\n              _getCentroid2 = _slicedToArray(_getCentroid, 2),\n              lon = _getCentroid2[0],\n              lat = _getCentroid2[1];\n\n          var elevation = getElevation(object);\n          value[i + 0] = lon;\n          value[i + 1] = lat;\n          value[i + 2] = elevation || this.props.elevation;\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceColors',\n    value: function calculateInstanceColors(attribute) {\n      var _props4 = this.props,\n          data = _props4.data,\n          getColor = _props4.getColor,\n          getAlpha = _props4.getAlpha;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var color = getColor(object);\n          value[i + 0] = color[0];\n          value[i + 1] = color[1];\n          value[i + 2] = color[2];\n          value[i + 3] = getAlpha(object);\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return HexagonLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = HexagonLayer;\n\n\nHexagonLayer.layerName = 'HexagonLayer';\nHexagonLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 34 */
/* exports provided: default */
/* exports used: default */
/*!**************************************************!*\
  !*** ./src/layers/core/icon-layer/icon-layer.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\nvar DEFAULT_COLOR = [0, 0, 0, 255];\n\n/*\n * @param {object} props\n * @param {Texture2D | string} props.iconAtlas - atlas image url or texture\n * @param {object} props.iconMapping - icon names mapped to icon definitions\n * @param {object} props.iconMapping[icon_name].x - x position of icon on the atlas image\n * @param {object} props.iconMapping[icon_name].y - y position of icon on the atlas image\n * @param {object} props.iconMapping[icon_name].width - width of icon on the atlas image\n * @param {object} props.iconMapping[icon_name].height - height of icon on the atlas image\n * @param {object} props.iconMapping[icon_name].anchorX - x anchor of icon on the atlas image,\n *   default to width / 2\n * @param {object} props.iconMapping[icon_name].anchorY - y anchor of icon on the atlas image,\n *   default to height / 2\n * @param {object} props.iconMapping[icon_name].mask - whether icon is treated as a transparency\n *   mask. If true, user defined color is applied. If false, original color from the image is\n *   applied. Default to false.\n * @param {number} props.size - icon size in pixels\n * @param {func} props.getPosition - returns anchor position of the icon, in [lng, lat, z]\n * @param {func} props.getIcon - returns icon name as a string\n * @param {func} props.getScale - returns icon size multiplier as a number\n * @param {func} props.getColor - returns color of the icon in [r, g, b, a]. Only works on icons\n *   with mask: true.\n */\nvar defaultProps = {\n  getPosition: function getPosition(x) {\n    return x.position;\n  },\n  getIcon: function getIcon(x) {\n    return x.icon;\n  },\n  getColor: function getColor(x) {\n    return x.color;\n  },\n  getScale: function getScale(x) {\n    return x.size;\n  },\n  iconAtlas: null,\n  iconMapping: {},\n  size: 30\n};\n\nvar IconLayer = function (_Layer) {\n  _inherits(IconLayer, _Layer);\n\n  function IconLayer() {\n    _classCallCheck(this, IconLayer);\n\n    return _possibleConstructorReturn(this, (IconLayer.__proto__ || Object.getPrototypeOf(IconLayer)).apply(this, arguments));\n  }\n\n  _createClass(IconLayer, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      var attributeManager = this.state.attributeManager;\n      /* eslint-disable max-len */\n\n      attributeManager.addInstanced({\n        instancePositions: { size: 3, accessor: 'getPosition', update: this.calculateInstancePositions },\n        instanceSizes: { size: 1, accessor: 'getScale', update: this.calculateInstanceSizes },\n        instanceOffsets: { size: 2, accessor: 'getIcon', update: this.calculateInstanceOffsets },\n        instanceIconFrames: { size: 4, accessor: 'getIcon', update: this.calculateInstanceIconFrames },\n        instanceColorModes: { size: 1, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getIcon', update: this.calculateInstanceColorMode },\n        instanceColors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].UNSIGNED_BYTE, accessor: 'getColor', update: this.calculateInstanceColors }\n      });\n      /* eslint-enable max-len */\n\n      var gl = this.context.gl;\n\n      this.setState({ model: this.getModel(gl) });\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var _this2 = this;\n\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var iconAtlas = props.iconAtlas;\n\n\n      if (oldProps.iconAtlas !== iconAtlas) {\n        (function () {\n          var icons = {};\n          _this2.state.icons = icons;\n\n          if (iconAtlas instanceof __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Texture2D\"]) {\n            icons.texture = iconAtlas;\n          } else if (typeof iconAtlas === 'string') {\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"loadTextures\"])(_this2.context.gl, {\n              urls: [iconAtlas]\n            }).then(function (_ref2) {\n              var _ref3 = _slicedToArray(_ref2, 1),\n                  texture = _ref3[0];\n\n              icons.texture = texture;\n            });\n          }\n        })();\n      }\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref4) {\n      var uniforms = _ref4.uniforms;\n      var _context = this.context,\n          _context$viewport = _context.viewport,\n          width = _context$viewport.width,\n          height = _context$viewport.height,\n          gl = _context.gl;\n      var size = this.props.size;\n\n      var iconsTexture = this.state.icons && this.state.icons.texture;\n\n      if (iconsTexture) {\n        // transparency doesn't work with DEPTH_TEST on\n        // tradeoff being we cannot guarantee that foreground icons will be rendered on top\n        gl.disable(gl.DEPTH_TEST);\n\n        this.state.model.render(Object.assign({}, uniforms, {\n          iconsTexture: iconsTexture,\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n          size: [size / width, -size / height]\n        }));\n\n        gl.enable(gl.DEPTH_TEST);\n      }\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n#define SHADER_NAME icon-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute float instanceSizes;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceIconFrames;\\nattribute float instanceColorModes;\\nattribute vec2 instanceOffsets;\\n\\nuniform vec2 size;\\n\\nuniform float renderPickingBuffer;\\nuniform vec2 iconsTextureDim;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\n\\nvoid main(void) {\\n  vec3 center = project_position(instancePositions);\\n  vec2 vertex = (positions + instanceOffsets * 2.0) * size * instanceSizes;\\n  gl_Position = project_to_clipspace(vec4(center, 1.0)) + vec4(vertex, 0.0, 0.0);\\n\\n  vTextureCoords = mix(\\n    instanceIconFrames.xy,\\n    instanceIconFrames.xy + instanceIconFrames.zw,\\n    (positions.xy + 1.0) / 2.0\\n  ) / iconsTextureDim;\\n\\n  vTextureCoords.y = 1.0 - vTextureCoords.y;\\n\\n  vec4 color = instanceColors / 255.;\\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\\n  vColor = mix(color, pickingColor, renderPickingBuffer);\\n\\n  vColorMode = instanceColorModes;\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\nuniform sampler2D iconsTexture;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\\n\\n  // if colorMode == 0, use pixel color from the texture\\n  // if colorMode == 1 or rendering picking buffer, use texture as transparency mask\\n  vec3 color = mix(texColor.rgb, vColor.rgb,\\n    max(vColorMode, renderPickingBuffer)\\n  );\\n  float a = texColor.a * opacity * mix(1.0, vColor.a, vColorMode);\\n\\n  // if rendering to screen, use mixed alpha\\n  // if rendering picking buffer, use binary alpha\\n  a = mix(a, step(0.1, a), renderPickingBuffer);\\n\\n  gl_FragColor = vec4(color, a);\\n}\\n'\n      };\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      var positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].TRIANGLE_FAN,\n          positions: new Float32Array(positions)\n        }),\n        isInstanced: true\n      });\n    }\n  }, {\n    key: 'calculateInstancePositions',\n    value: function calculateInstancePositions(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getPosition = _props.getPosition;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var position = getPosition(object);\n          value[i++] = position[0];\n          value[i++] = position[1];\n          value[i++] = position[2] || 0;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceSizes',\n    value: function calculateInstanceSizes(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getScale = _props2.getScale;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var size = getScale(object);\n          value[i++] = isNaN(size) ? 1 : size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceColors',\n    value: function calculateInstanceColors(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getColor = _props3.getColor;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var object = _step3.value;\n\n          var color = getColor(object) || DEFAULT_COLOR;\n\n          value[i++] = color[0];\n          value[i++] = color[1];\n          value[i++] = color[2];\n          value[i++] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceOffsets',\n    value: function calculateInstanceOffsets(attribute) {\n      var _props4 = this.props,\n          data = _props4.data,\n          iconMapping = _props4.iconMapping,\n          getIcon = _props4.getIcon;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var object = _step4.value;\n\n          var icon = getIcon(object);\n          var rect = iconMapping[icon] || {};\n          value[i++] = 1 / 2 - rect.anchorX / rect.width || 0;\n          value[i++] = 1 / 2 - rect.anchorY / rect.height || 0;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceColorMode',\n    value: function calculateInstanceColorMode(attribute) {\n      var _props5 = this.props,\n          data = _props5.data,\n          iconMapping = _props5.iconMapping,\n          getIcon = _props5.getIcon;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = data[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var object = _step5.value;\n\n          var icon = getIcon(object);\n          var colorMode = iconMapping[icon] && iconMapping[icon].mask;\n          value[i++] = colorMode ? 1 : 0;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceIconFrames',\n    value: function calculateInstanceIconFrames(attribute) {\n      var _props6 = this.props,\n          data = _props6.data,\n          iconMapping = _props6.iconMapping,\n          getIcon = _props6.getIcon;\n      var value = attribute.value;\n\n      var i = 0;\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = data[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var object = _step6.value;\n\n          var icon = getIcon(object);\n          var rect = iconMapping[icon] || {};\n          value[i++] = rect.x || 0;\n          value[i++] = rect.y || 0;\n          value[i++] = rect.width || 0;\n          value[i++] = rect.height || 0;\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n  }]);\n\n  return IconLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = IconLayer;\n\n\nIconLayer.layerName = 'IconLayer';\nIconLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2NvcmUvaWNvbi1sYXllci9pY29uLWxheWVyLmpzPzE1ZGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbi8vIENvcHlyaWdodCAoYykgMjAxNSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5pbXBvcnQgeyBMYXllciB9IGZyb20gJy4uLy4uLy4uL2xpYic7XG5pbXBvcnQgeyBhc3NlbWJsZVNoYWRlcnMgfSBmcm9tICcuLi8uLi8uLi9zaGFkZXItdXRpbHMnO1xuaW1wb3J0IHsgR0wsIE1vZGVsLCBHZW9tZXRyeSwgVGV4dHVyZTJELCBsb2FkVGV4dHVyZXMgfSBmcm9tICdsdW1hLmdsJztcblxuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnO1xuXG52YXIgREVGQVVMVF9DT0xPUiA9IFswLCAwLCAwLCAyNTVdO1xuXG4vKlxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gKiBAcGFyYW0ge1RleHR1cmUyRCB8IHN0cmluZ30gcHJvcHMuaWNvbkF0bGFzIC0gYXRsYXMgaW1hZ2UgdXJsIG9yIHRleHR1cmVcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wcy5pY29uTWFwcGluZyAtIGljb24gbmFtZXMgbWFwcGVkIHRvIGljb24gZGVmaW5pdGlvbnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wcy5pY29uTWFwcGluZ1tpY29uX25hbWVdLnggLSB4IHBvc2l0aW9uIG9mIGljb24gb24gdGhlIGF0bGFzIGltYWdlXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMuaWNvbk1hcHBpbmdbaWNvbl9uYW1lXS55IC0geSBwb3NpdGlvbiBvZiBpY29uIG9uIHRoZSBhdGxhcyBpbWFnZVxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzLmljb25NYXBwaW5nW2ljb25fbmFtZV0ud2lkdGggLSB3aWR0aCBvZiBpY29uIG9uIHRoZSBhdGxhcyBpbWFnZVxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzLmljb25NYXBwaW5nW2ljb25fbmFtZV0uaGVpZ2h0IC0gaGVpZ2h0IG9mIGljb24gb24gdGhlIGF0bGFzIGltYWdlXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMuaWNvbk1hcHBpbmdbaWNvbl9uYW1lXS5hbmNob3JYIC0geCBhbmNob3Igb2YgaWNvbiBvbiB0aGUgYXRsYXMgaW1hZ2UsXG4gKiAgIGRlZmF1bHQgdG8gd2lkdGggLyAyXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMuaWNvbk1hcHBpbmdbaWNvbl9uYW1lXS5hbmNob3JZIC0geSBhbmNob3Igb2YgaWNvbiBvbiB0aGUgYXRsYXMgaW1hZ2UsXG4gKiAgIGRlZmF1bHQgdG8gaGVpZ2h0IC8gMlxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzLmljb25NYXBwaW5nW2ljb25fbmFtZV0ubWFzayAtIHdoZXRoZXIgaWNvbiBpcyB0cmVhdGVkIGFzIGEgdHJhbnNwYXJlbmN5XG4gKiAgIG1hc2suIElmIHRydWUsIHVzZXIgZGVmaW5lZCBjb2xvciBpcyBhcHBsaWVkLiBJZiBmYWxzZSwgb3JpZ2luYWwgY29sb3IgZnJvbSB0aGUgaW1hZ2UgaXNcbiAqICAgYXBwbGllZC4gRGVmYXVsdCB0byBmYWxzZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9wcy5zaXplIC0gaWNvbiBzaXplIGluIHBpeGVsc1xuICogQHBhcmFtIHtmdW5jfSBwcm9wcy5nZXRQb3NpdGlvbiAtIHJldHVybnMgYW5jaG9yIHBvc2l0aW9uIG9mIHRoZSBpY29uLCBpbiBbbG5nLCBsYXQsIHpdXG4gKiBAcGFyYW0ge2Z1bmN9IHByb3BzLmdldEljb24gLSByZXR1cm5zIGljb24gbmFtZSBhcyBhIHN0cmluZ1xuICogQHBhcmFtIHtmdW5jfSBwcm9wcy5nZXRTY2FsZSAtIHJldHVybnMgaWNvbiBzaXplIG11bHRpcGxpZXIgYXMgYSBudW1iZXJcbiAqIEBwYXJhbSB7ZnVuY30gcHJvcHMuZ2V0Q29sb3IgLSByZXR1cm5zIGNvbG9yIG9mIHRoZSBpY29uIGluIFtyLCBnLCBiLCBhXS4gT25seSB3b3JrcyBvbiBpY29uc1xuICogICB3aXRoIG1hc2s6IHRydWUuXG4gKi9cbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGdldFBvc2l0aW9uOiBmdW5jdGlvbiBnZXRQb3NpdGlvbih4KSB7XG4gICAgcmV0dXJuIHgucG9zaXRpb247XG4gIH0sXG4gIGdldEljb246IGZ1bmN0aW9uIGdldEljb24oeCkge1xuICAgIHJldHVybiB4Lmljb247XG4gIH0sXG4gIGdldENvbG9yOiBmdW5jdGlvbiBnZXRDb2xvcih4KSB7XG4gICAgcmV0dXJuIHguY29sb3I7XG4gIH0sXG4gIGdldFNjYWxlOiBmdW5jdGlvbiBnZXRTY2FsZSh4KSB7XG4gICAgcmV0dXJuIHguc2l6ZTtcbiAgfSxcbiAgaWNvbkF0bGFzOiBudWxsLFxuICBpY29uTWFwcGluZzoge30sXG4gIHNpemU6IDMwXG59O1xuXG52YXIgSWNvbkxheWVyID0gZnVuY3Rpb24gKF9MYXllcikge1xuICBfaW5oZXJpdHMoSWNvbkxheWVyLCBfTGF5ZXIpO1xuXG4gIGZ1bmN0aW9uIEljb25MYXllcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSWNvbkxheWVyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoSWNvbkxheWVyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSWNvbkxheWVyKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSWNvbkxheWVyLCBbe1xuICAgIGtleTogJ2luaXRpYWxpemVTdGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRpYWxpemVTdGF0ZSgpIHtcbiAgICAgIHZhciBhdHRyaWJ1dGVNYW5hZ2VyID0gdGhpcy5zdGF0ZS5hdHRyaWJ1dGVNYW5hZ2VyO1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuXG4gICAgICBhdHRyaWJ1dGVNYW5hZ2VyLmFkZEluc3RhbmNlZCh7XG4gICAgICAgIGluc3RhbmNlUG9zaXRpb25zOiB7IHNpemU6IDMsIGFjY2Vzc29yOiAnZ2V0UG9zaXRpb24nLCB1cGRhdGU6IHRoaXMuY2FsY3VsYXRlSW5zdGFuY2VQb3NpdGlvbnMgfSxcbiAgICAgICAgaW5zdGFuY2VTaXplczogeyBzaXplOiAxLCBhY2Nlc3NvcjogJ2dldFNjYWxlJywgdXBkYXRlOiB0aGlzLmNhbGN1bGF0ZUluc3RhbmNlU2l6ZXMgfSxcbiAgICAgICAgaW5zdGFuY2VPZmZzZXRzOiB7IHNpemU6IDIsIGFjY2Vzc29yOiAnZ2V0SWNvbicsIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZU9mZnNldHMgfSxcbiAgICAgICAgaW5zdGFuY2VJY29uRnJhbWVzOiB7IHNpemU6IDQsIGFjY2Vzc29yOiAnZ2V0SWNvbicsIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZUljb25GcmFtZXMgfSxcbiAgICAgICAgaW5zdGFuY2VDb2xvck1vZGVzOiB7IHNpemU6IDEsIHR5cGU6IEdMLlVOU0lHTkVEX0JZVEUsIGFjY2Vzc29yOiAnZ2V0SWNvbicsIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZUNvbG9yTW9kZSB9LFxuICAgICAgICBpbnN0YW5jZUNvbG9yczogeyBzaXplOiA0LCB0eXBlOiBHTC5VTlNJR05FRF9CWVRFLCBhY2Nlc3NvcjogJ2dldENvbG9yJywgdXBkYXRlOiB0aGlzLmNhbGN1bGF0ZUluc3RhbmNlQ29sb3JzIH1cbiAgICAgIH0pO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSBtYXgtbGVuICovXG5cbiAgICAgIHZhciBnbCA9IHRoaXMuY29udGV4dC5nbDtcblxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IG1vZGVsOiB0aGlzLmdldE1vZGVsKGdsKSB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGVTdGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVN0YXRlKF9yZWYpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgb2xkUHJvcHMgPSBfcmVmLm9sZFByb3BzLFxuICAgICAgICAgIHByb3BzID0gX3JlZi5wcm9wcyxcbiAgICAgICAgICBjaGFuZ2VGbGFncyA9IF9yZWYuY2hhbmdlRmxhZ3M7XG4gICAgICB2YXIgaWNvbkF0bGFzID0gcHJvcHMuaWNvbkF0bGFzO1xuXG5cbiAgICAgIGlmIChvbGRQcm9wcy5pY29uQXRsYXMgIT09IGljb25BdGxhcykge1xuICAgICAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBpY29ucyA9IHt9O1xuICAgICAgICAgIF90aGlzMi5zdGF0ZS5pY29ucyA9IGljb25zO1xuXG4gICAgICAgICAgaWYgKGljb25BdGxhcyBpbnN0YW5jZW9mIFRleHR1cmUyRCkge1xuICAgICAgICAgICAgaWNvbnMudGV4dHVyZSA9IGljb25BdGxhcztcbiAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBpY29uQXRsYXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBsb2FkVGV4dHVyZXMoX3RoaXMyLmNvbnRleHQuZ2wsIHtcbiAgICAgICAgICAgICAgdXJsczogW2ljb25BdGxhc11cbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKF9yZWYyKSB7XG4gICAgICAgICAgICAgIHZhciBfcmVmMyA9IF9zbGljZWRUb0FycmF5KF9yZWYyLCAxKSxcbiAgICAgICAgICAgICAgICAgIHRleHR1cmUgPSBfcmVmM1swXTtcblxuICAgICAgICAgICAgICBpY29ucy50ZXh0dXJlID0gdGV4dHVyZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkcmF3JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZHJhdyhfcmVmNCkge1xuICAgICAgdmFyIHVuaWZvcm1zID0gX3JlZjQudW5pZm9ybXM7XG4gICAgICB2YXIgX2NvbnRleHQgPSB0aGlzLmNvbnRleHQsXG4gICAgICAgICAgX2NvbnRleHQkdmlld3BvcnQgPSBfY29udGV4dC52aWV3cG9ydCxcbiAgICAgICAgICB3aWR0aCA9IF9jb250ZXh0JHZpZXdwb3J0LndpZHRoLFxuICAgICAgICAgIGhlaWdodCA9IF9jb250ZXh0JHZpZXdwb3J0LmhlaWdodCxcbiAgICAgICAgICBnbCA9IF9jb250ZXh0LmdsO1xuICAgICAgdmFyIHNpemUgPSB0aGlzLnByb3BzLnNpemU7XG5cbiAgICAgIHZhciBpY29uc1RleHR1cmUgPSB0aGlzLnN0YXRlLmljb25zICYmIHRoaXMuc3RhdGUuaWNvbnMudGV4dHVyZTtcblxuICAgICAgaWYgKGljb25zVGV4dHVyZSkge1xuICAgICAgICAvLyB0cmFuc3BhcmVuY3kgZG9lc24ndCB3b3JrIHdpdGggREVQVEhfVEVTVCBvblxuICAgICAgICAvLyB0cmFkZW9mZiBiZWluZyB3ZSBjYW5ub3QgZ3VhcmFudGVlIHRoYXQgZm9yZWdyb3VuZCBpY29ucyB3aWxsIGJlIHJlbmRlcmVkIG9uIHRvcFxuICAgICAgICBnbC5kaXNhYmxlKGdsLkRFUFRIX1RFU1QpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUubW9kZWwucmVuZGVyKE9iamVjdC5hc3NpZ24oe30sIHVuaWZvcm1zLCB7XG4gICAgICAgICAgaWNvbnNUZXh0dXJlOiBpY29uc1RleHR1cmUsXG4gICAgICAgICAgaWNvbnNUZXh0dXJlRGltOiBbaWNvbnNUZXh0dXJlLndpZHRoLCBpY29uc1RleHR1cmUuaGVpZ2h0XSxcbiAgICAgICAgICBzaXplOiBbc2l6ZSAvIHdpZHRoLCAtc2l6ZSAvIGhlaWdodF1cbiAgICAgICAgfSkpO1xuXG4gICAgICAgIGdsLmVuYWJsZShnbC5ERVBUSF9URVNUKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRTaGFkZXJzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U2hhZGVycygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZzOiAnLy8gQ29weXJpZ2h0IChjKSAyMDE1IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXFxuLy9cXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XFxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXFxuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcXG4vL1xcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXFxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXFxuLy9cXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXFxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXFxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxcbi8vIFRIRSBTT0ZUV0FSRS5cXG4jZGVmaW5lIFNIQURFUl9OQU1FIGljb24tbGF5ZXItdmVydGV4LXNoYWRlclxcblxcbmF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9ucztcXG5cXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VTaXplcztcXG5hdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUNvbG9ycztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VJY29uRnJhbWVzO1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUNvbG9yTW9kZXM7XFxuYXR0cmlidXRlIHZlYzIgaW5zdGFuY2VPZmZzZXRzO1xcblxcbnVuaWZvcm0gdmVjMiBzaXplO1xcblxcbnVuaWZvcm0gZmxvYXQgcmVuZGVyUGlja2luZ0J1ZmZlcjtcXG51bmlmb3JtIHZlYzIgaWNvbnNUZXh0dXJlRGltO1xcblxcbnZhcnlpbmcgZmxvYXQgdkNvbG9yTW9kZTtcXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkcztcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgdmVjMyBjZW50ZXIgPSBwcm9qZWN0X3Bvc2l0aW9uKGluc3RhbmNlUG9zaXRpb25zKTtcXG4gIHZlYzIgdmVydGV4ID0gKHBvc2l0aW9ucyArIGluc3RhbmNlT2Zmc2V0cyAqIDIuMCkgKiBzaXplICogaW5zdGFuY2VTaXplcztcXG4gIGdsX1Bvc2l0aW9uID0gcHJvamVjdF90b19jbGlwc3BhY2UodmVjNChjZW50ZXIsIDEuMCkpICsgdmVjNCh2ZXJ0ZXgsIDAuMCwgMC4wKTtcXG5cXG4gIHZUZXh0dXJlQ29vcmRzID0gbWl4KFxcbiAgICBpbnN0YW5jZUljb25GcmFtZXMueHksXFxuICAgIGluc3RhbmNlSWNvbkZyYW1lcy54eSArIGluc3RhbmNlSWNvbkZyYW1lcy56dyxcXG4gICAgKHBvc2l0aW9ucy54eSArIDEuMCkgLyAyLjBcXG4gICkgLyBpY29uc1RleHR1cmVEaW07XFxuXFxuICB2VGV4dHVyZUNvb3Jkcy55ID0gMS4wIC0gdlRleHR1cmVDb29yZHMueTtcXG5cXG4gIHZlYzQgY29sb3IgPSBpbnN0YW5jZUNvbG9ycyAvIDI1NS47XFxuICB2ZWM0IHBpY2tpbmdDb2xvciA9IHZlYzQoaW5zdGFuY2VQaWNraW5nQ29sb3JzIC8gMjU1LiwgMS4pO1xcbiAgdkNvbG9yID0gbWl4KGNvbG9yLCBwaWNraW5nQ29sb3IsIHJlbmRlclBpY2tpbmdCdWZmZXIpO1xcblxcbiAgdkNvbG9yTW9kZSA9IGluc3RhbmNlQ29sb3JNb2RlcztcXG59XFxuJyxcbiAgICAgICAgZnM6ICcvLyBDb3B5cmlnaHQgKGMpIDIwMTUgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cXG4vL1xcbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcXG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxcbi8vXFxuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cXG4vL1xcbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXFxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXFxuLy8gVEhFIFNPRlRXQVJFLlxcbiNkZWZpbmUgU0hBREVSX05BTUUgc2NhdHRlcnBsb3QtbGF5ZXItZnJhZ21lbnQtc2hhZGVyXFxuXFxuI2lmZGVmIEdMX0VTXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiNlbmRpZlxcblxcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIGZsb2F0IHJlbmRlclBpY2tpbmdCdWZmZXI7XFxudW5pZm9ybSBzYW1wbGVyMkQgaWNvbnNUZXh0dXJlO1xcblxcbnZhcnlpbmcgZmxvYXQgdkNvbG9yTW9kZTtcXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkcztcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgdmVjNCB0ZXhDb2xvciA9IHRleHR1cmUyRChpY29uc1RleHR1cmUsIHZUZXh0dXJlQ29vcmRzKTtcXG5cXG4gIC8vIGlmIGNvbG9yTW9kZSA9PSAwLCB1c2UgcGl4ZWwgY29sb3IgZnJvbSB0aGUgdGV4dHVyZVxcbiAgLy8gaWYgY29sb3JNb2RlID09IDEgb3IgcmVuZGVyaW5nIHBpY2tpbmcgYnVmZmVyLCB1c2UgdGV4dHVyZSBhcyB0cmFuc3BhcmVuY3kgbWFza1xcbiAgdmVjMyBjb2xvciA9IG1peCh0ZXhDb2xvci5yZ2IsIHZDb2xvci5yZ2IsXFxuICAgIG1heCh2Q29sb3JNb2RlLCByZW5kZXJQaWNraW5nQnVmZmVyKVxcbiAgKTtcXG4gIGZsb2F0IGEgPSB0ZXhDb2xvci5hICogb3BhY2l0eSAqIG1peCgxLjAsIHZDb2xvci5hLCB2Q29sb3JNb2RlKTtcXG5cXG4gIC8vIGlmIHJlbmRlcmluZyB0byBzY3JlZW4sIHVzZSBtaXhlZCBhbHBoYVxcbiAgLy8gaWYgcmVuZGVyaW5nIHBpY2tpbmcgYnVmZmVyLCB1c2UgYmluYXJ5IGFscGhhXFxuICBhID0gbWl4KGEsIHN0ZXAoMC4xLCBhKSwgcmVuZGVyUGlja2luZ0J1ZmZlcik7XFxuXFxuICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCBhKTtcXG59XFxuJ1xuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRNb2RlbCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldE1vZGVsKGdsKSB7XG4gICAgICB2YXIgcG9zaXRpb25zID0gWy0xLCAtMSwgMCwgLTEsIDEsIDAsIDEsIDEsIDAsIDEsIC0xLCAwXTtcblxuICAgICAgdmFyIHNoYWRlcnMgPSBhc3NlbWJsZVNoYWRlcnMoZ2wsIHRoaXMuZ2V0U2hhZGVycygpKTtcblxuICAgICAgcmV0dXJuIG5ldyBNb2RlbCh7XG4gICAgICAgIGdsOiBnbCxcbiAgICAgICAgaWQ6IHRoaXMucHJvcHMuaWQsXG4gICAgICAgIHZzOiBzaGFkZXJzLnZzLFxuICAgICAgICBmczogc2hhZGVycy5mcyxcbiAgICAgICAgZ2VvbWV0cnk6IG5ldyBHZW9tZXRyeSh7XG4gICAgICAgICAgZHJhd01vZGU6IEdMLlRSSUFOR0xFX0ZBTixcbiAgICAgICAgICBwb3NpdGlvbnM6IG5ldyBGbG9hdDMyQXJyYXkocG9zaXRpb25zKVxuICAgICAgICB9KSxcbiAgICAgICAgaXNJbnN0YW5jZWQ6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NhbGN1bGF0ZUluc3RhbmNlUG9zaXRpb25zJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2FsY3VsYXRlSW5zdGFuY2VQb3NpdGlvbnMoYXR0cmlidXRlKSB7XG4gICAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBkYXRhID0gX3Byb3BzLmRhdGEsXG4gICAgICAgICAgZ2V0UG9zaXRpb24gPSBfcHJvcHMuZ2V0UG9zaXRpb247XG4gICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGUudmFsdWU7XG5cbiAgICAgIHZhciBpID0gMDtcbiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICAgICAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBkYXRhW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgICAgIHZhciBvYmplY3QgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgICAgIHZhciBwb3NpdGlvbiA9IGdldFBvc2l0aW9uKG9iamVjdCk7XG4gICAgICAgICAgdmFsdWVbaSsrXSA9IHBvc2l0aW9uWzBdO1xuICAgICAgICAgIHZhbHVlW2krK10gPSBwb3NpdGlvblsxXTtcbiAgICAgICAgICB2YWx1ZVtpKytdID0gcG9zaXRpb25bMl0gfHwgMDtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY2FsY3VsYXRlSW5zdGFuY2VTaXplcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZUluc3RhbmNlU2l6ZXMoYXR0cmlidXRlKSB7XG4gICAgICB2YXIgX3Byb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgZGF0YSA9IF9wcm9wczIuZGF0YSxcbiAgICAgICAgICBnZXRTY2FsZSA9IF9wcm9wczIuZ2V0U2NhbGU7XG4gICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGUudmFsdWU7XG5cbiAgICAgIHZhciBpID0gMDtcbiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7XG4gICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7XG4gICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IyID0gZGF0YVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwMjsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IChfc3RlcDIgPSBfaXRlcmF0b3IyLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZSkge1xuICAgICAgICAgIHZhciBvYmplY3QgPSBfc3RlcDIudmFsdWU7XG5cbiAgICAgICAgICB2YXIgc2l6ZSA9IGdldFNjYWxlKG9iamVjdCk7XG4gICAgICAgICAgdmFsdWVbaSsrXSA9IGlzTmFOKHNpemUpID8gMSA6IHNpemU7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjIgPSB0cnVlO1xuICAgICAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4pIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjIucmV0dXJuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjIpIHtcbiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjYWxjdWxhdGVJbnN0YW5jZUNvbG9ycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZUluc3RhbmNlQ29sb3JzKGF0dHJpYnV0ZSkge1xuICAgICAgdmFyIF9wcm9wczMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGRhdGEgPSBfcHJvcHMzLmRhdGEsXG4gICAgICAgICAgZ2V0Q29sb3IgPSBfcHJvcHMzLmdldENvbG9yO1xuICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlLnZhbHVlO1xuXG4gICAgICB2YXIgaSA9IDA7XG4gICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSB0cnVlO1xuICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yMyA9IGZhbHNlO1xuICAgICAgdmFyIF9pdGVyYXRvckVycm9yMyA9IHVuZGVmaW5lZDtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yMyA9IGRhdGFbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDM7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSAoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWUpIHtcbiAgICAgICAgICB2YXIgb2JqZWN0ID0gX3N0ZXAzLnZhbHVlO1xuXG4gICAgICAgICAgdmFyIGNvbG9yID0gZ2V0Q29sb3Iob2JqZWN0KSB8fCBERUZBVUxUX0NPTE9SO1xuXG4gICAgICAgICAgdmFsdWVbaSsrXSA9IGNvbG9yWzBdO1xuICAgICAgICAgIHZhbHVlW2krK10gPSBjb2xvclsxXTtcbiAgICAgICAgICB2YWx1ZVtpKytdID0gY29sb3JbMl07XG4gICAgICAgICAgdmFsdWVbaSsrXSA9IGlzTmFOKGNvbG9yWzNdKSA/IERFRkFVTFRfQ09MT1JbM10gOiBjb2xvclszXTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yMyA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yMyA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyAmJiBfaXRlcmF0b3IzLnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMy5yZXR1cm4oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMykge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IzO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NhbGN1bGF0ZUluc3RhbmNlT2Zmc2V0cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZUluc3RhbmNlT2Zmc2V0cyhhdHRyaWJ1dGUpIHtcbiAgICAgIHZhciBfcHJvcHM0ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBkYXRhID0gX3Byb3BzNC5kYXRhLFxuICAgICAgICAgIGljb25NYXBwaW5nID0gX3Byb3BzNC5pY29uTWFwcGluZyxcbiAgICAgICAgICBnZXRJY29uID0gX3Byb3BzNC5nZXRJY29uO1xuICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlLnZhbHVlO1xuXG4gICAgICB2YXIgaSA9IDA7XG4gICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjQgPSB0cnVlO1xuICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yNCA9IGZhbHNlO1xuICAgICAgdmFyIF9pdGVyYXRvckVycm9yNCA9IHVuZGVmaW5lZDtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yNCA9IGRhdGFbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDQ7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjQgPSAoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCA9IHRydWUpIHtcbiAgICAgICAgICB2YXIgb2JqZWN0ID0gX3N0ZXA0LnZhbHVlO1xuXG4gICAgICAgICAgdmFyIGljb24gPSBnZXRJY29uKG9iamVjdCk7XG4gICAgICAgICAgdmFyIHJlY3QgPSBpY29uTWFwcGluZ1tpY29uXSB8fCB7fTtcbiAgICAgICAgICB2YWx1ZVtpKytdID0gMSAvIDIgLSByZWN0LmFuY2hvclggLyByZWN0LndpZHRoIHx8IDA7XG4gICAgICAgICAgdmFsdWVbaSsrXSA9IDEgLyAyIC0gcmVjdC5hbmNob3JZIC8gcmVjdC5oZWlnaHQgfHwgMDtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yNCA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yNCA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCAmJiBfaXRlcmF0b3I0LnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNC5yZXR1cm4oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yNCkge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NhbGN1bGF0ZUluc3RhbmNlQ29sb3JNb2RlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2FsY3VsYXRlSW5zdGFuY2VDb2xvck1vZGUoYXR0cmlidXRlKSB7XG4gICAgICB2YXIgX3Byb3BzNSA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgZGF0YSA9IF9wcm9wczUuZGF0YSxcbiAgICAgICAgICBpY29uTWFwcGluZyA9IF9wcm9wczUuaWNvbk1hcHBpbmcsXG4gICAgICAgICAgZ2V0SWNvbiA9IF9wcm9wczUuZ2V0SWNvbjtcbiAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZS52YWx1ZTtcblxuICAgICAgdmFyIGkgPSAwO1xuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241ID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjUgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjUgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjUgPSBkYXRhW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA1OyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241ID0gKF9zdGVwNSA9IF9pdGVyYXRvcjUubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjUgPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIG9iamVjdCA9IF9zdGVwNS52YWx1ZTtcblxuICAgICAgICAgIHZhciBpY29uID0gZ2V0SWNvbihvYmplY3QpO1xuICAgICAgICAgIHZhciBjb2xvck1vZGUgPSBpY29uTWFwcGluZ1tpY29uXSAmJiBpY29uTWFwcGluZ1tpY29uXS5tYXNrO1xuICAgICAgICAgIHZhbHVlW2krK10gPSBjb2xvck1vZGUgPyAxIDogMDtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yNSA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yNSA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNSAmJiBfaXRlcmF0b3I1LnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNS5yZXR1cm4oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yNSkge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I1O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NhbGN1bGF0ZUluc3RhbmNlSWNvbkZyYW1lcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZUluc3RhbmNlSWNvbkZyYW1lcyhhdHRyaWJ1dGUpIHtcbiAgICAgIHZhciBfcHJvcHM2ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBkYXRhID0gX3Byb3BzNi5kYXRhLFxuICAgICAgICAgIGljb25NYXBwaW5nID0gX3Byb3BzNi5pY29uTWFwcGluZyxcbiAgICAgICAgICBnZXRJY29uID0gX3Byb3BzNi5nZXRJY29uO1xuICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlLnZhbHVlO1xuXG4gICAgICB2YXIgaSA9IDA7XG4gICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYgPSB0cnVlO1xuICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yNiA9IGZhbHNlO1xuICAgICAgdmFyIF9pdGVyYXRvckVycm9yNiA9IHVuZGVmaW5lZDtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yNiA9IGRhdGFbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDY7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYgPSAoX3N0ZXA2ID0gX2l0ZXJhdG9yNi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNiA9IHRydWUpIHtcbiAgICAgICAgICB2YXIgb2JqZWN0ID0gX3N0ZXA2LnZhbHVlO1xuXG4gICAgICAgICAgdmFyIGljb24gPSBnZXRJY29uKG9iamVjdCk7XG4gICAgICAgICAgdmFyIHJlY3QgPSBpY29uTWFwcGluZ1tpY29uXSB8fCB7fTtcbiAgICAgICAgICB2YWx1ZVtpKytdID0gcmVjdC54IHx8IDA7XG4gICAgICAgICAgdmFsdWVbaSsrXSA9IHJlY3QueSB8fCAwO1xuICAgICAgICAgIHZhbHVlW2krK10gPSByZWN0LndpZHRoIHx8IDA7XG4gICAgICAgICAgdmFsdWVbaSsrXSA9IHJlY3QuaGVpZ2h0IHx8IDA7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjYgPSB0cnVlO1xuICAgICAgICBfaXRlcmF0b3JFcnJvcjYgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYgJiYgX2l0ZXJhdG9yNi5yZXR1cm4pIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjYucmV0dXJuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjYpIHtcbiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yNjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSWNvbkxheWVyO1xufShMYXllcik7XG5cbmV4cG9ydCBkZWZhdWx0IEljb25MYXllcjtcblxuXG5JY29uTGF5ZXIubGF5ZXJOYW1lID0gJ0ljb25MYXllcic7XG5JY29uTGF5ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xheWVycy9jb3JlL2ljb24tbGF5ZXIvaWNvbi1sYXllci5qc1xuLy8gbW9kdWxlIGlkID0gMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 35 */
/* exports provided: default */
/* exports used: default */
/*!****************************************************************!*\
  !*** ./src/layers/core/screen-grid-layer/screen-grid-layer.js ***!
  \****************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\nvar defaultProps = {\n  // @type {number} opts.unitWidth - width of the unit rectangle\n  unitWidth: 100,\n  // @type {number} opts.unitHeight - height of the unit rectangle\n  unitHeight: 100,\n  minColor: [0, 0, 0, 255],\n  maxColor: [0, 255, 0, 255],\n  getPosition: function getPosition(d) {\n    return d.position;\n  },\n  getWeight: function getWeight(d) {\n    return 1;\n  }\n};\n\nvar ScreenGridLayer = function (_Layer) {\n  _inherits(ScreenGridLayer, _Layer);\n\n  function ScreenGridLayer() {\n    _classCallCheck(this, ScreenGridLayer);\n\n    return _possibleConstructorReturn(this, (ScreenGridLayer.__proto__ || Object.getPrototypeOf(ScreenGridLayer)).apply(this, arguments));\n  }\n\n  _createClass(ScreenGridLayer, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME grid-layer-vs\\n\\nattribute vec3 vertices;\\nattribute vec3 instancePositions;\\nattribute float instanceCount;\\nattribute vec3 instancePickingColors;\\n\\nuniform float maxCount;\\nuniform float opacity;\\nuniform vec4 minColor;\\nuniform vec4 maxColor;\\nuniform float renderPickingBuffer;\\nuniform vec3 cellScale;\\nuniform vec3 selectedPickingColor;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  vec4 color = mix(minColor, maxColor, instanceCount / maxCount) / 255.;\\n\\n  vColor = mix(\\n    vec4(color.rgb, color.a * opacity),\\n    vec4(instancePickingColors / 255., 1.),\\n    renderPickingBuffer\\n  );\\n\\n  gl_Position = vec4(instancePositions + vertices * cellScale, 1.);\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n/* fragment shader for the grid-layer */\\n#define SHADER_NAME grid-layer-fs\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      var attributeManager = this.state.attributeManager;\n      /* eslint-disable max-len */\n\n      attributeManager.addInstanced({\n        instancePositions: { size: 3, update: this.calculateInstancePositions },\n        instanceCount: { size: 1, accessor: ['getPosition', 'getWeight'], update: this.calculateInstanceCount }\n      });\n      /* eslint-disable max-len */\n\n      var gl = this.context.gl;\n\n      this.setState({ model: this.getModel(gl) });\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n\n      var cellSizeChanged = props.unitWidth !== oldProps.unitWidth || props.unitHeight !== oldProps.unitHeight;\n\n      if (cellSizeChanged || changeFlags.viewportChanged) {\n        this.updateCell();\n      }\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var _props = this.props,\n          minColor = _props.minColor,\n          maxColor = _props.maxColor;\n      var _state = this.state,\n          model = _state.model,\n          cellScale = _state.cellScale,\n          maxCount = _state.maxCount;\n      var gl = this.context.gl;\n\n      gl.depthMask(true);\n      uniforms = Object.assign({}, uniforms, { minColor: minColor, maxColor: maxColor, cellScale: cellScale, maxCount: maxCount });\n      model.render(uniforms);\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"GL\"].TRIANGLE_FAN,\n          vertices: new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0])\n        }),\n        isInstanced: true\n      });\n    }\n  }, {\n    key: 'updateCell',\n    value: function updateCell() {\n      var _context$viewport = this.context.viewport,\n          width = _context$viewport.width,\n          height = _context$viewport.height;\n      var _props2 = this.props,\n          unitWidth = _props2.unitWidth,\n          unitHeight = _props2.unitHeight;\n\n\n      var MARGIN = 2;\n      var cellScale = new Float32Array([(unitWidth - MARGIN) / width * 2, -(unitHeight - MARGIN) / height * 2, 1]);\n      var numCol = Math.ceil(width / unitWidth);\n      var numRow = Math.ceil(height / unitHeight);\n\n      this.setState({\n        cellScale: cellScale,\n        numCol: numCol,\n        numRow: numRow,\n        numInstances: numCol * numRow\n      });\n\n      var attributeManager = this.state.attributeManager;\n\n      attributeManager.invalidateAll();\n    }\n  }, {\n    key: 'calculateInstancePositions',\n    value: function calculateInstancePositions(attribute, _ref3) {\n      var numInstances = _ref3.numInstances;\n      var _context$viewport2 = this.context.viewport,\n          width = _context$viewport2.width,\n          height = _context$viewport2.height;\n      var _props3 = this.props,\n          unitWidth = _props3.unitWidth,\n          unitHeight = _props3.unitHeight;\n      var numCol = this.state.numCol;\n      var value = attribute.value,\n          size = attribute.size;\n\n\n      for (var i = 0; i < numInstances; i++) {\n        var x = i % numCol;\n        var y = Math.floor(i / numCol);\n        value[i * size + 0] = x * unitWidth / width * 2 - 1;\n        value[i * size + 1] = 1 - y * unitHeight / height * 2;\n        value[i * size + 2] = 0;\n      }\n    }\n  }, {\n    key: 'calculateInstanceCount',\n    value: function calculateInstanceCount(attribute) {\n      var _props4 = this.props,\n          data = _props4.data,\n          unitWidth = _props4.unitWidth,\n          unitHeight = _props4.unitHeight,\n          getPosition = _props4.getPosition,\n          getWeight = _props4.getWeight;\n      var _state2 = this.state,\n          numCol = _state2.numCol,\n          numRow = _state2.numRow;\n      var value = attribute.value;\n\n      var maxCount = 0;\n\n      value.fill(0.0);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var point = _step.value;\n\n          var pixel = this.project(getPosition(point));\n          var colId = Math.floor(pixel[0] / unitWidth);\n          var rowId = Math.floor(pixel[1] / unitHeight);\n          if (colId >= 0 && colId < numCol && rowId >= 0 && rowId < numRow) {\n            var i = colId + rowId * numCol;\n            value[i] += getWeight(point);\n            if (value[i] > maxCount) {\n              maxCount = value[i];\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.setState({ maxCount: maxCount });\n    }\n  }]);\n\n  return ScreenGridLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ScreenGridLayer;\n\n\nScreenGridLayer.layerName = 'ScreenGridLayer';\nScreenGridLayer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 36 */
/* exports provided: default */
/* exports used: default */
/*!************************************************************!*\
  !*** ./src/layers/deprecated/choropleth-layer-64/index.js ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__choropleth_layer_64__ = __webpack_require__(/*! ./choropleth-layer-64 */ 51);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__choropleth_layer_64__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2RlcHJlY2F0ZWQvY2hvcm9wbGV0aC1sYXllci02NC9pbmRleC5qcz8yMGM4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2Nob3JvcGxldGgtbGF5ZXItNjQnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xheWVycy9kZXByZWNhdGVkL2Nob3JvcGxldGgtbGF5ZXItNjQvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDM2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 37 */
/* exports provided: default */
/* exports used: default */
/*!*********************************************************************!*\
  !*** ./src/layers/deprecated/extruded-choropleth-layer-64/index.js ***!
  \*********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__extruded_choropleth_layer_64__ = __webpack_require__(/*! ./extruded-choropleth-layer-64 */ 54);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__extruded_choropleth_layer_64__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2RlcHJlY2F0ZWQvZXh0cnVkZWQtY2hvcm9wbGV0aC1sYXllci02NC9pbmRleC5qcz8wOWE2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2V4dHJ1ZGVkLWNob3JvcGxldGgtbGF5ZXItNjQnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xheWVycy9kZXByZWNhdGVkL2V4dHJ1ZGVkLWNob3JvcGxldGgtbGF5ZXItNjQvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 38 */
/* exports provided: default */
/* exports used: default */
/*!********************************************!*\
  !*** ./src/layers/fp64/arc-layer/index.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__arc_layer_64__ = __webpack_require__(/*! ./arc-layer-64 */ 55);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__arc_layer_64__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2ZwNjQvYXJjLWxheWVyL2luZGV4LmpzPzE5ODAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vYXJjLWxheWVyLTY0JztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9sYXllcnMvZnA2NC9hcmMtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 39 */
/* exports provided: default */
/* exports used: default */
/*!*********************************************!*\
  !*** ./src/layers/fp64/line-layer/index.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__line_layer_64__ = __webpack_require__(/*! ./line-layer-64 */ 56);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__line_layer_64__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2ZwNjQvbGluZS1sYXllci9pbmRleC5qcz9jM2IxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2xpbmUtbGF5ZXItNjQnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xheWVycy9mcDY0L2xpbmUtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDM5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 40 */
/* exports provided: default */
/* exports used: default */
/*!****************************************************!*\
  !*** ./src/layers/fp64/scatterplot-layer/index.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scatterplot_layer_64__ = __webpack_require__(/*! ./scatterplot-layer-64 */ 57);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__scatterplot_layer_64__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2ZwNjQvc2NhdHRlcnBsb3QtbGF5ZXIvaW5kZXguanM/MTc0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9zY2F0dGVycGxvdC1sYXllci02NCc7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGF5ZXJzL2ZwNjQvc2NhdHRlcnBsb3QtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 41 */
/* exports provided: ReflectionEffect */
/* exports used:  */
/*!*******************************************!*\
  !*** ./src/experimental/effects/index.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reflection_effect__ = __webpack_require__(/*! ./reflection-effect */ 16);\n/* unused harmony reexport ReflectionEffect */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhwZXJpbWVudGFsL2VmZmVjdHMvaW5kZXguanM/MjkzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIFJlZmxlY3Rpb25FZmZlY3QgfSBmcm9tICcuL3JlZmxlY3Rpb24tZWZmZWN0JztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9leHBlcmltZW50YWwvZWZmZWN0cy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 42 */
/* exports provided: default */
/* exports used: default */
/*!*************************************************************************!*\
  !*** ./src/experimental/effects/reflection-effect/reflection-effect.js ***!
  \*************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib__ = __webpack_require__(/*! ../../lib */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_viewports__ = __webpack_require__(/*! ../../../lib/viewports */ 15);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global window */\n\n\n\n\n\n// import {WebMercatorViewport} from 'viewport-mercator-project';\n\n\nvar ReflectionEffect = function (_Effect) {\n  _inherits(ReflectionEffect, _Effect);\n\n  /**\n   * @classdesc\n   * ReflectionEffect\n   *\n   * @class\n   * @param reflectivity How visible reflections should be over the map, between 0 and 1\n   * @param blur how blurry the reflection should be, between 0 and 1\n   */\n\n  function ReflectionEffect() {\n    var reflectivity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n    var blur = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n\n    _classCallCheck(this, ReflectionEffect);\n\n    var _this = _possibleConstructorReturn(this, (ReflectionEffect.__proto__ || Object.getPrototypeOf(ReflectionEffect)).call(this));\n\n    _this.reflectivity = reflectivity;\n    _this.blur = blur;\n    _this.framebuffer = null;\n    _this.setNeedsRedraw();\n    return _this;\n  }\n\n  _createClass(ReflectionEffect, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME reflection-effect-vs\\n\\nattribute vec3 vertices;\\n\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  uv = vertices.xy;\\n  gl_Position = vec4(2. * vertices.xy - vec2(1., 1.), 1., 1.);\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME reflection-effect-fs\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nuniform sampler2D reflectionTexture;\\nuniform int reflectionTextureWidth;\\nuniform int reflectionTextureHeight;\\n\\nuniform float reflectivity;\\nuniform float blur;\\n\\n\\nvarying vec2 uv;\\n\\n#define KERNEL_SIZE 7\\n\\n/*\\n * Samples from tex with a gaussian-shaped patch, centered at uv and\\n * with standard deviation sigma.  The size of the texture in\\n * pixels must be specified by dim\\n */\\nvec4 sample_gaussian(sampler2D tex, vec2 dim, vec2 uv, float sigma) {\\n  if (sigma == 0.0) {\\n    return texture2D(tex, uv);\\n  }\\n  \\n  vec2 delta = 1.0 / dim;\\n  vec2 top_left = uv - delta * float(KERNEL_SIZE+1) / 2.0;\\n  \\n  vec4 color = vec4(0);\\n  float sum = 0.0;\\n  for (int i = 0; i <  KERNEL_SIZE; ++i) {\\n    for (int j = 0; j < KERNEL_SIZE; ++j) {\\n      vec2 uv2 = top_left + vec2(i, j) * delta;\\n      float d = length((uv2 - uv) * dim);\\n      float f = exp(-(d*d) / (2.0*sigma * sigma));\\n      color += f * texture2D(tex, uv2);\\n      sum += f;\\n    }\\n  }\\n  return color / sum;\\n}\\n\\nvoid main(void) {\\n  //map blur in [0, 1] to sigma in [0, inf]\\n  //alpha will determine the \"steepness\" of our curve.\\n  //this was picked just to make the scale feel \"natural\"\\n  //if our image is 1000 pixels wide, a blur of 0.5 should correspond\\n  //to a sigma of 1 pixels\\n  float alpha = 1000.0;\\n  float sigma = blur / (alpha * (1.0 - blur));\\n  //let this be our standard deviation in terms of screen-widths.\\n  //rewrite this in terms of pixels.\\n  sigma *= float(reflectionTextureWidth);\\n  \\n  \\n  gl_FragColor = sample_gaussian(reflectionTexture, vec2(reflectionTextureWidth, reflectionTextureHeight), vec2(uv.x, 1. - uv.y), sigma);\\n  //because our canvas expects alphas to be pre-multiplied, we multiply by whole\\n  //color vector by reflectivity, not just the alpha channel\\n  gl_FragColor *= reflectivity;\\n}\\n'\n      };\n    }\n  }, {\n    key: 'initialize',\n    value: function initialize(_ref) {\n      var gl = _ref.gl,\n          layerManager = _ref.layerManager;\n\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      this.unitQuad = new __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: 'reflection-effect',\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"Geometry\"]({\n          drawMode: __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].TRIANGLE_FAN,\n          vertices: new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0])\n        })\n      });\n      this.framebuffer = new __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"Framebuffer\"](gl, { depth: true });\n    }\n  }, {\n    key: 'preDraw',\n    value: function preDraw(_ref2) {\n      var gl = _ref2.gl,\n          layerManager = _ref2.layerManager;\n      var viewport = layerManager.context.viewport;\n      /*\n       * the renderer already has a reference to this, but we don't have a reference to the renderer.\n       * when we refactor the camera code, we should make sure we get a reference to the renderer so\n       * that we can keep this in one place.\n       */\n\n      var dpi = typeof window !== 'undefined' && window.devicePixelRatio || 1;\n      this.framebuffer.resize({ width: dpi * viewport.width, height: dpi * viewport.height });\n      var pitch = viewport.pitch;\n      this.framebuffer.bind();\n      /* this is a huge hack around the existing viewport class.\n       * TODO in the future, once we implement bona-fide cameras, we really need to fix this.\n       */\n      layerManager.setViewport(new __WEBPACK_IMPORTED_MODULE_4__lib_viewports__[\"a\" /* WebMercatorViewport */](Object.assign({}, viewport, { pitch: -180 - pitch })));\n      gl.clear(__WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].COLOR_BUFFER_BIT | __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].DEPTH_BUFFER_BIT);\n\n      layerManager.drawLayers({ pass: 'reflection' });\n      layerManager.setViewport(viewport);\n      this.framebuffer.unbind();\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref3) {\n      var gl = _ref3.gl,\n          layerManager = _ref3.layerManager;\n\n      /*\n       * Render our unit quad.\n       * This will cover the entire screen, but will lie behind all other geometry.\n       * This quad will sample the previously generated reflection texture\n       * in order to create the reflection effect\n       */\n      this.unitQuad.render({\n        reflectionTexture: this.framebuffer.texture,\n        reflectionTextureWidth: this.framebuffer.width,\n        reflectionTextureHeight: this.framebuffer.height,\n        reflectivity: this.reflectivity,\n        blur: this.blur\n      });\n    }\n  }, {\n    key: 'finalize',\n    value: function finalize(_ref4) {\n      /* TODO: Free resources? */\n\n      var gl = _ref4.gl,\n          layerManager = _ref4.layerManager;\n    }\n  }]);\n\n  return ReflectionEffect;\n}(__WEBPACK_IMPORTED_MODULE_2__lib__[\"b\" /* Effect */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ReflectionEffect;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 43 */
/* exports provided: Effect, EffectManager, ReflectionEffect */
/* exports used: Effect, EffectManager */
/*!***********************************!*\
  !*** ./src/experimental/index.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__effects__ = __webpack_require__(/*! ./effects */ 41);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib__ = __webpack_require__(/*! ./lib */ 11);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib__[\"a\"]; });\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhwZXJpbWVudGFsL2luZGV4LmpzPzFjZjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9lZmZlY3RzJztcbmV4cG9ydCAqIGZyb20gJy4vbGliJztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9leHBlcmltZW50YWwvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDQzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 44 */
/* exports provided: default */
/* exports used: default */
/*!************************************************!*\
  !*** ./src/experimental/lib/effect-manager.js ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-try-catch */\n\nvar EffectManager = function () {\n  function EffectManager(_ref) {\n    var gl = _ref.gl,\n        layerManager = _ref.layerManager;\n\n    _classCallCheck(this, EffectManager);\n\n    this.gl = gl;\n    this.layerManager = layerManager;\n    this._effects = [];\n  }\n\n  /**\n   * Adds an effect to be managed.  That effect's initialize function will\n   * be called, and the effect's preDraw and draw callbacks will be\n   * called at the appropriate times in the render loop\n   * @param {Effect} effect - the effect to be added\n   */\n\n\n  _createClass(EffectManager, [{\n    key: \"addEffect\",\n    value: function addEffect(effect) {\n      this._effects.push(effect);\n      this._sortEffects();\n      effect.initialize({ gl: this.gl, layerManager: this.layerManager });\n    }\n\n    /**\n     * Removes an effect that is already being managed.  That effect's\n     * finalize function will be called, and its callbacks will no longer\n     * be envoked in the render loop\n     * @param {Effect} effect - the effect to be removed\n     * @return {bool} - True if the effect was already being managed, and\n     * thus successfully removed; false otherwise\n     */\n\n  }, {\n    key: \"removeEffect\",\n    value: function removeEffect(effect) {\n      var i = this._effects.indexOf(effect);\n      if (i >= 0) {\n        effect.finalize({ gl: this.gl, layerManager: this.layerManager });\n        this._effects.splice(i, 1);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Envoke the preDraw callback of all managed events, in order of\n     * decreasing priority\n     */\n\n  }, {\n    key: \"preDraw\",\n    value: function preDraw() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var effect = _step.value;\n\n          if (effect.needsRedraw) {\n            effect.preDraw({ gl: this.gl, layerManager: this.layerManager });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    /**\n     * Envoke the draw callback of all managed events, in order of\n     * decreasing priority\n     */\n\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._effects[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var effect = _step2.value;\n\n          if (effect.needsRedraw) {\n            effect.draw({ gl: this.gl, layerManager: this.layerManager });\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_sortEffects\",\n    value: function _sortEffects() {\n      this._effects.sort(function (a, b) {\n        if (a.priority > b.priority) {\n          return -1;\n        } else if (a.priority < b.priority) {\n          return 1;\n        }\n        return a.count - b.count;\n      });\n    }\n  }]);\n\n  return EffectManager;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = EffectManager;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhwZXJpbWVudGFsL2xpYi9lZmZlY3QtbWFuYWdlci5qcz85MTBhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXRyeS1jYXRjaCAqL1xuXG52YXIgRWZmZWN0TWFuYWdlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRWZmZWN0TWFuYWdlcihfcmVmKSB7XG4gICAgdmFyIGdsID0gX3JlZi5nbCxcbiAgICAgICAgbGF5ZXJNYW5hZ2VyID0gX3JlZi5sYXllck1hbmFnZXI7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRWZmZWN0TWFuYWdlcik7XG5cbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5sYXllck1hbmFnZXIgPSBsYXllck1hbmFnZXI7XG4gICAgdGhpcy5fZWZmZWN0cyA9IFtdO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYW4gZWZmZWN0IHRvIGJlIG1hbmFnZWQuICBUaGF0IGVmZmVjdCdzIGluaXRpYWxpemUgZnVuY3Rpb24gd2lsbFxuICAgKiBiZSBjYWxsZWQsIGFuZCB0aGUgZWZmZWN0J3MgcHJlRHJhdyBhbmQgZHJhdyBjYWxsYmFja3Mgd2lsbCBiZVxuICAgKiBjYWxsZWQgYXQgdGhlIGFwcHJvcHJpYXRlIHRpbWVzIGluIHRoZSByZW5kZXIgbG9vcFxuICAgKiBAcGFyYW0ge0VmZmVjdH0gZWZmZWN0IC0gdGhlIGVmZmVjdCB0byBiZSBhZGRlZFxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhFZmZlY3RNYW5hZ2VyLCBbe1xuICAgIGtleTogXCJhZGRFZmZlY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkRWZmZWN0KGVmZmVjdCkge1xuICAgICAgdGhpcy5fZWZmZWN0cy5wdXNoKGVmZmVjdCk7XG4gICAgICB0aGlzLl9zb3J0RWZmZWN0cygpO1xuICAgICAgZWZmZWN0LmluaXRpYWxpemUoeyBnbDogdGhpcy5nbCwgbGF5ZXJNYW5hZ2VyOiB0aGlzLmxheWVyTWFuYWdlciB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFuIGVmZmVjdCB0aGF0IGlzIGFscmVhZHkgYmVpbmcgbWFuYWdlZC4gIFRoYXQgZWZmZWN0J3NcbiAgICAgKiBmaW5hbGl6ZSBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZCwgYW5kIGl0cyBjYWxsYmFja3Mgd2lsbCBubyBsb25nZXJcbiAgICAgKiBiZSBlbnZva2VkIGluIHRoZSByZW5kZXIgbG9vcFxuICAgICAqIEBwYXJhbSB7RWZmZWN0fSBlZmZlY3QgLSB0aGUgZWZmZWN0IHRvIGJlIHJlbW92ZWRcbiAgICAgKiBAcmV0dXJuIHtib29sfSAtIFRydWUgaWYgdGhlIGVmZmVjdCB3YXMgYWxyZWFkeSBiZWluZyBtYW5hZ2VkLCBhbmRcbiAgICAgKiB0aHVzIHN1Y2Nlc3NmdWxseSByZW1vdmVkOyBmYWxzZSBvdGhlcndpc2VcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZUVmZmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVFZmZlY3QoZWZmZWN0KSB7XG4gICAgICB2YXIgaSA9IHRoaXMuX2VmZmVjdHMuaW5kZXhPZihlZmZlY3QpO1xuICAgICAgaWYgKGkgPj0gMCkge1xuICAgICAgICBlZmZlY3QuZmluYWxpemUoeyBnbDogdGhpcy5nbCwgbGF5ZXJNYW5hZ2VyOiB0aGlzLmxheWVyTWFuYWdlciB9KTtcbiAgICAgICAgdGhpcy5fZWZmZWN0cy5zcGxpY2UoaSwgMSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEVudm9rZSB0aGUgcHJlRHJhdyBjYWxsYmFjayBvZiBhbGwgbWFuYWdlZCBldmVudHMsIGluIG9yZGVyIG9mXG4gICAgICogZGVjcmVhc2luZyBwcmlvcml0eVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicHJlRHJhd1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVEcmF3KCkge1xuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IHRoaXMuX2VmZmVjdHNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIGVmZmVjdCA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICAgICAgaWYgKGVmZmVjdC5uZWVkc1JlZHJhdykge1xuICAgICAgICAgICAgZWZmZWN0LnByZURyYXcoeyBnbDogdGhpcy5nbCwgbGF5ZXJNYW5hZ2VyOiB0aGlzLmxheWVyTWFuYWdlciB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEVudm9rZSB0aGUgZHJhdyBjYWxsYmFjayBvZiBhbGwgbWFuYWdlZCBldmVudHMsIGluIG9yZGVyIG9mXG4gICAgICogZGVjcmVhc2luZyBwcmlvcml0eVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZHJhd1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkcmF3KCkge1xuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjIgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSB0aGlzLl9lZmZlY3RzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAyOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gKF9zdGVwMiA9IF9pdGVyYXRvcjIubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIGVmZmVjdCA9IF9zdGVwMi52YWx1ZTtcblxuICAgICAgICAgIGlmIChlZmZlY3QubmVlZHNSZWRyYXcpIHtcbiAgICAgICAgICAgIGVmZmVjdC5kcmF3KHsgZ2w6IHRoaXMuZ2wsIGxheWVyTWFuYWdlcjogdGhpcy5sYXllck1hbmFnZXIgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IyID0gdHJ1ZTtcbiAgICAgICAgX2l0ZXJhdG9yRXJyb3IyID0gZXJyO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yICYmIF9pdGVyYXRvcjIucmV0dXJuKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IyLnJldHVybigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IyKSB7XG4gICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9zb3J0RWZmZWN0c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfc29ydEVmZmVjdHMoKSB7XG4gICAgICB0aGlzLl9lZmZlY3RzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgaWYgKGEucHJpb3JpdHkgPiBiLnByaW9yaXR5KSB7XG4gICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9IGVsc2UgaWYgKGEucHJpb3JpdHkgPCBiLnByaW9yaXR5KSB7XG4gICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGEuY291bnQgLSBiLmNvdW50O1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEVmZmVjdE1hbmFnZXI7XG59KCk7XG5cbmV4cG9ydCBkZWZhdWx0IEVmZmVjdE1hbmFnZXI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZXhwZXJpbWVudGFsL2xpYi9lZmZlY3QtbWFuYWdlci5qc1xuLy8gbW9kdWxlIGlkID0gNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 45 */
/* exports provided: default */
/* exports used: default */
/*!****************************************!*\
  !*** ./src/experimental/lib/effect.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar counter = 0;\n\nvar Effect = function () {\n  function Effect() {\n    _classCallCheck(this, Effect);\n\n    this.count = counter++;\n    this.visible = true;\n    this.priority = 0;\n    this.needsRedraw = false;\n  }\n\n  /**\n   * subclasses should override to set up any resources needed\n   */\n\n\n  _createClass(Effect, [{\n    key: \"initialize\",\n    value: function initialize(_ref) {\n      var gl = _ref.gl,\n          layerManager = _ref.layerManager;\n    }\n    /**\n     * and subclasses should free those resources here\n     */\n\n  }, {\n    key: \"finalize\",\n    value: function finalize(_ref2) {\n      var gl = _ref2.gl,\n          layerManager = _ref2.layerManager;\n    }\n    /**\n     * override for a callback immediately before drawing each frame\n     */\n\n  }, {\n    key: \"preDraw\",\n    value: function preDraw(_ref3) {\n      var gl = _ref3.gl,\n          layerManager = _ref3.layerManager;\n    }\n    /**\n     * override for a callback immediately after drawing a frame's layers\n     */\n\n  }, {\n    key: \"draw\",\n    value: function draw(_ref4) {\n      var gl = _ref4.gl,\n          layerManager = _ref4.layerManager;\n    }\n  }, {\n    key: \"setNeedsRedraw\",\n    value: function setNeedsRedraw() {\n      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.needsRedraw = redraw;\n    }\n  }]);\n\n  return Effect;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Effect;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhwZXJpbWVudGFsL2xpYi9lZmZlY3QuanM/NWY3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgY291bnRlciA9IDA7XG5cbnZhciBFZmZlY3QgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEVmZmVjdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRWZmZWN0KTtcblxuICAgIHRoaXMuY291bnQgPSBjb3VudGVyKys7XG4gICAgdGhpcy52aXNpYmxlID0gdHJ1ZTtcbiAgICB0aGlzLnByaW9yaXR5ID0gMDtcbiAgICB0aGlzLm5lZWRzUmVkcmF3ID0gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogc3ViY2xhc3NlcyBzaG91bGQgb3ZlcnJpZGUgdG8gc2V0IHVwIGFueSByZXNvdXJjZXMgbmVlZGVkXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKEVmZmVjdCwgW3tcbiAgICBrZXk6IFwiaW5pdGlhbGl6ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0aWFsaXplKF9yZWYpIHtcbiAgICAgIHZhciBnbCA9IF9yZWYuZ2wsXG4gICAgICAgICAgbGF5ZXJNYW5hZ2VyID0gX3JlZi5sYXllck1hbmFnZXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGFuZCBzdWJjbGFzc2VzIHNob3VsZCBmcmVlIHRob3NlIHJlc291cmNlcyBoZXJlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJmaW5hbGl6ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmaW5hbGl6ZShfcmVmMikge1xuICAgICAgdmFyIGdsID0gX3JlZjIuZ2wsXG4gICAgICAgICAgbGF5ZXJNYW5hZ2VyID0gX3JlZjIubGF5ZXJNYW5hZ2VyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBvdmVycmlkZSBmb3IgYSBjYWxsYmFjayBpbW1lZGlhdGVseSBiZWZvcmUgZHJhd2luZyBlYWNoIGZyYW1lXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJwcmVEcmF3XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByZURyYXcoX3JlZjMpIHtcbiAgICAgIHZhciBnbCA9IF9yZWYzLmdsLFxuICAgICAgICAgIGxheWVyTWFuYWdlciA9IF9yZWYzLmxheWVyTWFuYWdlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogb3ZlcnJpZGUgZm9yIGEgY2FsbGJhY2sgaW1tZWRpYXRlbHkgYWZ0ZXIgZHJhd2luZyBhIGZyYW1lJ3MgbGF5ZXJzXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkcmF3XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRyYXcoX3JlZjQpIHtcbiAgICAgIHZhciBnbCA9IF9yZWY0LmdsLFxuICAgICAgICAgIGxheWVyTWFuYWdlciA9IF9yZWY0LmxheWVyTWFuYWdlcjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0TmVlZHNSZWRyYXdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0TmVlZHNSZWRyYXcoKSB7XG4gICAgICB2YXIgcmVkcmF3ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB0cnVlO1xuXG4gICAgICB0aGlzLm5lZWRzUmVkcmF3ID0gcmVkcmF3O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBFZmZlY3Q7XG59KCk7XG5cbmV4cG9ydCBkZWZhdWx0IEVmZmVjdDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9leHBlcmltZW50YWwvbGliL2VmZmVjdC5qc1xuLy8gbW9kdWxlIGlkID0gNDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 46 */
/* exports provided: default */
/* exports used: default */
/*!********************************************!*\
  !*** ./src/layers/core/arc-layer/index.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__arc_layer__ = __webpack_require__(/*! ./arc-layer */ 17);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__arc_layer__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2NvcmUvYXJjLWxheWVyL2luZGV4LmpzP2Q1MGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vYXJjLWxheWVyJztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9sYXllcnMvY29yZS9hcmMtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 47 */
/* exports provided: getGeojsonFeatures, separateGeojsonFeatures */
/* exports used: getGeojsonFeatures, separateGeojsonFeatures */
/*!**************************************************!*\
  !*** ./src/layers/core/geojson-layer/geojson.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getGeojsonFeatures;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = separateGeojsonFeatures;\n\n\n/**\n * \"Normalizes\" complete or partial GeoJSON data into iterable list of features\n * Can accept GeoJSON geometry or \"Feature\", \"FeatureCollection\" in addition\n * to plain arrays and iterables.\n * Works by extracting the feature array or wrapping single objects in an array,\n * so that subsequent code can simply iterate over features.\n *\n * @param {object} geojson - geojson data\n * @param {Object|Array} data - geojson object (FeatureCollection, Feature or\n *  Geometry) or array of features\n * @return {Array|\"iteratable\"} - iterable list of features\n */\nfunction getGeojsonFeatures(geojson) {\n  // If array, assume this is a list of features\n  if (Array.isArray(geojson)) {\n    return geojson;\n  }\n\n  var type = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geojson, 'type');\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'Polygon':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n      // Wrap the geometry object in a 'Feature' object and wrap in an array\n      return [{ type: 'Feature', properties: {}, geometry: geojson }];\n    case 'Feature':\n      // Wrap the feature in a 'Features' array\n      return [geojson];\n    case 'FeatureCollection':\n      // Just return the 'Features' array from the collection\n      return __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geojson, 'features');\n    default:\n      throw new Error('Unknown geojson type');\n  }\n}\n\n// Linearize\nfunction separateGeojsonFeatures(features) {\n  var pointFeatures = [];\n  var lineFeatures = [];\n  var polygonFeatures = [];\n  var polygonOutlineFeatures = [];\n\n  __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(features, function (feature) {\n    var type = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(feature, 'geometry.type');\n    var coordinates = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(feature, 'geometry.coordinates');\n    var properties = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(feature, 'properties');\n    switch (type) {\n      case 'Point':\n        pointFeatures.push(feature);\n        break;\n      case 'MultiPoint':\n        // TODO - split multipoints\n        __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(coordinates, function (point) {\n          pointFeatures.push({ geometry: { coordinates: point }, properties: properties, feature: feature });\n        });\n        break;\n      case 'LineString':\n        lineFeatures.push(feature);\n        break;\n      case 'MultiLineString':\n        // Break multilinestrings into multiple lines with same properties\n        __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(coordinates, function (path) {\n          lineFeatures.push({ geometry: { coordinates: path }, properties: properties, feature: feature });\n        });\n        break;\n      case 'Polygon':\n        polygonFeatures.push(feature);\n        // Break polygon into multiple lines with same properties\n        __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(coordinates, function (path) {\n          polygonOutlineFeatures.push({ geometry: { coordinates: path }, properties: properties, feature: feature });\n        });\n        break;\n      case 'MultiPolygon':\n        // Break multipolygons into multiple polygons with same properties\n        __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(coordinates, function (polygon) {\n          polygonFeatures.push({ geometry: { coordinates: polygon }, properties: properties, feature: feature });\n          // Break polygon into multiple lines with same properties\n          __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].forEach(polygon, function (path) {\n            polygonOutlineFeatures.push({ geometry: { coordinates: path }, properties: properties, feature: feature });\n          });\n        });\n        break;\n      // Not yet supported\n      case 'GeometryCollection':\n      default:\n        throw new Error('GeoJsonLayer: ' + type + ' not supported.');\n    }\n  });\n\n  return {\n    pointFeatures: pointFeatures,\n    lineFeatures: lineFeatures,\n    polygonFeatures: polygonFeatures,\n    polygonOutlineFeatures: polygonOutlineFeatures\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2NvcmUvZ2VvanNvbi1sYXllci9nZW9qc29uLmpzPzA0MmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSAnLi4vLi4vLi4vbGliL3V0aWxzJztcblxuLyoqXG4gKiBcIk5vcm1hbGl6ZXNcIiBjb21wbGV0ZSBvciBwYXJ0aWFsIEdlb0pTT04gZGF0YSBpbnRvIGl0ZXJhYmxlIGxpc3Qgb2YgZmVhdHVyZXNcbiAqIENhbiBhY2NlcHQgR2VvSlNPTiBnZW9tZXRyeSBvciBcIkZlYXR1cmVcIiwgXCJGZWF0dXJlQ29sbGVjdGlvblwiIGluIGFkZGl0aW9uXG4gKiB0byBwbGFpbiBhcnJheXMgYW5kIGl0ZXJhYmxlcy5cbiAqIFdvcmtzIGJ5IGV4dHJhY3RpbmcgdGhlIGZlYXR1cmUgYXJyYXkgb3Igd3JhcHBpbmcgc2luZ2xlIG9iamVjdHMgaW4gYW4gYXJyYXksXG4gKiBzbyB0aGF0IHN1YnNlcXVlbnQgY29kZSBjYW4gc2ltcGx5IGl0ZXJhdGUgb3ZlciBmZWF0dXJlcy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gZ2VvanNvbiAtIGdlb2pzb24gZGF0YVxuICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IGRhdGEgLSBnZW9qc29uIG9iamVjdCAoRmVhdHVyZUNvbGxlY3Rpb24sIEZlYXR1cmUgb3JcbiAqICBHZW9tZXRyeSkgb3IgYXJyYXkgb2YgZmVhdHVyZXNcbiAqIEByZXR1cm4ge0FycmF5fFwiaXRlcmF0YWJsZVwifSAtIGl0ZXJhYmxlIGxpc3Qgb2YgZmVhdHVyZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEdlb2pzb25GZWF0dXJlcyhnZW9qc29uKSB7XG4gIC8vIElmIGFycmF5LCBhc3N1bWUgdGhpcyBpcyBhIGxpc3Qgb2YgZmVhdHVyZXNcbiAgaWYgKEFycmF5LmlzQXJyYXkoZ2VvanNvbikpIHtcbiAgICByZXR1cm4gZ2VvanNvbjtcbiAgfVxuXG4gIHZhciB0eXBlID0gQ29udGFpbmVyLmdldChnZW9qc29uLCAndHlwZScpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdQb2ludCc6XG4gICAgY2FzZSAnTXVsdGlQb2ludCc6XG4gICAgY2FzZSAnTGluZVN0cmluZyc6XG4gICAgY2FzZSAnTXVsdGlMaW5lU3RyaW5nJzpcbiAgICBjYXNlICdQb2x5Z29uJzpcbiAgICBjYXNlICdNdWx0aVBvbHlnb24nOlxuICAgIGNhc2UgJ0dlb21ldHJ5Q29sbGVjdGlvbic6XG4gICAgICAvLyBXcmFwIHRoZSBnZW9tZXRyeSBvYmplY3QgaW4gYSAnRmVhdHVyZScgb2JqZWN0IGFuZCB3cmFwIGluIGFuIGFycmF5XG4gICAgICByZXR1cm4gW3sgdHlwZTogJ0ZlYXR1cmUnLCBwcm9wZXJ0aWVzOiB7fSwgZ2VvbWV0cnk6IGdlb2pzb24gfV07XG4gICAgY2FzZSAnRmVhdHVyZSc6XG4gICAgICAvLyBXcmFwIHRoZSBmZWF0dXJlIGluIGEgJ0ZlYXR1cmVzJyBhcnJheVxuICAgICAgcmV0dXJuIFtnZW9qc29uXTtcbiAgICBjYXNlICdGZWF0dXJlQ29sbGVjdGlvbic6XG4gICAgICAvLyBKdXN0IHJldHVybiB0aGUgJ0ZlYXR1cmVzJyBhcnJheSBmcm9tIHRoZSBjb2xsZWN0aW9uXG4gICAgICByZXR1cm4gQ29udGFpbmVyLmdldChnZW9qc29uLCAnZmVhdHVyZXMnKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGdlb2pzb24gdHlwZScpO1xuICB9XG59XG5cbi8vIExpbmVhcml6ZVxuZXhwb3J0IGZ1bmN0aW9uIHNlcGFyYXRlR2VvanNvbkZlYXR1cmVzKGZlYXR1cmVzKSB7XG4gIHZhciBwb2ludEZlYXR1cmVzID0gW107XG4gIHZhciBsaW5lRmVhdHVyZXMgPSBbXTtcbiAgdmFyIHBvbHlnb25GZWF0dXJlcyA9IFtdO1xuICB2YXIgcG9seWdvbk91dGxpbmVGZWF0dXJlcyA9IFtdO1xuXG4gIENvbnRhaW5lci5mb3JFYWNoKGZlYXR1cmVzLCBmdW5jdGlvbiAoZmVhdHVyZSkge1xuICAgIHZhciB0eXBlID0gQ29udGFpbmVyLmdldChmZWF0dXJlLCAnZ2VvbWV0cnkudHlwZScpO1xuICAgIHZhciBjb29yZGluYXRlcyA9IENvbnRhaW5lci5nZXQoZmVhdHVyZSwgJ2dlb21ldHJ5LmNvb3JkaW5hdGVzJyk7XG4gICAgdmFyIHByb3BlcnRpZXMgPSBDb250YWluZXIuZ2V0KGZlYXR1cmUsICdwcm9wZXJ0aWVzJyk7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlICdQb2ludCc6XG4gICAgICAgIHBvaW50RmVhdHVyZXMucHVzaChmZWF0dXJlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdNdWx0aVBvaW50JzpcbiAgICAgICAgLy8gVE9ETyAtIHNwbGl0IG11bHRpcG9pbnRzXG4gICAgICAgIENvbnRhaW5lci5mb3JFYWNoKGNvb3JkaW5hdGVzLCBmdW5jdGlvbiAocG9pbnQpIHtcbiAgICAgICAgICBwb2ludEZlYXR1cmVzLnB1c2goeyBnZW9tZXRyeTogeyBjb29yZGluYXRlczogcG9pbnQgfSwgcHJvcGVydGllczogcHJvcGVydGllcywgZmVhdHVyZTogZmVhdHVyZSB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnTGluZVN0cmluZyc6XG4gICAgICAgIGxpbmVGZWF0dXJlcy5wdXNoKGZlYXR1cmUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ011bHRpTGluZVN0cmluZyc6XG4gICAgICAgIC8vIEJyZWFrIG11bHRpbGluZXN0cmluZ3MgaW50byBtdWx0aXBsZSBsaW5lcyB3aXRoIHNhbWUgcHJvcGVydGllc1xuICAgICAgICBDb250YWluZXIuZm9yRWFjaChjb29yZGluYXRlcywgZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgICAgICBsaW5lRmVhdHVyZXMucHVzaCh7IGdlb21ldHJ5OiB7IGNvb3JkaW5hdGVzOiBwYXRoIH0sIHByb3BlcnRpZXM6IHByb3BlcnRpZXMsIGZlYXR1cmU6IGZlYXR1cmUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1BvbHlnb24nOlxuICAgICAgICBwb2x5Z29uRmVhdHVyZXMucHVzaChmZWF0dXJlKTtcbiAgICAgICAgLy8gQnJlYWsgcG9seWdvbiBpbnRvIG11bHRpcGxlIGxpbmVzIHdpdGggc2FtZSBwcm9wZXJ0aWVzXG4gICAgICAgIENvbnRhaW5lci5mb3JFYWNoKGNvb3JkaW5hdGVzLCBmdW5jdGlvbiAocGF0aCkge1xuICAgICAgICAgIHBvbHlnb25PdXRsaW5lRmVhdHVyZXMucHVzaCh7IGdlb21ldHJ5OiB7IGNvb3JkaW5hdGVzOiBwYXRoIH0sIHByb3BlcnRpZXM6IHByb3BlcnRpZXMsIGZlYXR1cmU6IGZlYXR1cmUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ011bHRpUG9seWdvbic6XG4gICAgICAgIC8vIEJyZWFrIG11bHRpcG9seWdvbnMgaW50byBtdWx0aXBsZSBwb2x5Z29ucyB3aXRoIHNhbWUgcHJvcGVydGllc1xuICAgICAgICBDb250YWluZXIuZm9yRWFjaChjb29yZGluYXRlcywgZnVuY3Rpb24gKHBvbHlnb24pIHtcbiAgICAgICAgICBwb2x5Z29uRmVhdHVyZXMucHVzaCh7IGdlb21ldHJ5OiB7IGNvb3JkaW5hdGVzOiBwb2x5Z29uIH0sIHByb3BlcnRpZXM6IHByb3BlcnRpZXMsIGZlYXR1cmU6IGZlYXR1cmUgfSk7XG4gICAgICAgICAgLy8gQnJlYWsgcG9seWdvbiBpbnRvIG11bHRpcGxlIGxpbmVzIHdpdGggc2FtZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgQ29udGFpbmVyLmZvckVhY2gocG9seWdvbiwgZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgICAgICAgIHBvbHlnb25PdXRsaW5lRmVhdHVyZXMucHVzaCh7IGdlb21ldHJ5OiB7IGNvb3JkaW5hdGVzOiBwYXRoIH0sIHByb3BlcnRpZXM6IHByb3BlcnRpZXMsIGZlYXR1cmU6IGZlYXR1cmUgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIE5vdCB5ZXQgc3VwcG9ydGVkXG4gICAgICBjYXNlICdHZW9tZXRyeUNvbGxlY3Rpb24nOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdHZW9Kc29uTGF5ZXI6ICcgKyB0eXBlICsgJyBub3Qgc3VwcG9ydGVkLicpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHtcbiAgICBwb2ludEZlYXR1cmVzOiBwb2ludEZlYXR1cmVzLFxuICAgIGxpbmVGZWF0dXJlczogbGluZUZlYXR1cmVzLFxuICAgIHBvbHlnb25GZWF0dXJlczogcG9seWdvbkZlYXR1cmVzLFxuICAgIHBvbHlnb25PdXRsaW5lRmVhdHVyZXM6IHBvbHlnb25PdXRsaW5lRmVhdHVyZXNcbiAgfTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9sYXllcnMvY29yZS9nZW9qc29uLWxheWVyL2dlb2pzb24uanNcbi8vIG1vZHVsZSBpZCA9IDQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 48 */
/* exports provided: default */
/* exports used: default */
/*!*********************************************!*\
  !*** ./src/layers/core/line-layer/index.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__line_layer__ = __webpack_require__(/*! ./line-layer */ 18);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__line_layer__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGF5ZXJzL2NvcmUvbGluZS1sYXllci9pbmRleC5qcz84YjNkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2xpbmUtbGF5ZXInO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xheWVycy9jb3JlL2xpbmUtbGF5ZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDQ4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 49 */
/* exports provided: PolygonTesselatorExtruded */
/* exports used: PolygonTesselatorExtruded */
/*!**********************************************************************!*\
  !*** ./src/layers/core/polygon-layer/polygon-tesselator-extruded.js ***!
  \**********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polygon__ = __webpack_require__(/*! ./polygon */ 23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_earcut__ = __webpack_require__(/*! earcut */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_earcut___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_earcut__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep__ = __webpack_require__(/*! lodash.flattendeep */ 29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_gl_matrix__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_utils_fp64__ = __webpack_require__(/*! ../../../lib/utils/fp64 */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PolygonTesselatorExtruded; });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n// import {getPolygonVertexCount, getPolygonTriangleCount} from './polygon';\n\n\n\n\n\n// import {Container, flattenVertices, fillArray} from '../../../lib/utils';\n\nvar DEFAULT_COLOR = [0, 0, 0, 255]; // Black\n\nvar PolygonTesselatorExtruded = function () {\n  function PolygonTesselatorExtruded(_ref) {\n    var polygons = _ref.polygons,\n        _ref$getHeight = _ref.getHeight,\n        getHeight = _ref$getHeight === undefined ? function (x) {\n      return 1000;\n    } : _ref$getHeight,\n        _ref$getColor = _ref.getColor,\n        getColor = _ref$getColor === undefined ? function (x) {\n      return [0, 0, 0, 255];\n    } : _ref$getColor,\n        _ref$wireframe = _ref.wireframe,\n        wireframe = _ref$wireframe === undefined ? false : _ref$wireframe,\n        _ref$fp = _ref.fp64,\n        fp64 = _ref$fp === undefined ? false : _ref$fp;\n\n    _classCallCheck(this, PolygonTesselatorExtruded);\n\n    // Expensive operation, convert all polygons to arrays\n    polygons = __WEBPACK_IMPORTED_MODULE_5__lib_utils__[\"c\" /* Container */].map(polygons, function (complexPolygon, polygonIndex) {\n      var height = getHeight(polygonIndex) || 0;\n      return __WEBPACK_IMPORTED_MODULE_5__lib_utils__[\"c\" /* Container */].map(__WEBPACK_IMPORTED_MODULE_0__polygon__[\"a\" /* normalize */](complexPolygon), function (polygon) {\n        return __WEBPACK_IMPORTED_MODULE_5__lib_utils__[\"c\" /* Container */].map(polygon, function (coord) {\n          return [coord[0], coord[1], height];\n        });\n      });\n    });\n\n    var groupedVertices = polygons;\n    this.groupedVertices = polygons;\n    this.wireframe = wireframe;\n\n    var positionsJS = calculatePositionsJS({ groupedVertices: groupedVertices, wireframe: wireframe });\n\n    this.attributes = fp64 ? {\n      positions64xy: calculatePositions64xy(positionsJS),\n      positions64z: calculatePositions64z(positionsJS)\n    } : {\n      positions: calculatePositions(positionsJS)\n    };\n\n    Object.assign(this.attributes, {\n      indices: calculateIndices({ groupedVertices: groupedVertices, wireframe: wireframe }),\n      normals: calculateNormals({ groupedVertices: groupedVertices, wireframe: wireframe }),\n      // colors: calculateColors({groupedVertices, wireframe, getColor}),\n      pickingColors: calculatePickingColors({ groupedVertices: groupedVertices, wireframe: wireframe })\n    });\n  }\n\n  _createClass(PolygonTesselatorExtruded, [{\n    key: 'indices',\n    value: function indices() {\n      return this.attributes.indices;\n    }\n  }, {\n    key: 'positions',\n    value: function positions() {\n      return this.attributes.positions;\n    }\n  }, {\n    key: 'positions64xy',\n    value: function positions64xy() {\n      return this.attributes.positions64xy;\n    }\n  }, {\n    key: 'positions64z',\n    value: function positions64z() {\n      return this.attributes.positions64z;\n    }\n  }, {\n    key: 'normals',\n    value: function normals() {\n      return this.attributes.normals;\n    }\n  }, {\n    key: 'colors',\n    value: function colors() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$getColor = _ref2.getColor,\n          getColor = _ref2$getColor === undefined ? function (x) {\n        return DEFAULT_COLOR;\n      } : _ref2$getColor;\n\n      var groupedVertices = this.groupedVertices,\n          wireframe = this.wireframe;\n\n      return calculateColors({ groupedVertices: groupedVertices, wireframe: wireframe, getColor: getColor });\n    }\n  }, {\n    key: 'pickingColors',\n    value: function pickingColors() {\n      return this.attributes.pickingColors;\n    }\n\n    // updateTriggers: {\n    //   positions: ['getHeight'],\n    //   colors: ['getColors']\n    //   pickingColors: 'none'\n    // }\n\n  }]);\n\n  return PolygonTesselatorExtruded;\n}();\n\nfunction countVertices(vertices) {\n  return vertices.reduce(function (count, polygon) {\n    return count + polygon.length;\n  }, 0);\n}\n\nfunction calculateIndices(_ref3) {\n  var groupedVertices = _ref3.groupedVertices,\n      _ref3$wireframe = _ref3.wireframe,\n      wireframe = _ref3$wireframe === undefined ? false : _ref3$wireframe;\n\n  // adjust index offset for multiple buildings\n  var multiplier = wireframe ? 2 : 5;\n  var offsets = groupedVertices.reduce(function (acc, vertices) {\n    return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + countVertices(vertices) * multiplier]);\n  }, [0]);\n\n  var indices = groupedVertices.map(function (vertices, buildingIndex) {\n    return wireframe ?\n    // 1. get sequentially ordered indices of each building wireframe\n    // 2. offset them by the number of indices in previous buildings\n    calculateContourIndices(vertices, offsets[buildingIndex]) :\n    // 1. get triangulated indices for the internal areas\n    // 2. offset them by the number of indices in previous buildings\n    calculateSurfaceIndices(vertices, offsets[buildingIndex]);\n  });\n\n  return new Uint32Array(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(indices));\n}\n\n// Calculate a flat position array in JS - can be mapped to 32 or 64 bit typed arrays\n// Remarks:\n// * each top vertex is on 3 surfaces\n// * each bottom vertex is on 2 surfaces\nfunction calculatePositionsJS(_ref4) {\n  var groupedVertices = _ref4.groupedVertices,\n      _ref4$wireframe = _ref4.wireframe,\n      wireframe = _ref4$wireframe === undefined ? false : _ref4$wireframe;\n\n  var positions = __WEBPACK_IMPORTED_MODULE_5__lib_utils__[\"c\" /* Container */].map(groupedVertices, function (complexPolygon) {\n    return __WEBPACK_IMPORTED_MODULE_5__lib_utils__[\"c\" /* Container */].map(complexPolygon, function (vertices) {\n      var topVertices = [].concat(vertices);\n      var baseVertices = topVertices.map(function (v) {\n        return [v[0], v[1], 0];\n      });\n      return wireframe ? [topVertices, baseVertices] : [topVertices, topVertices, topVertices, baseVertices, baseVertices];\n    });\n  });\n  return __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(positions);\n}\n\nfunction calculatePositions(positionsJS) {\n  return new Float32Array(positionsJS);\n}\n\nfunction calculatePositions64xy(positionsJS) {\n  var attribute = new Float32Array(positionsJS.length / 3 * 4);\n  for (var i = 0; i < positionsJS.length / 3; i++) {\n    var _fp64ify = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils_fp64__[\"a\" /* fp64ify */])(positionsJS[i * 3 + 0]);\n\n    var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n    attribute[i * 4 + 0] = _fp64ify2[0];\n    attribute[i * 4 + 1] = _fp64ify2[1];\n\n    var _fp64ify3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils_fp64__[\"a\" /* fp64ify */])(positionsJS[i * 3 + 1]);\n\n    var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n    attribute[i * 4 + 2] = _fp64ify4[0];\n    attribute[i * 4 + 3] = _fp64ify4[1];\n  }\n  return attribute;\n}\n\nfunction calculatePositions64z(positionsJS) {\n  var attribute = new Float32Array(positionsJS.length / 3 * 2);\n  for (var i = 0; i < positionsJS.length / 3; i++) {\n    var _fp64ify5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils_fp64__[\"a\" /* fp64ify */])(positionsJS[i * 3 + 2] + 0.1);\n\n    var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n    attribute[i * 2 + 0] = _fp64ify6[0];\n    attribute.value[i * 2 + 1] = _fp64ify6[1];\n  }\n  return attribute;\n}\n\nfunction calculateNormals(_ref5) {\n  var groupedVertices = _ref5.groupedVertices,\n      wireframe = _ref5.wireframe;\n\n  var up = [0, 1, 0];\n\n  var normals = groupedVertices.map(function (vertices, buildingIndex) {\n    var topNormals = new Array(countVertices(vertices)).fill(up);\n    var sideNormals = vertices.map(function (polygon) {\n      return calculateSideNormals(polygon);\n    });\n    var sideNormalsForward = sideNormals.map(function (n) {\n      return n[0];\n    });\n    var sideNormalsBackward = sideNormals.map(function (n) {\n      return n[1];\n    });\n\n    return wireframe ? [topNormals, topNormals] : [topNormals, sideNormalsForward, sideNormalsBackward, sideNormalsForward, sideNormalsBackward];\n  });\n\n  return new Float32Array(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(normals));\n}\n\nfunction calculateSideNormals(vertices) {\n  var numVertices = vertices.length;\n  var normals = [];\n\n  for (var i = 0; i < numVertices - 1; i++) {\n    var n = getNormal(vertices[i], vertices[i + 1]);\n    normals.push(n);\n  }\n\n  return [[].concat(normals, [normals[0]]), [normals[0]].concat(normals)];\n}\n\n/*\nfunction calculateColors({polygons, pointCount, getColor}) {\n  const attribute = new Uint8Array(pointCount * 4);\n  let i = 0;\n  polygons.forEach((complexPolygon, polygonIndex) => {\n    // Calculate polygon color\n    const color = getColor(polygonIndex);\n    color[3] = Number.isFinite(color[3]) ? color[3] : 255;\n\n    const count = Polygon.getVertexCount(complexPolygon);\n    fillArray({target: attribute, source: color, start: i, count});\n    i += color.length * count;\n  });\n  return attribute;\n}\n*/\n\nfunction calculateColors(_ref6) {\n  var groupedVertices = _ref6.groupedVertices,\n      getColor = _ref6.getColor,\n      _ref6$wireframe = _ref6.wireframe,\n      wireframe = _ref6$wireframe === undefined ? false : _ref6$wireframe;\n\n  var colors = groupedVertices.map(function (complexPolygon, polygonIndex) {\n    var color = getColor(polygonIndex);\n    color[3] = Number.isFinite(color[3]) ? color[3] : 255;\n\n    // const baseColor = Array.isArray(color) ? color[0] : color;\n    // const topColor = Array.isArray(color) ? color[color.length - 1] : color;\n    var numVertices = countVertices(complexPolygon);\n    var topColors = new Array(numVertices).fill(color);\n    var baseColors = new Array(numVertices).fill(color);\n    return wireframe ? [topColors, baseColors] : [topColors, topColors, topColors, baseColors, baseColors];\n  });\n  return new Uint8ClampedArray(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(colors));\n}\n\nfunction calculatePickingColors(_ref7) {\n  var groupedVertices = _ref7.groupedVertices,\n      _ref7$color = _ref7.color,\n      color = _ref7$color === undefined ? [0, 0, 0] : _ref7$color,\n      _ref7$wireframe = _ref7.wireframe,\n      wireframe = _ref7$wireframe === undefined ? false : _ref7$wireframe;\n\n  var colors = groupedVertices.map(function (vertices, buildingIndex) {\n    // const baseColor = Array.isArray(color) ? color[0] : color;\n    // const topColor = Array.isArray(color) ? color[color.length - 1] : color;\n    var numVertices = countVertices(vertices);\n    var topColors = new Array(numVertices).fill([0, 0, 0]);\n    var baseColors = new Array(numVertices).fill([0, 0, 0]);\n    return wireframe ? [topColors, baseColors] : [topColors, topColors, topColors, baseColors, baseColors];\n  });\n  return new Uint8ClampedArray(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(colors));\n}\n\nfunction calculateContourIndices(vertices, offset) {\n  var stride = countVertices(vertices);\n\n  return vertices.map(function (polygon) {\n    var indices = [offset];\n    var numVertices = polygon.length;\n\n    // building top\n    // use vertex pairs for GL.LINES => [0, 1, 1, 2, 2, ..., n-1, n-1, 0]\n    for (var i = 1; i < numVertices - 1; i++) {\n      indices.push(i + offset, i + offset);\n    }\n    indices.push(offset);\n\n    // building sides\n    for (var _i = 0; _i < numVertices - 1; _i++) {\n      indices.push(_i + offset, _i + stride + offset);\n    }\n\n    offset += numVertices;\n    return indices;\n  });\n}\n\nfunction calculateSurfaceIndices(vertices, offset) {\n  var stride = countVertices(vertices);\n  var quad = [[0, 1], [0, 3], [1, 2], [1, 2], [0, 3], [1, 4]];\n\n  function drawRectangle(i) {\n    return quad.map(function (v) {\n      return i + v[0] + stride * v[1] + offset;\n    });\n  }\n\n  var holes = null;\n\n  if (vertices.length > 1) {\n    holes = vertices.reduce(function (acc, polygon) {\n      return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + polygon.length]);\n    }, [0]).slice(1, vertices.length);\n  }\n\n  var topIndices = __WEBPACK_IMPORTED_MODULE_1_earcut___default()(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(vertices), holes, 3).map(function (index) {\n    return index + offset;\n  });\n\n  var sideIndices = vertices.map(function (polygon) {\n    var numVertices = polygon.length;\n    // building top\n    var indices = [];\n\n    // building sides\n    for (var i = 0; i < numVertices - 1; i++) {\n      indices.push.apply(indices, _toConsumableArray(drawRectangle(i)));\n    }\n\n    offset += numVertices;\n    return indices;\n  });\n\n  return [topIndices, sideIndices];\n}\n\n// helpers\n\n// get normal vector of line segment\nfunction getNormal(p1, p2) {\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    return [1, 0, 0];\n  }\n\n  var degrees2radians = Math.PI / 180;\n  var lon1 = degrees2radians * p1[0];\n  var lon2 = degrees2radians * p2[0];\n  var lat1 = degrees2radians * p1[1];\n  var lat2 = degrees2radians * p2[1];\n  var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n  var b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n  return __WEBPACK_IMPORTED_MODULE_3_gl_matrix__[\"vec3\"].normalize([], [b, 0, -a]);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 50 */
/* exports provided: PolygonTesselator, flattenVertices2 */
/* exports used: PolygonTesselator */
/*!*************************************************************!*\
  !*** ./src/layers/core/polygon-layer/polygon-tesselator.js ***!
  \*************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polygon__ = __webpack_require__(/*! ./polygon */ 23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_earcut__ = __webpack_require__(/*! earcut */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_earcut___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_earcut__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PolygonTesselator; });\n/* unused harmony export flattenVertices2 */\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Handles tesselation of polygons with holes\n// - 2D surfaces\n// - 2D outlines\n// - 3D surfaces (top and sides only)\n// - 3D wireframes (not yet)\n\n\n\n\n// Maybe deck.gl or luma.gl needs to export this\nfunction getPickingColor(index) {\n  return [(index + 1) % 256, Math.floor((index + 1) / 256) % 256, Math.floor((index + 1) / 256 / 256) % 256];\n}\n\nvar DEFAULT_COLOR = [0, 0, 0, 255]; // Black\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nvar PolygonTesselator = function () {\n  function PolygonTesselator(_ref) {\n    var polygons = _ref.polygons;\n\n    _classCallCheck(this, PolygonTesselator);\n\n    // Normalize all polygons\n    this.polygons = __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].map(polygons, function (polygon) {\n      return __WEBPACK_IMPORTED_MODULE_0__polygon__[\"a\" /* normalize */](polygon);\n    });\n    // Count all polygon vertices\n    this.pointCount = getPointCount(this.polygons);\n  }\n\n  _createClass(PolygonTesselator, [{\n    key: 'indices',\n    value: function indices() {\n      var polygons = this.polygons,\n          indexCount = this.indexCount;\n\n      return calculateIndices({ polygons: polygons, indexCount: indexCount });\n    }\n  }, {\n    key: 'positions',\n    value: function positions() {\n      var polygons = this.polygons,\n          pointCount = this.pointCount;\n\n      return calculatePositions({ polygons: polygons, pointCount: pointCount });\n    }\n  }, {\n    key: 'normals',\n    value: function normals() {\n      var polygons = this.polygons,\n          pointCount = this.pointCount;\n\n      return calculateNormals({ polygons: polygons, pointCount: pointCount });\n    }\n  }, {\n    key: 'colors',\n    value: function colors() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$getColor = _ref2.getColor,\n          getColor = _ref2$getColor === undefined ? function (x) {\n        return DEFAULT_COLOR;\n      } : _ref2$getColor;\n\n      var polygons = this.polygons,\n          pointCount = this.pointCount;\n\n      return calculateColors({ polygons: polygons, pointCount: pointCount, getColor: getColor });\n    }\n  }, {\n    key: 'pickingColors',\n    value: function pickingColors() {\n      var polygons = this.polygons,\n          pointCount = this.pointCount;\n\n      return calculatePickingColors({ polygons: polygons, pointCount: pointCount });\n    }\n\n    // getAttribute({size, accessor}) {\n    //   const {polygons, pointCount} = this;\n    //   return calculateAttribute({polygons, pointCount, size, accessor});\n    // }\n\n  }]);\n\n  return PolygonTesselator;\n}();\n\n// Count number of points in a list of complex polygons\nfunction getPointCount(polygons) {\n  return polygons.reduce(function (sum, polygon) {\n    return sum + __WEBPACK_IMPORTED_MODULE_0__polygon__[\"b\" /* getVertexCount */](polygon);\n  }, 0);\n}\n\n// COunt number of triangles in a list of complex polygons\nfunction getTriangleCount(polygons) {\n  return polygons.reduce(function (count, polygon) {\n    return count + __WEBPACK_IMPORTED_MODULE_0__polygon__[\"c\" /* getTriangleCount */](polygon);\n  }, 0);\n}\n\n// Returns the offsets of each complex polygon in the combined array of all polygons\nfunction getPolygonOffsets(polygons) {\n  var offsets = new Array(polygons.length + 1);\n  offsets[0] = 0;\n  var offset = 0;\n  polygons.forEach(function (polygon, i) {\n    offset += __WEBPACK_IMPORTED_MODULE_0__polygon__[\"b\" /* getVertexCount */](polygon);\n    offsets[i + 1] = offset;\n  });\n  return offsets;\n}\n\n// Returns the offset of each hole polygon in the flattened array for that polygon\nfunction getHoleIndices(complexPolygon) {\n  var holeIndices = null;\n  if (complexPolygon.length > 1) {\n    (function () {\n      var polygonStartIndex = 0;\n      holeIndices = [];\n      __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].forEach(complexPolygon, function (polygon) {\n        polygonStartIndex += polygon.length;\n        holeIndices.push(polygonStartIndex);\n      });\n      // Last element points to end of the flat array, remove it\n      holeIndices.pop();\n    })();\n  }\n  return holeIndices;\n}\n\nfunction calculateIndices(_ref3) {\n  var polygons = _ref3.polygons,\n      _ref3$IndexType = _ref3.IndexType,\n      IndexType = _ref3$IndexType === undefined ? Uint32Array : _ref3$IndexType;\n\n  // Calculate length of index array (3 * number of triangles)\n  var indexCount = 3 * getTriangleCount(polygons);\n  var offsets = getPolygonOffsets(polygons);\n\n  // Allocate the attribute\n  // TODO it's not the index count but the vertex count that must be checked\n  if (IndexType === Uint16Array && indexCount > 65535) {\n    throw new Error('Vertex count exceeds browser\\'s limit');\n  }\n  var attribute = new IndexType(indexCount);\n\n  // 1. get triangulated indices for the internal areas\n  // 2. offset them by the number of indices in previous polygons\n  var i = 0;\n  polygons.forEach(function (polygon, polygonIndex) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = calculateSurfaceIndices(polygon)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var index = _step.value;\n\n        attribute[i++] = index + offsets[polygonIndex];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n\n  return attribute;\n}\n\n/*\n * Get vertex indices for drawing complexPolygon mesh\n * @private\n * @param {[Number,Number,Number][][]} complexPolygon\n * @returns {[Number]} indices\n */\nfunction calculateSurfaceIndices(complexPolygon) {\n  // Prepare an array of hole indices as expected by earcut\n  var holeIndices = getHoleIndices(complexPolygon);\n  // Flatten the polygon as expected by earcut\n  var verts = flattenVertices2(complexPolygon);\n  // Let earcut triangulate the polygon\n  return __WEBPACK_IMPORTED_MODULE_1_earcut___default()(verts, holeIndices, 3);\n}\n\n// Flattens nested array of vertices, padding third coordinate as needed\nfunction flattenVertices2(nestedArray) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref4$result = _ref4.result,\n      result = _ref4$result === undefined ? [] : _ref4$result,\n      _ref4$dimensions = _ref4.dimensions,\n      dimensions = _ref4$dimensions === undefined ? 3 : _ref4$dimensions;\n\n  var index = -1;\n  var vertexLength = 0;\n  var length = __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].count(nestedArray);\n  while (++index < length) {\n    var value = __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].get(nestedArray, index);\n    if (__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].isContainer(value)) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"e\" /* flattenVertices */])(value, { result: result, dimensions: dimensions });\n    } else {\n      if (vertexLength < dimensions) {\n        // eslint-disable-line\n        result.push(value);\n        vertexLength++;\n      }\n    }\n  }\n  // Add a third coordinate if needed\n  if (vertexLength > 0 && vertexLength < dimensions) {\n    result.push(0);\n  }\n  return result;\n}\n\nfunction calculatePositions(_ref5) {\n  var polygons = _ref5.polygons,\n      pointCount = _ref5.pointCount;\n\n  // Flatten out all the vertices of all the sub subPolygons\n  var attribute = new Float32Array(pointCount * 3);\n  var i = 0;\n  __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].forEach(polygons, function (polygon) {\n    return __WEBPACK_IMPORTED_MODULE_0__polygon__[\"d\" /* forEachVertex */](polygon, function (vertex) {\n      attribute[i++] = vertex[0];\n      attribute[i++] = vertex[1];\n      attribute[i++] = vertex[2] || 0;\n    });\n  });\n  // for (const complexPolygon of polygons) {\n  //   for (const simplePolygon of complexPolygon) {\n  //     for (const vertex of simplePolygon) {\n  //       attribute[i++] = vertex[0];\n  //       attribute[i++] = vertex[1];\n  //       attribute[i++] = vertex[2] || 0;\n  //     }\n  //   }\n  // }\n  return attribute;\n}\n\nfunction calculateNormals(_ref6) {\n  var polygons = _ref6.polygons,\n      pointCount = _ref6.pointCount;\n\n  // TODO - use generic vertex attribute?\n  var attribute = new Float32Array(pointCount * 3);\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"f\" /* fillArray */])({ target: attribute, source: [0, 1, 0], start: 0, pointCount: pointCount });\n  return attribute;\n}\n\nfunction calculateColors(_ref7) {\n  var polygons = _ref7.polygons,\n      pointCount = _ref7.pointCount,\n      getColor = _ref7.getColor;\n\n  var attribute = new Uint8Array(pointCount * 4);\n  var i = 0;\n  polygons.forEach(function (complexPolygon, polygonIndex) {\n    // Calculate polygon color\n    var color = getColor(polygonIndex);\n    color[3] = Number.isFinite(color[3]) ? color[3] : 255;\n\n    var count = __WEBPACK_IMPORTED_MODULE_0__polygon__[\"b\" /* getVertexCount */](complexPolygon);\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"f\" /* fillArray */])({ target: attribute, source: color, start: i, count: count });\n    i += color.length * count;\n  });\n  return attribute;\n}\n\nfunction calculatePickingColors(_ref8) {\n  var polygons = _ref8.polygons,\n      pointCount = _ref8.pointCount;\n\n  var attribute = new Uint8Array(pointCount * 3);\n  var i = 0;\n  polygons.forEach(function (complexPolygon, polygonIndex) {\n    var color = getPickingColor(polygonIndex);\n    var count = __WEBPACK_IMPORTED_MODULE_0__polygon__[\"b\" /* getVertexCount */](complexPolygon);\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"f\" /* fillArray */])({ target: attribute, source: color, start: i, count: count });\n    i += color.length * count;\n  });\n  return attribute;\n}\n\n// TODO - extremely slow for some reason - to big for JS compiler?\n// return calculateAttribute({\n//   polygons,\n//   attribute,\n//   size: 4,\n//   accessor: getColor,\n//   defaultValue: [0, 0, 0, 255]\n// });\n\n/* eslint-disable complexity\nfunction calculateAttribute4({\n  polygons, attribute, size, accessor, defaultValue = [0, 0, 0, 0]\n}) {\n  let i = 0;\n  polygons.forEach((complexPolygon, polygonIndex) => {\n    const value = accessor(polygonIndex) || defaultValue;\n    value[3] = (Number.isFinite(value[3]) ? value[3] : defaultValue[3]);\n\n    // Copy polygon's value into the flattened vertices of the simple polygons\n    // TODO - use version of flatten that can take an offset and a target array?\n    for (const simplePolygon of complexPolygon) {\n      for (const vertex of simplePolygon) { // eslint-disable-line\n        attribute[i++] = value[0];\n        attribute[i++] = value[1];\n        attribute[i++] = value[2];\n        attribute[i++] = value[3];\n      }\n    }\n  });\n  return attribute;\n}\n*///# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 51 */
/* exports provided: default */
/* exports used: default */
/*!**************************************************************************!*\
  !*** ./src/layers/deprecated/choropleth-layer-64/choropleth-layer-64.js ***!
  \**************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__choropleth_layer__ = __webpack_require__(/*! ../choropleth-layer */ 22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__ = __webpack_require__(/*! ../../../lib/utils/fp64 */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep__ = __webpack_require__(/*! lodash.flattendeep */ 29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\nvar ChoroplethLayer64 = function (_ChoroplethLayer) {\n  _inherits(ChoroplethLayer64, _ChoroplethLayer);\n\n  function ChoroplethLayer64() {\n    _classCallCheck(this, ChoroplethLayer64);\n\n    return _possibleConstructorReturn(this, (ChoroplethLayer64.__proto__ || Object.getPrototypeOf(ChoroplethLayer64)).apply(this, arguments));\n  }\n\n  _createClass(ChoroplethLayer64, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      _get(ChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer64.prototype), 'initializeState', this).call(this);\n\n      this.state.attributeManager.addDynamic({\n        positions64: { size: 4, update: this.calculatePositions64 },\n        heights64: { size: 2, update: this.calculateHeights64 }\n      });\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME choropleth-layer-64-vertex-shader\\n\\nattribute vec4 positions64;\\nattribute vec2 heights64;\\nattribute vec4 colors;\\nattribute vec3 pickingColors;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\nuniform vec3 selectedPickingColor;\\n\\nuniform float pickingEnabled;\\nvarying vec4 vPickingColor;\\nvoid picking_setPickColor(vec3 pickingColor) {\\n  vPickingColor = vec4(pickingColor,  1.);\\n}\\nvec4 picking_setNormalAndPickColors(vec4 color, vec3 pickingColor) {\\n  vec4 pickingColor4 = vec4(pickingColor.rgb, 1.);\\n  vPickingColor = mix(color, pickingColor4, pickingEnabled);\\n  return vPickingColor;\\n}\\n\\nvoid main(void) {\\n  // For some reason, need to add one to elevation to show up in untilted mode\\n  vec2 projectedCoord[2];\\n  project_position_fp64(positions64, projectedCoord);\\n\\n  vec2 vertex_pos_modelspace[4];\\n\\n  vertex_pos_modelspace[0] = projectedCoord[0];\\n  vertex_pos_modelspace[1] = projectedCoord[1];\\n  vertex_pos_modelspace[2] = heights64;\\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\\n\\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\\n\\n  vec4 color = vec4(colors.rgb, colors.a * opacity) / 255.;\\n\\n  picking_setNormalAndPickColors(\\n    color,\\n    pickingColors / 255.\\n  );\\n}\\n',\n        fs: _get(ChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer64.prototype), 'getShaders', this).call(this).fs,\n        fp64: true,\n        project64: true\n      };\n    }\n  }, {\n    key: 'calculatePositions64',\n    value: function calculatePositions64(attribute) {\n      var vertices = __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(this.state.choropleths);\n      attribute.value = new Float32Array(vertices.length / 3 * 4);\n      for (var index = 0; index < vertices.length / 3; index++) {\n        var _fp64ify = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(vertices[index * 3]);\n\n        var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n        attribute.value[index * 4] = _fp64ify2[0];\n        attribute.value[index * 4 + 1] = _fp64ify2[1];\n\n        var _fp64ify3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(vertices[index * 3 + 1]);\n\n        var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n        attribute.value[index * 4 + 2] = _fp64ify4[0];\n        attribute.value[index * 4 + 3] = _fp64ify4[1];\n      }\n    }\n  }, {\n    key: 'calculateHeights64',\n    value: function calculateHeights64(attribute) {\n      var vertices = __WEBPACK_IMPORTED_MODULE_2_lodash_flattendeep___default()(this.state.choropleths);\n      attribute.value = new Float32Array(vertices.length / 3 * 2);\n      for (var index = 0; index < vertices.length / 3; index++) {\n        var _fp64ify5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(vertices[index * 3 + 2]);\n\n        var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n        attribute.value[index * 2] = _fp64ify6[0];\n        attribute.value[index * 2 + 1] = _fp64ify6[1];\n      }\n    }\n  }]);\n\n  return ChoroplethLayer64;\n}(__WEBPACK_IMPORTED_MODULE_0__choropleth_layer__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ChoroplethLayer64;\n\n\nChoroplethLayer64.layerName = 'ChoroplethLayer64';//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 52 */
/* exports provided: default */
/* exports used: default */
/*!********************************************************************!*\
  !*** ./src/layers/deprecated/choropleth-layer/choropleth-layer.js ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__geojson__ = __webpack_require__(/*! ./geojson */ 53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_earcut__ = __webpack_require__(/*! earcut */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_earcut___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_earcut__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_path__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [0, 0, 255, 255];\n\nvar defaultProps = {\n  getColor: function getColor(feature) {\n    return __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].get(feature, 'properties.color');\n  },\n  drawContour: false,\n  strokeWidth: 1\n};\n\nvar ChoroplethLayer = function (_Layer) {\n  _inherits(ChoroplethLayer, _Layer);\n\n  function ChoroplethLayer() {\n    _classCallCheck(this, ChoroplethLayer);\n\n    return _possibleConstructorReturn(this, (ChoroplethLayer.__proto__ || Object.getPrototypeOf(ChoroplethLayer)).apply(this, arguments));\n  }\n\n  _createClass(ChoroplethLayer, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME choropleth-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec4 colors;\\nattribute vec3 pickingColors;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\nuniform vec3 selectedPickingColor;\\n\\n// PICKING\\nuniform float pickingEnabled;\\nvarying vec4 vPickingColor;\\nvoid picking_setPickColor(vec3 pickingColor) {\\n  vPickingColor = vec4(pickingColor,  1.);\\n}\\nvec4 picking_setNormalAndPickColors(vec4 color, vec3 pickingColor) {\\n  vec4 pickingColor4 = vec4(pickingColor.rgb, 1.);\\n  vPickingColor = mix(color, pickingColor4, pickingEnabled);\\n  return vPickingColor;\\n}\\n\\n// PICKING\\n// vec4 getColor(vec4 color, float opacity, vec3 pickingColor, float renderPickingBuffer) {\\n//   vec4 color4 = vec4(color.xyz / 255., color.w / 255. * opacity);\\n//   vec4 pickingColor4 = vec4(pickingColor / 255., 1.);\\n//   return mix(color4, pickingColor4, renderPickingBuffer);\\n// }\\n\\nvoid main(void) {\\n\\n  vec4 color = vec4(colors.rgb, colors.a * opacity) / 255.;\\n\\n  picking_setNormalAndPickColors(\\n    color,\\n    pickingColors / 255.\\n  );\\n\\n  vec3 p = project_position(positions);\\n  gl_Position = project_to_clipspace(vec4(p, 1.));\\n}\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME choropleth-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\n// PICKING\\n// uniform bool pickingEnabled;\\nvarying vec4 vPickingColor;\\nvec4 picking_getColor() {\\n  return vPickingColor;\\n}\\n// PICKING\\n\\nvoid main(void) {\\n  gl_FragColor = picking_getColor();\\n}\\n'\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      var gl = this.context.gl;\n      var attributeManager = this.state.attributeManager;\n\n      attributeManager.addDynamic({\n        // Primtive attributes\n        indices: { size: 1, update: this.calculateIndices, isIndexed: true },\n        positions: { size: 3, update: this.calculatePositions },\n        colors: { size: 4, type: __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"GL\"].UNSIGNED_BYTE, update: this.calculateColors },\n        // Instanced attributes\n        pickingColors: {\n          size: 3,\n          type: __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"GL\"].UNSIGNED_BYTE,\n          update: this.calculatePickingColors,\n          noAlloc: true\n        }\n      });\n\n      var IndexType = gl.getExtension('OES_element_index_uint') ? Uint32Array : Uint16Array;\n\n      this.setState({\n        model: this.getModel(gl),\n        numInstances: 0,\n        IndexType: IndexType\n      });\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var attributeManager = this.state.attributeManager;\n\n      if (changeFlags.dataChanged) {\n        this.state.choropleths = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__geojson__[\"a\" /* extractPolygons */])(props.data);\n        attributeManager.invalidateAll();\n      }\n\n      if (oldProps.opacity !== props.opacity) {\n        this.setUniforms({ opacity: props.opacity });\n      }\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var gl = this.context.gl;\n\n      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);\n      gl.lineWidth(lineWidth);\n      this.state.model.render(uniforms);\n      // Setting line width back to 1 is here to workaround a Google Chrome bug\n      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with\n      // correct parameter\n      // This is not happening on Safari and Firefox\n      gl.lineWidth(1.0);\n    }\n  }, {\n    key: 'pick',\n    value: function pick(opts) {\n      _get(ChoroplethLayer.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer.prototype), 'pick', this).call(this, opts);\n      var info = opts.info;\n\n      var index = this.decodePickingColor(info.color);\n      var feature = index >= 0 ? __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].get(this.props.data, ['features', index]) : null;\n      info.feature = feature;\n      info.object = feature;\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"Geometry\"]({\n          drawMode: this.props.drawContour ? __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"GL\"].LINES : __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"GL\"].TRIANGLES\n        }),\n        vertexCount: 0,\n        isIndexed: true\n      });\n    }\n  }, {\n    key: 'calculateIndices',\n    value: function calculateIndices(attribute) {\n      var _this2 = this;\n\n      // adjust index offset for multiple choropleths\n      var offsets = this.state.choropleths.reduce(function (acc, choropleth) {\n        return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + choropleth.reduce(function (count, polygon) {\n          return count + polygon.length;\n        }, 0)]);\n      }, [0]);\n      var IndexType = this.state.IndexType;\n\n      if (IndexType === Uint16Array && offsets[offsets.length - 1] > 65535) {\n        throw new Error('Vertex count exceeds browser\\'s limit');\n      }\n\n      var indices = this.state.choropleths.map(function (choropleth, choroplethIndex) {\n        return _this2.props.drawContour ?\n        // 1. get sequentially ordered indices of each choropleth contour\n        // 2. offset them by the number of indices in previous choropleths\n        calculateContourIndices(choropleth).map(function (index) {\n          return index + offsets[choroplethIndex];\n        }) :\n        // 1. get triangulated indices for the internal areas\n        // 2. offset them by the number of indices in previous choropleths\n        calculateSurfaceIndices(choropleth).map(function (index) {\n          return index + offsets[choroplethIndex];\n        });\n      });\n\n      attribute.value = new IndexType(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"b\" /* flatten */])(indices));\n      attribute.target = __WEBPACK_IMPORTED_MODULE_4_luma_gl__[\"GL\"].ELEMENT_ARRAY_BUFFER;\n      this.state.model.setVertexCount(attribute.value.length / attribute.size);\n    }\n  }, {\n    key: 'calculatePositions',\n    value: function calculatePositions(attribute) {\n      var vertices = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"b\" /* flatten */])(this.state.choropleths);\n      attribute.value = new Float32Array(vertices);\n    }\n  }, {\n    key: 'calculateColors',\n    value: function calculateColors(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getColor = _props.getColor;\n\n      var features = __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].get(data, 'features');\n      var colors = this.state.choropleths.map(function (choropleth, choroplethIndex) {\n        var feature = __WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"c\" /* Container */].get(features, choropleth.featureIndex);\n        var color = getColor(feature) || DEFAULT_COLOR;\n        // Ensure alpha is set\n        if (isNaN(color[3])) {\n          color[3] = DEFAULT_COLOR[3];\n        }\n        return choropleth.map(function (polygon) {\n          return polygon.map(function (vertex) {\n            return color;\n          });\n        });\n      });\n\n      attribute.value = new Uint8Array(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"b\" /* flatten */])(colors));\n    }\n\n    // Override the default picking colors calculation\n\n  }, {\n    key: 'calculatePickingColors',\n    value: function calculatePickingColors(attribute) {\n      var _this3 = this;\n\n      var colors = this.state.choropleths.map(function (choropleth, choroplethIndex) {\n        var featureIndex = choropleth.featureIndex;\n\n        var color = _this3.props.drawContour ? [0, 0, 0] : [(featureIndex + 1) % 256, Math.floor((featureIndex + 1) / 256) % 256, Math.floor((featureIndex + 1) / 256 / 256) % 256];\n        return choropleth.map(function (polygon) {\n          return polygon.map(function (vertex) {\n            return color;\n          });\n        });\n      });\n\n      attribute.value = new Uint8Array(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"b\" /* flatten */])(colors));\n    }\n  }]);\n\n  return ChoroplethLayer;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ChoroplethLayer;\n\n\nChoroplethLayer.layerName = 'ChoroplethLayer';\nChoroplethLayer.defaultProps = defaultProps;\n\n/*\n * get vertex indices for drawing choropleth contour\n * @param {[Number,Number,Number][][]} choropleth\n * @returns {[Number]} indices\n */\nfunction calculateContourIndices(choropleth) {\n  var offset = 0;\n\n  return choropleth.reduce(function (acc, polygon) {\n    var numVertices = polygon.length;\n\n    // use vertex pairs for gl.LINES => [0, 1, 1, 2, 2, ..., n-2, n-2, n-1]\n    var indices = [].concat(_toConsumableArray(acc), [offset]);\n    for (var i = 1; i < numVertices - 1; i++) {\n      indices.push(i + offset, i + offset);\n    }\n    indices.push(offset + numVertices - 1);\n\n    offset += numVertices;\n    return indices;\n  }, []);\n}\n\n/*\n * get vertex indices for drawing choropleth mesh\n * @param {[Number,Number,Number][][]} choropleth\n * @returns {[Number]} indices\n */\nfunction calculateSurfaceIndices(choropleth) {\n  var holes = null;\n\n  if (choropleth.length > 1) {\n    holes = choropleth.reduce(function (acc, polygon) {\n      return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + polygon.length]);\n    }, [0]).slice(1, choropleth.length);\n  }\n\n  return __WEBPACK_IMPORTED_MODULE_5_earcut___default()(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils__[\"b\" /* flatten */])(choropleth), holes, 3);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 53 */
/* exports provided: getGeojsonFeatures, featureToPolygons, extractPolygons, normalizeGeojson */
/* exports used: extractPolygons */
/*!***********************************************************!*\
  !*** ./src/layers/deprecated/choropleth-layer/geojson.js ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* unused harmony export getGeojsonFeatures */\n/* unused harmony export featureToPolygons */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = extractPolygons;\n/* unused harmony export normalizeGeojson */\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n/**\n * \"Normalizes\" complete or partial GeoJSON data into iterable list of features\n * Can accept GeoJSON geometry or \"Feature\", \"FeatureCollection\" in addition\n * to plain arrays and iterables.\n * Works by extracting the feature array or wrapping single objects in an array,\n * so that subsequent code can simply iterate over features.\n *\n * @param {object} geojson - geojson data\n * @param {Object|Array} data - geojson object (FeatureCollection, Feature or\n *  Geometry) or array of features\n * @return {Array|\"iteratable\"} - iterable list of features\n */\nfunction getGeojsonFeatures(geojson) {\n  // If array, assume this is a list of features\n  if (Array.isArray(geojson)) {\n    return geojson;\n  }\n\n  var type = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geojson, 'type');\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'Polygon':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n      // Wrap the geometry object in a 'Feature' object and wrap in an array\n      return [{ type: 'Feature', properties: {}, geometry: geojson }];\n    case 'Feature':\n      // Wrap the feature in a 'Features' array\n      return [geojson];\n    case 'FeatureCollection':\n      // Just return the 'Features' array from the collection\n      return __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geojson, 'features');\n    default:\n      throw new Error('Unknown geojson type');\n  }\n}\n\n/*\n * converts a GeoJSON \"Feature\" object to a list of GeoJSON polygon-style coordinates\n * @param {Object | Array} data - geojson object or array of feature\n * @returns {[Number,Number,Number][][][]} array of choropleths\n */\nfunction featureToPolygons(feature) {\n  var geometry = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(feature, 'geometry');\n  // If no geometry field, assume that \"feature\" is the polygon list\n  if (geometry === undefined) {\n    return feature;\n  }\n\n  var type = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geometry, 'type');\n  var coordinates = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geometry, 'coordinates');\n\n  var polygons = void 0;\n  switch (type) {\n    case 'MultiPolygon':\n      polygons = coordinates;\n      break;\n    case 'Polygon':\n      polygons = [coordinates];\n      break;\n    case 'LineString':\n      // TODO - should lines really be handled in this switch?\n      polygons = [[coordinates]];\n      break;\n    case 'MultiLineString':\n      // TODO - should lines really be handled in this switch?\n      polygons = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].map(coordinates, function (coords) {\n        return [coords];\n      });\n      break;\n    default:\n      polygons = [];\n  }\n  return polygons;\n}\n\n// DEPRECATED - USED BY OLD CHOROPLETH LAYERS\n\n/*\n * converts list of features from a GeoJSON object to a list of GeoJSON\n * polygon-style coordinates\n * @param {Object} data - geojson object\n * @returns {[Number,Number,Number][][][]} array of choropleths\n */\nfunction extractPolygons(data) {\n  var normalizedGeojson = normalizeGeojson(data);\n  var features = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(normalizedGeojson, 'features');\n\n  var result = [];\n  features.forEach(function (feature, featureIndex) {\n    var choropleths = featureToPolygons(feature);\n\n    /* eslint-disable max-nested-callbacks */\n    choropleths = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].map(choropleths, function (choropleth) {\n      return __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].map(choropleth, function (polygon) {\n        return __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].map(polygon, function (coord) {\n          return [__WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(coord, 0), __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(coord, 1), __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(coord, 2) || 0];\n        });\n      });\n    });\n    /* eslint-enable max-nested-callbacks */\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = choropleths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var choropleth = _step.value;\n\n        choropleth.featureIndex = featureIndex;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    result.push.apply(result, _toConsumableArray(choropleths));\n  });\n  return result;\n}\n\n/**\n * \"Normalizes\" a GeoJSON geometry or \"Feature\" into a \"FeatureCollection\",\n * by wrapping it in an extra object/array.\n *\n * @param {object} geojson - geojson data\n * @return {object} - normalized geojson data\n */\nfunction normalizeGeojson(geojson) {\n  var type = __WEBPACK_IMPORTED_MODULE_0__lib_utils__[\"c\" /* Container */].get(geojson, 'type');\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'Polygon':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n      // Wrap the geometry object in a \"Feature\" and add the feature to a \"FeatureCollection\"\n      return {\n        type: 'FeatureCollection',\n        features: [{ type: 'Feature', properties: {}, geometry: geojson }]\n      };\n    case 'Feature':\n      // Add the feature to a \"FeatureCollection\"\n      return {\n        type: 'FeatureCollection',\n        features: [geojson]\n      };\n    case 'FeatureCollection':\n      // Just return the feature collection\n      return geojson;\n    default:\n      throw new Error('Unknown geojson type');\n  }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 54 */
/* exports provided: default */
/* exports used: default */
/*!********************************************************************************************!*\
  !*** ./src/layers/deprecated/extruded-choropleth-layer-64/extruded-choropleth-layer-64.js ***!
  \********************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib__ = __webpack_require__(/*! ../../../lib */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_utils__ = __webpack_require__(/*! ../../../shader-utils */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_utils_fp64__ = __webpack_require__(/*! ../../../lib/utils/fp64 */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_utils__ = __webpack_require__(/*! ../../../lib/utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_earcut__ = __webpack_require__(/*! earcut */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_earcut___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_earcut__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_gl_matrix__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_path__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\nvar DEFAULT_COLOR = [180, 180, 200];\nvar DEFAULT_AMBIENT_COLOR = [255, 255, 255];\nvar DEFAULT_POINTLIGHT_AMBIENT_COEFFICIENT = 0.1;\nvar DEFAULT_POINTLIGHT_LOCATION = [40.4406, -79.9959, 100];\nvar DEFAULT_POINTLIGHT_COLOR = [255, 255, 255];\nvar DEFAULT_POINTLIGHT_ATTENUATION = 1.0;\nvar DEFAULT_MATERIAL_SPECULAR_COLOR = [255, 255, 255];\nvar DEFAULT_MATERIAL_SHININESS = 1;\n\nvar defaultProps = {\n  opacity: 1,\n  elevation: 1\n};\n\nvar ExtrudedChoroplethLayer64 = function (_Layer) {\n  _inherits(ExtrudedChoroplethLayer64, _Layer);\n\n  function ExtrudedChoroplethLayer64() {\n    _classCallCheck(this, ExtrudedChoroplethLayer64);\n\n    return _possibleConstructorReturn(this, (ExtrudedChoroplethLayer64.__proto__ || Object.getPrototypeOf(ExtrudedChoroplethLayer64)).apply(this, arguments));\n  }\n\n  _createClass(ExtrudedChoroplethLayer64, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      var attributeManager = this.state.attributeManager;\n\n      attributeManager.add({\n        indices: { size: 1, isIndexed: true, update: this.calculateIndices },\n        positions: { size: 4, update: this.calculatePositions },\n        heights: { size: 2, update: this.calculateHeights },\n        normals: { size: 3, update: this.calculateNormals },\n        colors: { size: 4, update: this.calculateColors }\n      });\n\n      var gl = this.context.gl;\n\n      this.setState({\n        numInstances: 0,\n        model: this.getModel(gl)\n      });\n    }\n  }, {\n    key: 'updateState',\n    value: function updateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      var attributeManager = this.state.attributeManager;\n\n      if (changeFlags.dataChanged) {\n        this.extractExtrudedChoropleth();\n        attributeManager.invalidateAll();\n      }\n\n      var _props = this.props,\n          elevation = _props.elevation,\n          color = _props.color,\n          ambientColor = _props.ambientColor,\n          pointLightColor = _props.pointLightColor,\n          pointLightLocation = _props.pointLightLocation,\n          pointLightAmbientCoefficient = _props.pointLightAmbientCoefficient,\n          pointLightAttenuation = _props.pointLightAttenuation,\n          materialSpecularColor = _props.materialSpecularColor,\n          materialShininess = _props.materialShininess;\n\n\n      this.setUniforms({\n        elevation: Number.isFinite(elevation) ? elevation : 1,\n        colors: color || DEFAULT_COLOR,\n        uAmbientColor: ambientColor || DEFAULT_AMBIENT_COLOR,\n        uPointLightAmbientCoefficient: pointLightAmbientCoefficient || DEFAULT_POINTLIGHT_AMBIENT_COEFFICIENT,\n        uPointLightLocation: pointLightLocation || DEFAULT_POINTLIGHT_LOCATION,\n        uPointLightColor: pointLightColor || DEFAULT_POINTLIGHT_COLOR,\n        uPointLightAttenuation: pointLightAttenuation || DEFAULT_POINTLIGHT_ATTENUATION,\n        uMaterialSpecularColor: materialSpecularColor || DEFAULT_MATERIAL_SPECULAR_COLOR,\n        uMaterialShininess: materialShininess || DEFAULT_MATERIAL_SHININESS\n      });\n    }\n  }, {\n    key: 'draw',\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n\n      this.state.model.render(uniforms);\n    }\n  }, {\n    key: 'pick',\n    value: function pick(opts) {\n      _get(ExtrudedChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ExtrudedChoroplethLayer64.prototype), 'pick', this).call(this, opts);\n      var info = opts.info;\n\n      var index = this.decodePickingColor(info.color);\n      var feature = index >= 0 ? this.props.data.features[index] : null;\n      info.feature = feature;\n      info.object = feature;\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME extruded-choropleths-layer-vertex-shader\\n\\nattribute vec4 positions;\\nattribute vec2 heights;\\nattribute vec3 normals;\\nuniform vec3 colors;\\n\\nuniform float opacity;\\nuniform float elevation;\\n\\nuniform vec3 uAmbientColor;\\nuniform float uPointLightAmbientCoefficient;\\nuniform vec3 uPointLightLocation;\\nuniform vec3 uPointLightColor;\\nuniform float uPointLightAttenuation;\\n\\nuniform vec3 uMaterialSpecularColor;\\nuniform float uMaterialShininess;\\n\\nvarying vec4 vColor;\\n\\nvec3 applyLighting(vec3 position_modelspace, vec3 normal_modelspace, vec3 color) {\\n\\n  vec3 pointLightLocation_modelspace = vec3(project_position(uPointLightLocation));\\n  vec3 lightDirection = normalize(pointLightLocation_modelspace - position_modelspace);\\n\\n  vec3 ambient = uPointLightAmbientCoefficient * color / 255.0 * uAmbientColor / 255.0;\\n\\n  float diffuseCoefficient = max(dot(normal_modelspace, lightDirection), 0.0);\\n  vec3 diffuse = diffuseCoefficient * uPointLightColor / 255. * color / 255.;\\n\\n  return ambient + uPointLightAttenuation * diffuse;\\n}\\n\\nvoid main(void) {\\n  vec2 projected_xy[2];\\n  project_position_fp64(positions, projected_xy);\\n  vec2 scaled_height = mul_fp64(heights, vec2(projectionPixelsPerUnit.x * elevation, 0.0));\\n\\n  vec2 vertex_pos_modelspace[4];\\n  vertex_pos_modelspace[0] = projected_xy[0];\\n  vertex_pos_modelspace[1] = projected_xy[1];\\n  vertex_pos_modelspace[2] = sum_fp64(scaled_height, vec2(1.0, 0.0));\\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\\n\\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\\n\\n  vec3 color = applyLighting(\\n  \\tvec3(\\n  \\t  vertex_pos_modelspace[0].x,\\n  \\t  vertex_pos_modelspace[1].x,\\n  \\t  vertex_pos_modelspace[2].x),\\n  \\tnormals,\\n  \\tcolors\\n  );\\n  vColor = vec4(color, opacity);\\n}\\n// `;\\n',\n        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n/* fragment shader for the building-layer */\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\\n// `;\\n',\n        fp64: true,\n        project64: true\n      };\n    }\n  }, {\n    key: 'getModel',\n    value: function getModel(gl) {\n      // Make sure we have 32 bit support\n      // TODO - this could be done automatically by luma in \"draw\"\n      // when it detects 32 bit indices\n      if (!gl.getExtension('OES_element_index_uint')) {\n        throw new Error('Extruded choropleth layer needs 32 bit indices');\n      }\n\n      // Buildings are 3d so depth test should be enabled\n      // TODO - it is a little heavy handed to have a layer set this\n      // Alternatively, check depth test and warn if not set, or add a prop\n      // setDepthTest that is on by default.\n      gl.enable(__WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"GL\"].DEPTH_TEST);\n      gl.depthFunc(__WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"GL\"].LEQUAL);\n\n      var shaders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__shader_utils__[\"a\" /* assembleShaders */])(gl, this.getShaders());\n\n      return new __WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"Model\"]({\n        gl: gl,\n        id: this.props.id,\n        vs: shaders.vs,\n        fs: shaders.fs,\n        geometry: new __WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"Geometry\"]({\n          drawMode: this.props.drawWireframe ? __WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"GL\"].LINES : __WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"GL\"].TRIANGLES\n        }),\n        vertexCount: 0,\n        isIndexed: true\n      });\n    }\n\n    // each top vertex is on 3 surfaces\n    // each bottom vertex is on 2 surfaces\n\n  }, {\n    key: 'calculatePositions',\n    value: function calculatePositions(attribute) {\n      var _this2 = this;\n\n      var positions = this.state.positions;\n\n      if (!positions) {\n        positions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"b\" /* flatten */])(this.state.groupedVertices.map(function (vertices) {\n          var topVertices = Array.prototype.concat.apply([], vertices);\n          var baseVertices = topVertices.map(function (v) {\n            return [v[0], v[1], 0];\n          });\n          return _this2.props.drawWireframe ? [topVertices, baseVertices] : [topVertices, topVertices, topVertices, baseVertices, baseVertices];\n        }));\n      }\n\n      attribute.value = new Float32Array(positions.length / 3 * 4);\n\n      for (var i = 0; i < positions.length / 3; i++) {\n        var _fp64ify = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils_fp64__[\"a\" /* fp64ify */])(positions[i * 3 + 0]);\n\n        var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n        attribute.value[i * 4 + 0] = _fp64ify2[0];\n        attribute.value[i * 4 + 1] = _fp64ify2[1];\n\n        var _fp64ify3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils_fp64__[\"a\" /* fp64ify */])(positions[i * 3 + 1]);\n\n        var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n        attribute.value[i * 4 + 2] = _fp64ify4[0];\n        attribute.value[i * 4 + 3] = _fp64ify4[1];\n      }\n    }\n  }, {\n    key: 'calculateHeights',\n    value: function calculateHeights(attribute) {\n      var _this3 = this;\n\n      var positions = this.state.positions;\n\n      if (!positions) {\n        positions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"b\" /* flatten */])(this.state.groupedVertices.map(function (vertices) {\n          var topVertices = Array.prototype.concat.apply([], vertices);\n          var baseVertices = topVertices.map(function (v) {\n            return [v[0], v[1], 0];\n          });\n          return _this3.props.drawWireframe ? [topVertices, baseVertices] : [topVertices, topVertices, topVertices, baseVertices, baseVertices];\n        }));\n      }\n\n      attribute.value = new Float32Array(positions.length / 3 * 2);\n      for (var i = 0; i < positions.length / 3; i++) {\n        var _fp64ify5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__lib_utils_fp64__[\"a\" /* fp64ify */])(positions[i * 3 + 2] + 0.1);\n\n        var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n        attribute.value[i * 2 + 0] = _fp64ify6[0];\n        attribute.value[i * 2 + 1] = _fp64ify6[1];\n      }\n    }\n  }, {\n    key: 'calculateNormals',\n    value: function calculateNormals(attribute) {\n      var _this4 = this;\n\n      var up = [0, 1, 0];\n\n      var normals = this.state.groupedVertices.map(function (vertices, buildingIndex) {\n        var topNormals = new Array(countVertices(vertices)).fill(up);\n        var sideNormals = vertices.map(function (polygon) {\n          return _this4.calculateSideNormals(polygon);\n        });\n        var sideNormalsForward = sideNormals.map(function (n) {\n          return n[0];\n        });\n        var sideNormalsBackward = sideNormals.map(function (n) {\n          return n[1];\n        });\n\n        return _this4.props.drawWireframe ? [topNormals, topNormals] : [topNormals, sideNormalsForward, sideNormalsBackward, sideNormalsForward, sideNormalsBackward];\n      });\n\n      attribute.value = new Float32Array(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"b\" /* flatten */])(normals));\n    }\n  }, {\n    key: 'calculateSideNormals',\n    value: function calculateSideNormals(vertices) {\n      var numVertices = vertices.length;\n      var normals = [];\n\n      for (var i = 0; i < numVertices - 1; i++) {\n        var n = getNormal(vertices[i], vertices[i + 1]);\n        normals.push(n);\n      }\n\n      return [[].concat(normals, [normals[0]]), [normals[0]].concat(normals)];\n    }\n  }, {\n    key: 'calculateIndices',\n    value: function calculateIndices(attribute) {\n      var _this5 = this;\n\n      // adjust index offset for multiple buildings\n      var multiplier = this.props.drawWireframe ? 2 : 5;\n      var offsets = this.state.groupedVertices.reduce(function (acc, vertices) {\n        return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + countVertices(vertices) * multiplier]);\n      }, [0]);\n\n      var indices = this.state.groupedVertices.map(function (vertices, buildingIndex) {\n        return _this5.props.drawWireframe ?\n        // 1. get sequentially ordered indices of each building wireframe\n        // 2. offset them by the number of indices in previous buildings\n        _this5.calculateContourIndices(vertices, offsets[buildingIndex]) :\n        // 1. get triangulated indices for the internal areas\n        // 2. offset them by the number of indices in previous buildings\n        _this5.calculateSurfaceIndices(vertices, offsets[buildingIndex]);\n      });\n\n      attribute.value = new Uint32Array(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"b\" /* flatten */])(indices));\n      attribute.target = __WEBPACK_IMPORTED_MODULE_3_luma_gl__[\"GL\"].ELEMENT_ARRAY_BUFFER;\n      this.state.model.setVertexCount(attribute.value.length / attribute.size);\n    }\n  }, {\n    key: 'calculateColors',\n    value: function calculateColors(attribute) {\n      var _this6 = this;\n\n      var colors = this.state.groupedVertices.map(function (vertices, buildingIndex) {\n        var color = _this6.props.color;\n\n        var baseColor = Array.isArray(color) ? color[0] : color;\n        var topColor = Array.isArray(color) ? color[color.length - 1] : color;\n        var numVertices = countVertices(vertices);\n\n        var topColors = new Array(numVertices).fill(topColor);\n        var baseColors = new Array(numVertices).fill(baseColor);\n        return _this6.props.drawWireframe ? [topColors, baseColors] : [topColors, topColors, topColors, baseColors, baseColors];\n      });\n      attribute.value = new Float32Array(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"b\" /* flatten */])(colors));\n    }\n  }, {\n    key: 'extractExtrudedChoropleth',\n    value: function extractExtrudedChoropleth() {\n      var _this7 = this;\n\n      var data = this.props.data;\n      // Generate a flat list of buildings\n\n      this.state.buildings = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var _state$buildings;\n\n          var building = _step.value;\n          var properties = building.properties,\n              geometry = building.geometry;\n          var coordinates = geometry.coordinates,\n              type = geometry.type;\n\n          if (!properties.height) {\n            properties.height = Math.random() * 1000;\n          }\n          switch (type) {\n            case 'MultiPolygon':\n              // Maps to multiple buildings\n              var buildings = coordinates.map(function (coords) {\n                return { coordinates: coords, properties: properties };\n              });\n              (_state$buildings = _this7.state.buildings).push.apply(_state$buildings, _toConsumableArray(buildings));\n              break;\n            case 'Polygon':\n              // Maps to a single building\n              _this7.state.buildings.push({ coordinates: coordinates, properties: properties });\n              break;\n            default:\n            // We are ignoring Points for now\n          }\n        };\n\n        for (var _iterator = data.features[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n\n        // Generate vertices for the building list\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.state.groupedVertices = this.state.buildings.map(function (building) {\n        return building.coordinates.map(function (polygon) {\n          return polygon.map(function (coordinate) {\n            return [coordinate[0], coordinate[1], building.properties.height || 10];\n          });\n        });\n      });\n    }\n  }, {\n    key: 'calculateContourIndices',\n    value: function calculateContourIndices(vertices, offset) {\n      var stride = countVertices(vertices);\n\n      return vertices.map(function (polygon) {\n        var indices = [offset];\n        var numVertices = polygon.length;\n\n        // building top\n        // use vertex pairs for GL.LINES => [0, 1, 1, 2, 2, ..., n-1, n-1, 0]\n        for (var i = 1; i < numVertices - 1; i++) {\n          indices.push(i + offset, i + offset);\n        }\n        indices.push(offset);\n\n        // building sides\n        for (var _i = 0; _i < numVertices - 1; _i++) {\n          indices.push(_i + offset, _i + stride + offset);\n        }\n\n        offset += numVertices;\n        return indices;\n      });\n    }\n  }, {\n    key: 'calculateSurfaceIndices',\n    value: function calculateSurfaceIndices(vertices, offset) {\n      var stride = countVertices(vertices);\n      var holes = null;\n      var quad = [[0, 1], [0, 3], [1, 2], [1, 2], [0, 3], [1, 4]];\n\n      if (vertices.length > 1) {\n        holes = vertices.reduce(function (acc, polygon) {\n          return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + polygon.length]);\n        }, [0]).slice(1, vertices.length);\n      }\n\n      var topIndices = __WEBPACK_IMPORTED_MODULE_5_earcut___default()(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__lib_utils__[\"b\" /* flatten */])(vertices), holes, 3).map(function (index) {\n        return index + offset;\n      });\n\n      var sideIndices = vertices.map(function (polygon) {\n        var numVertices = polygon.length;\n        // building top\n        var indices = [];\n\n        // building sides\n        for (var i = 0; i < numVertices - 1; i++) {\n          indices.push.apply(indices, _toConsumableArray(drawRectangle(i)));\n        }\n\n        offset += numVertices;\n        return indices;\n      });\n\n      return [topIndices, sideIndices];\n\n      function drawRectangle(i) {\n        return quad.map(function (v) {\n          return i + v[0] + stride * v[1] + offset;\n        });\n      }\n    }\n  }]);\n\n  return ExtrudedChoroplethLayer64;\n}(__WEBPACK_IMPORTED_MODULE_0__lib__[\"b\" /* Layer */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ExtrudedChoroplethLayer64;\n\n\nExtrudedChoroplethLayer64.layerName = 'ExtrudedChoroplethLayer64';\nExtrudedChoroplethLayer64.defaultProps = defaultProps;\n\n/*\n * helpers\n */\n// get normal vector of line segment\nfunction getNormal(p1, p2) {\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    return [1, 0, 0];\n  }\n\n  var degrees2radians = Math.PI / 180;\n\n  var lon1 = degrees2radians * p1[0];\n  var lon2 = degrees2radians * p2[0];\n  var lat1 = degrees2radians * p1[1];\n  var lat2 = degrees2radians * p2[1];\n\n  var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n  var b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n  return __WEBPACK_IMPORTED_MODULE_6_gl_matrix__[\"vec3\"].normalize([], [b, 0, -a]);\n}\n\n// count number of vertices in geojson polygon\nfunction countVertices(vertices) {\n  return vertices.reduce(function (count, polygon) {\n    return count + polygon.length;\n  }, 0);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 55 */
/* exports provided: default */
/* exports used: default */
/*!***************************************************!*\
  !*** ./src/layers/fp64/arc-layer/arc-layer-64.js ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_arc_layer__ = __webpack_require__(/*! ../../core/arc-layer */ 46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__ = __webpack_require__(/*! ../../../lib/utils/fp64 */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_path__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\nvar ArcLayer64 = function (_ArcLayer) {\n  _inherits(ArcLayer64, _ArcLayer);\n\n  function ArcLayer64() {\n    _classCallCheck(this, ArcLayer64);\n\n    return _possibleConstructorReturn(this, (ArcLayer64.__proto__ || Object.getPrototypeOf(ArcLayer64)).apply(this, arguments));\n  }\n\n  _createClass(ArcLayer64, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      _get(ArcLayer64.prototype.__proto__ || Object.getPrototypeOf(ArcLayer64.prototype), 'initializeState', this).call(this);\n\n      var attributeManager = this.state.attributeManager;\n\n\n      attributeManager.addInstanced({\n        instanceSourcePositions64: {\n          size: 4,\n          update: this.calculateInstanceSourcePositions64\n        },\n        instanceTargetPositions64: {\n          size: 4,\n          update: this.calculateInstanceTargetPositions64\n        }\n        // Reuse from base class\n        // instanceSourceColors: {\n        //   size: 4,\n        //   type: GL.UNSIGNED_BYTE,\n        //   update: this.calculateInstanceSourceColors\n        // },\n        // instanceTargetColors: {\n        //   size: 4,\n        //   type: GL.UNSIGNED_BYTE,\n        //   update: this.calculateInstanceTargetColors\n        // }\n      });\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME arc-layer-64-vertex-shader\\n\\nconst float N = 49.0;\\n\\nattribute vec3 positions;\\nattribute vec4 instanceSourceColors;\\nattribute vec4 instanceTargetColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceSourcePositions64;\\nattribute vec4 instanceTargetPositions64;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\nvec2 paraboloid_fp64(vec2 source[2], vec2 target[2], float ratio) {\\n\\n  vec2 x[2];\\n  vec2_mix_fp64(source, target, ratio, x);\\n  vec2 center[2];\\n  vec2_mix_fp64(source, target, 0.5, center);\\n\\n  vec2 dSourceCenter = vec2_distance_fp64(source, center);\\n  vec2 dXCenter = vec2_distance_fp64(x, center);\\n  return mul_fp64(sum_fp64(dSourceCenter, dXCenter), sub_fp64(dSourceCenter, dXCenter));\\n}\\n\\nvoid main(void) {\\n  vec2 projectedSourceCoord[2];\\n  project_position_fp64(instanceSourcePositions64, projectedSourceCoord);\\n  vec2 projectedTargetCoord[2];\\n  project_position_fp64(instanceTargetPositions64, projectedTargetCoord);\\n\\n  float segmentRatio = smoothstep(0.0, 1.0, positions.x / N);\\n\\n  vec2 mixed_temp[2];\\n\\n  vec2_mix_fp64(projectedSourceCoord, projectedTargetCoord, segmentRatio, mixed_temp);\\n\\n  vec2 vertex_pos_modelspace[4];\\n\\n  vertex_pos_modelspace[0] = mixed_temp[0];\\n  vertex_pos_modelspace[1] = mixed_temp[1];\\n\\n  vec2 vertex_height = paraboloid_fp64(projectedSourceCoord, projectedTargetCoord, segmentRatio);\\n  if (vertex_height.x < 0.0 || (vertex_height.x == 0.0 && vertex_height.y <= 0.0)) vertex_height = vec2(0.0, 0.0);\\n\\n  vertex_pos_modelspace[2] = sqrt_fp64(vertex_height);\\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\\n\\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\\n\\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\\n\\n  vColor = mix(\\n    vec4(color.rgb, color.a * opacity),\\n    vec4(instancePickingColors / 255., 1.),\\n    renderPickingBuffer\\n  );\\n}\\n',\n        fs: _get(ArcLayer64.prototype.__proto__ || Object.getPrototypeOf(ArcLayer64.prototype), 'getShaders', this).call(this).fs,\n        fp64: true,\n        project64: true\n      };\n    }\n  }, {\n    key: 'calculateInstanceSourcePositions64',\n    value: function calculateInstanceSourcePositions64(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getSourcePosition = _props.getSourcePosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var sourcePosition = getSourcePosition(object);\n\n          var _fp64ify = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(sourcePosition[0]);\n\n          var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n          value[i + 0] = _fp64ify2[0];\n          value[i + 1] = _fp64ify2[1];\n\n          var _fp64ify3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(sourcePosition[1]);\n\n          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n          value[i + 2] = _fp64ify4[0];\n          value[i + 3] = _fp64ify4[1];\n\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceTargetPositions64',\n    value: function calculateInstanceTargetPositions64(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getTargetPosition = _props2.getTargetPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var targetPosition = getTargetPosition(object);\n\n          var _fp64ify5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(targetPosition[0]);\n\n          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n          value[i + 0] = _fp64ify6[0];\n          value[i + 1] = _fp64ify6[1];\n\n          var _fp64ify7 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(targetPosition[1]);\n\n          var _fp64ify8 = _slicedToArray(_fp64ify7, 2);\n\n          value[i + 2] = _fp64ify8[0];\n          value[i + 3] = _fp64ify8[1];\n\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ArcLayer64;\n}(__WEBPACK_IMPORTED_MODULE_0__core_arc_layer__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ArcLayer64;\n\n\nArcLayer64.layerName = 'ArcLayer64';//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 56 */
/* exports provided: default */
/* exports used: default */
/*!*****************************************************!*\
  !*** ./src/layers/fp64/line-layer/line-layer-64.js ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_line_layer__ = __webpack_require__(/*! ../../core/line-layer */ 48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__ = __webpack_require__(/*! ../../../lib/utils/fp64 */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_path__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\nvar LineLayer64 = function (_LineLayer) {\n  _inherits(LineLayer64, _LineLayer);\n\n  function LineLayer64() {\n    _classCallCheck(this, LineLayer64);\n\n    return _possibleConstructorReturn(this, (LineLayer64.__proto__ || Object.getPrototypeOf(LineLayer64)).apply(this, arguments));\n  }\n\n  _createClass(LineLayer64, [{\n    key: 'initializeState',\n    value: function initializeState() {\n      _get(LineLayer64.prototype.__proto__ || Object.getPrototypeOf(LineLayer64.prototype), 'initializeState', this).call(this);\n\n      var attributeManager = this.state.attributeManager;\n\n      attributeManager.addInstanced({\n        instanceSourcePositions64: {\n          size: 4,\n          update: this.calculateInstanceSourcePositions\n        },\n        instanceTargetPositions64: {\n          size: 4,\n          update: this.calculateInstanceTargetPositions\n        },\n        instanceElevations: {\n          size: 2,\n          update: this.calculateInstanceElevations\n        }\n      });\n    }\n  }, {\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME line-layer-64-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec4 instanceSourcePositions64;\\nattribute vec4 instanceTargetPositions64;\\nattribute vec2 instanceElevations;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  // Position\\n  vec2 projectedSourceCoord[2];\\n  project_position_fp64(instanceSourcePositions64, projectedSourceCoord);\\n  vec2 projectedTargetCoord[2];\\n  project_position_fp64(instanceTargetPositions64, projectedTargetCoord);\\n\\n  // linear interpolation of source & target to pick right coord\\n  float segmentIndex = positions.x;\\n  vec2 mixed_temp[2];\\n\\n  vec2_mix_fp64(projectedSourceCoord, projectedTargetCoord, segmentIndex, mixed_temp);\\n\\n  float mixedElevation =\\n    mix(instanceElevations.x, instanceElevations.y, segmentIndex);\\n\\n  vec2 vertex_pos_modelspace[4];\\n\\n  vertex_pos_modelspace[0] = mixed_temp[0];\\n  vertex_pos_modelspace[1] = mixed_temp[1];\\n  vertex_pos_modelspace[2] = vec2(project_scale(mixedElevation), 0.0);\\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\\n\\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\\n\\n  // Color\\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\\n\\n  vColor = mix(\\n    color,\\n    pickingColor,\\n    renderPickingBuffer\\n  );\\n}\\n',\n        fs: _get(LineLayer64.prototype.__proto__ || Object.getPrototypeOf(LineLayer64.prototype), 'getShaders', this).call(this).fs,\n        fp64: true,\n        project64: true\n      };\n    }\n  }, {\n    key: 'calculateInstanceSourcePositions',\n    value: function calculateInstanceSourcePositions(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getSourcePosition = _props.getSourcePosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n\n          var sourcePosition = getSourcePosition(object);\n\n          var _fp64ify = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(sourcePosition[0]);\n\n          var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n          value[i + 0] = _fp64ify2[0];\n          value[i + 1] = _fp64ify2[1];\n\n          var _fp64ify3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(sourcePosition[1]);\n\n          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n          value[i + 2] = _fp64ify4[0];\n          value[i + 3] = _fp64ify4[1];\n\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceTargetPositions',\n    value: function calculateInstanceTargetPositions(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getTargetPosition = _props2.getTargetPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var object = _step2.value;\n\n          var targetPosition = getTargetPosition(object);\n\n          var _fp64ify5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(targetPosition[0]);\n\n          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n          value[i + 0] = _fp64ify6[0];\n          value[i + 1] = _fp64ify6[1];\n\n          var _fp64ify7 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(targetPosition[1]);\n\n          var _fp64ify8 = _slicedToArray(_fp64ify7, 2);\n\n          value[i + 2] = _fp64ify8[0];\n          value[i + 3] = _fp64ify8[1];\n\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstanceElevations',\n    value: function calculateInstanceElevations(attribute) {\n      var _props3 = this.props,\n          data = _props3.data,\n          getSourcePosition = _props3.getSourcePosition,\n          getTargetPosition = _props3.getTargetPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var object = _step3.value;\n\n          var sourcePosition = getSourcePosition(object);\n          var targetPosition = getTargetPosition(object);\n          value[i + 0] = sourcePosition[2] || 0;\n          value[i + 1] = targetPosition[2] || 0;\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }]);\n\n  return LineLayer64;\n}(__WEBPACK_IMPORTED_MODULE_0__core_line_layer__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = LineLayer64;\n\n\nLineLayer64.layerName = 'LineLayer64';//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 57 */
/* exports provided: default */
/* exports used: default */
/*!*******************************************************************!*\
  !*** ./src/layers/fp64/scatterplot-layer/scatterplot-layer-64.js ***!
  \*******************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_scatterplot_layer__ = __webpack_require__(/*! ../../core/scatterplot-layer */ 24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__ = __webpack_require__(/*! ../../../lib/utils/fp64 */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_path__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n\n\nvar ScatterplotLayer64 = function (_ScatterplotLayer) {\n  _inherits(ScatterplotLayer64, _ScatterplotLayer);\n\n  function ScatterplotLayer64() {\n    _classCallCheck(this, ScatterplotLayer64);\n\n    return _possibleConstructorReturn(this, (ScatterplotLayer64.__proto__ || Object.getPrototypeOf(ScatterplotLayer64)).apply(this, arguments));\n  }\n\n  _createClass(ScatterplotLayer64, [{\n    key: 'getShaders',\n\n\n    // Override the super class vertex shader\n    value: function getShaders(id) {\n      return {\n        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n#define SHADER_NAME scatterplot-layer-64-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec4 instancePositions64xy;\\nattribute vec2 instancePositions64z;\\nattribute float instanceRadius;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\n// Only one-dimensional arrays may be declared in GLSL ES 1.0. specs p.24\\nuniform float opacity;\\nuniform float radius;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float renderPickingBuffer;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  // Multiply out radius and clamp to limits\\n  float radiusPixels = clamp(\\n    project_scale(radius * instanceRadius),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n\\n  vec2 projected_coord_xy[2];\\n  project_position_fp64(instancePositions64xy, projected_coord_xy);\\n\\n  vec2 vertex_pos_localspace[4];\\n  vec4_fp64(vec4(positions * radiusPixels, 0.0), vertex_pos_localspace);\\n\\n  vec2 vertex_pos_modelspace[4];\\n  vertex_pos_modelspace[0] = sum_fp64(vertex_pos_localspace[0], projected_coord_xy[0]);\\n  vertex_pos_modelspace[1] = sum_fp64(vertex_pos_localspace[1], projected_coord_xy[1]);\\n  vertex_pos_modelspace[2] = sum_fp64(vertex_pos_localspace[2], vec2(instancePositions64z.x + 1.0, instancePositions64z.y));\\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\\n\\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\\n\\n  // Apply opacity to instance color, or return instance picking color\\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\\n  vColor = mix(color, pickingColor, renderPickingBuffer);\\n}\\n',\n        fs: _get(ScatterplotLayer64.prototype.__proto__ || Object.getPrototypeOf(ScatterplotLayer64.prototype), 'getShaders', this).call(this).fs,\n        fp64: true,\n        project64: true\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      // We use the model and all attributes except \"instancePositions\" of the base layer\n      _get(ScatterplotLayer64.prototype.__proto__ || Object.getPrototypeOf(ScatterplotLayer64.prototype), 'initializeState', this).call(this);\n\n      // Add the 64 bit positions\n      var attributeManager = this.state.attributeManager;\n\n      attributeManager.addInstanced({\n        instancePositions64xy: { size: 4, update: this.calculateInstancePositions64xy },\n        instancePositions64z: { size: 2, update: this.calculateInstancePositions64z }\n        // Reusing from base class\n        // instanceRadius: {size: 1, update: this.calculateInstanceRadius},\n        // instanceColors: {size: 4, type: GL.UNSIGNED_BYTE, update: this.calculateInstanceColors}\n      });\n    }\n  }, {\n    key: 'calculateInstancePositions64xy',\n    value: function calculateInstancePositions64xy(attribute) {\n      var _props = this.props,\n          data = _props.data,\n          getPosition = _props.getPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var point = _step.value;\n\n          var position = getPosition(point);\n\n          var _fp64ify = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(position[0]);\n\n          var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n          value[i + 0] = _fp64ify2[0];\n          value[i + 1] = _fp64ify2[1];\n\n          var _fp64ify3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(position[1]);\n\n          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n          value[i + 2] = _fp64ify4[0];\n          value[i + 3] = _fp64ify4[1];\n\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'calculateInstancePositions64z',\n    value: function calculateInstancePositions64z(attribute) {\n      var _props2 = this.props,\n          data = _props2.data,\n          getPosition = _props2.getPosition;\n      var value = attribute.value,\n          size = attribute.size;\n\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var point = _step2.value;\n\n          var position = getPosition(point);\n\n          var _fp64ify5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__lib_utils_fp64__[\"a\" /* fp64ify */])(position[2] || 0);\n\n          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n          value[i + 0] = _fp64ify6[0];\n          value[i + 1] = _fp64ify6[1];\n\n          i += size;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ScatterplotLayer64;\n}(__WEBPACK_IMPORTED_MODULE_0__core_scatterplot_layer__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ScatterplotLayer64;\n\n\nScatterplotLayer64.layerName = 'ScatterplotLayer64';//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 58 */
/* exports provided: drawLayers, pickLayers */
/* exports used: drawLayers, pickLayers */
/*!**********************************!*\
  !*** ./src/lib/draw-and-pick.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__viewport_uniforms__ = __webpack_require__(/*! ./viewport-uniforms */ 66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils__ = __webpack_require__(/*! ./utils */ 3);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = drawLayers;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = pickLayers;\n/* global window */\n\n\n\n\nvar renderCount = 0;\n\nfunction drawLayers(_ref) {\n  var layers = _ref.layers,\n      pass = _ref.pass;\n\n  __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].log(2, 'DRAWING ' + layers.length + ' layers');\n\n  var layerIndex = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = layers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var layer = _step.value;\n\n      if (layer.props.visible) {\n        layer.drawLayer({\n          uniforms: Object.assign({}, layer.context.uniforms, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__viewport_uniforms__[\"a\" /* getUniformsFromViewport */])(layer.context.viewport, layer.props), { layerIndex: layerIndex })\n        });\n        layerIndex++;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\" /* log */].log(1, 'RENDER PASS ' + pass + ': ' + renderCount++ + ' ' + layerIndex + ' visible, ' + layers.length + ' total');\n}\n\n/* eslint-disable max-depth, max-statements */\nfunction pickLayers(gl, _ref2) {\n  var layers = _ref2.layers,\n      pickingFBO = _ref2.pickingFBO,\n      _ref2$uniforms = _ref2.uniforms,\n      uniforms = _ref2$uniforms === undefined ? {} : _ref2$uniforms,\n      x = _ref2.x,\n      y = _ref2.y,\n      mode = _ref2.mode;\n\n  // Convert from canvas top-left to WebGL bottom-left coordinates\n  // And compensate for pixelRatio\n  var pixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio : 1;\n  var deviceX = x * pixelRatio;\n  var deviceY = gl.canvas.height - y * pixelRatio;\n\n  // TODO - just return glContextWithState once luma updates\n  var pickedInfos = [];\n\n  // Make sure we clear scissor test and fbo bindings in case of exceptions\n  // We are only interested in one pixel, no need to render anything else\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"glContextWithState\"])(gl, {\n    frameBuffer: pickingFBO,\n    framebuffer: pickingFBO,\n    scissorTest: { x: deviceX, y: deviceY, w: 1, h: 1 }\n  }, function () {\n\n    var layerIndex = 0;\n    var zOrder = 0;\n\n    for (var i = layers.length - 1; i >= 0; --i) {\n      var layer = layers[i];\n\n      if (layer.props.visible) {\n        layerIndex++;\n      }\n\n      if (layer.props.visible && layer.props.pickable) {\n\n        // Clear the frame buffer, render and sample\n        gl.clear(__WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].COLOR_BUFFER_BIT | __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"GL\"].DEPTH_BUFFER_BIT);\n        var info = createInfo({\n          layer: layer,\n          pixel: [x, y],\n          devicePixel: [deviceX, deviceY],\n          pixelRatio: pixelRatio\n        });\n\n        layer.pickLayer({\n          info: info,\n          uniforms: Object.assign({}, layer.context.uniforms, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__viewport_uniforms__[\"a\" /* getUniformsFromViewport */])(layer.context.viewport, layer.props), { layerIndex: layerIndex }),\n          pickEnableUniforms: { renderPickingBuffer: 1, pickingEnabled: 1 },\n          pickDisableUniforms: { renderPickingBuffer: 0, pickingEnabled: 0 },\n          deviceX: deviceX, deviceY: deviceY,\n          mode: mode\n        });\n\n        if (info.index >= 0) {\n          info.picked = true;\n          info.zOrder = zOrder++;\n          // If props.data is an indexable array, get the object\n          if (Array.isArray(layer.props.data)) {\n            info.object = layer.props.data[info.index];\n          }\n        }\n\n        pickedInfos.push(info);\n      }\n    }\n  });\n\n  // Calling callbacks can have async interactions with React\n  // which nullifies layer.state.\n  var unhandledPickInfos = [];\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = pickedInfos[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var info = _step2.value;\n\n      var handled = null;\n      switch (mode) {\n        case 'click':\n          handled = info.layer.props.onClick(info);break;\n        case 'hover':\n          handled = info.layer.props.onHover(info);break;\n        default:\n          throw new Error('unknown pick type');\n      }\n\n      if (!handled) {\n        unhandledPickInfos.push(info);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return unhandledPickInfos;\n}\n/* eslint-enable max-depth, max-statements */\n\nfunction createInfo(_ref3) {\n  var info = _ref3.info,\n      layer = _ref3.layer,\n      pixel = _ref3.pixel,\n      devicePixel = _ref3.devicePixel,\n      pixelRatio = _ref3.pixelRatio;\n\n  // Assign a number of potentially useful props to the \"info\" object\n  return {\n    layer: layer,\n    index: -1,\n    picked: false,\n    x: pixel[0],\n    y: pixel[1],\n    pixel: pixel,\n    devicePixel: devicePixel,\n    pixelRatio: pixelRatio,\n    lngLat: layer.unproject(pixel)\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2RyYXctYW5kLXBpY2suanM/ZGQ0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgeyBHTCwgZ2xDb250ZXh0V2l0aFN0YXRlIH0gZnJvbSAnbHVtYS5nbCc7XG5pbXBvcnQgeyBnZXRVbmlmb3Jtc0Zyb21WaWV3cG9ydCB9IGZyb20gJy4vdmlld3BvcnQtdW5pZm9ybXMnO1xuaW1wb3J0IHsgbG9nIH0gZnJvbSAnLi91dGlscyc7XG5cbnZhciByZW5kZXJDb3VudCA9IDA7XG5cbmV4cG9ydCBmdW5jdGlvbiBkcmF3TGF5ZXJzKF9yZWYpIHtcbiAgdmFyIGxheWVycyA9IF9yZWYubGF5ZXJzLFxuICAgICAgcGFzcyA9IF9yZWYucGFzcztcblxuICBsb2cubG9nKDIsICdEUkFXSU5HICcgKyBsYXllcnMubGVuZ3RoICsgJyBsYXllcnMnKTtcblxuICB2YXIgbGF5ZXJJbmRleCA9IDA7XG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGxheWVyc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHtcbiAgICAgIHZhciBsYXllciA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICBpZiAobGF5ZXIucHJvcHMudmlzaWJsZSkge1xuICAgICAgICBsYXllci5kcmF3TGF5ZXIoe1xuICAgICAgICAgIHVuaWZvcm1zOiBPYmplY3QuYXNzaWduKHt9LCBsYXllci5jb250ZXh0LnVuaWZvcm1zLCBnZXRVbmlmb3Jtc0Zyb21WaWV3cG9ydChsYXllci5jb250ZXh0LnZpZXdwb3J0LCBsYXllci5wcm9wcyksIHsgbGF5ZXJJbmRleDogbGF5ZXJJbmRleCB9KVxuICAgICAgICB9KTtcbiAgICAgICAgbGF5ZXJJbmRleCsrO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBsb2cubG9nKDEsICdSRU5ERVIgUEFTUyAnICsgcGFzcyArICc6ICcgKyByZW5kZXJDb3VudCsrICsgJyAnICsgbGF5ZXJJbmRleCArICcgdmlzaWJsZSwgJyArIGxheWVycy5sZW5ndGggKyAnIHRvdGFsJyk7XG59XG5cbi8qIGVzbGludC1kaXNhYmxlIG1heC1kZXB0aCwgbWF4LXN0YXRlbWVudHMgKi9cbmV4cG9ydCBmdW5jdGlvbiBwaWNrTGF5ZXJzKGdsLCBfcmVmMikge1xuICB2YXIgbGF5ZXJzID0gX3JlZjIubGF5ZXJzLFxuICAgICAgcGlja2luZ0ZCTyA9IF9yZWYyLnBpY2tpbmdGQk8sXG4gICAgICBfcmVmMiR1bmlmb3JtcyA9IF9yZWYyLnVuaWZvcm1zLFxuICAgICAgdW5pZm9ybXMgPSBfcmVmMiR1bmlmb3JtcyA9PT0gdW5kZWZpbmVkID8ge30gOiBfcmVmMiR1bmlmb3JtcyxcbiAgICAgIHggPSBfcmVmMi54LFxuICAgICAgeSA9IF9yZWYyLnksXG4gICAgICBtb2RlID0gX3JlZjIubW9kZTtcblxuICAvLyBDb252ZXJ0IGZyb20gY2FudmFzIHRvcC1sZWZ0IHRvIFdlYkdMIGJvdHRvbS1sZWZ0IGNvb3JkaW5hdGVzXG4gIC8vIEFuZCBjb21wZW5zYXRlIGZvciBwaXhlbFJhdGlvXG4gIHZhciBwaXhlbFJhdGlvID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA6IDE7XG4gIHZhciBkZXZpY2VYID0geCAqIHBpeGVsUmF0aW87XG4gIHZhciBkZXZpY2VZID0gZ2wuY2FudmFzLmhlaWdodCAtIHkgKiBwaXhlbFJhdGlvO1xuXG4gIC8vIFRPRE8gLSBqdXN0IHJldHVybiBnbENvbnRleHRXaXRoU3RhdGUgb25jZSBsdW1hIHVwZGF0ZXNcbiAgdmFyIHBpY2tlZEluZm9zID0gW107XG5cbiAgLy8gTWFrZSBzdXJlIHdlIGNsZWFyIHNjaXNzb3IgdGVzdCBhbmQgZmJvIGJpbmRpbmdzIGluIGNhc2Ugb2YgZXhjZXB0aW9uc1xuICAvLyBXZSBhcmUgb25seSBpbnRlcmVzdGVkIGluIG9uZSBwaXhlbCwgbm8gbmVlZCB0byByZW5kZXIgYW55dGhpbmcgZWxzZVxuICBnbENvbnRleHRXaXRoU3RhdGUoZ2wsIHtcbiAgICBmcmFtZUJ1ZmZlcjogcGlja2luZ0ZCTyxcbiAgICBmcmFtZWJ1ZmZlcjogcGlja2luZ0ZCTyxcbiAgICBzY2lzc29yVGVzdDogeyB4OiBkZXZpY2VYLCB5OiBkZXZpY2VZLCB3OiAxLCBoOiAxIH1cbiAgfSwgZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIGxheWVySW5kZXggPSAwO1xuICAgIHZhciB6T3JkZXIgPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IGxheWVycy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgdmFyIGxheWVyID0gbGF5ZXJzW2ldO1xuXG4gICAgICBpZiAobGF5ZXIucHJvcHMudmlzaWJsZSkge1xuICAgICAgICBsYXllckluZGV4Kys7XG4gICAgICB9XG5cbiAgICAgIGlmIChsYXllci5wcm9wcy52aXNpYmxlICYmIGxheWVyLnByb3BzLnBpY2thYmxlKSB7XG5cbiAgICAgICAgLy8gQ2xlYXIgdGhlIGZyYW1lIGJ1ZmZlciwgcmVuZGVyIGFuZCBzYW1wbGVcbiAgICAgICAgZ2wuY2xlYXIoR0wuQ09MT1JfQlVGRkVSX0JJVCB8IEdMLkRFUFRIX0JVRkZFUl9CSVQpO1xuICAgICAgICB2YXIgaW5mbyA9IGNyZWF0ZUluZm8oe1xuICAgICAgICAgIGxheWVyOiBsYXllcixcbiAgICAgICAgICBwaXhlbDogW3gsIHldLFxuICAgICAgICAgIGRldmljZVBpeGVsOiBbZGV2aWNlWCwgZGV2aWNlWV0sXG4gICAgICAgICAgcGl4ZWxSYXRpbzogcGl4ZWxSYXRpb1xuICAgICAgICB9KTtcblxuICAgICAgICBsYXllci5waWNrTGF5ZXIoe1xuICAgICAgICAgIGluZm86IGluZm8sXG4gICAgICAgICAgdW5pZm9ybXM6IE9iamVjdC5hc3NpZ24oe30sIGxheWVyLmNvbnRleHQudW5pZm9ybXMsIGdldFVuaWZvcm1zRnJvbVZpZXdwb3J0KGxheWVyLmNvbnRleHQudmlld3BvcnQsIGxheWVyLnByb3BzKSwgeyBsYXllckluZGV4OiBsYXllckluZGV4IH0pLFxuICAgICAgICAgIHBpY2tFbmFibGVVbmlmb3JtczogeyByZW5kZXJQaWNraW5nQnVmZmVyOiAxLCBwaWNraW5nRW5hYmxlZDogMSB9LFxuICAgICAgICAgIHBpY2tEaXNhYmxlVW5pZm9ybXM6IHsgcmVuZGVyUGlja2luZ0J1ZmZlcjogMCwgcGlja2luZ0VuYWJsZWQ6IDAgfSxcbiAgICAgICAgICBkZXZpY2VYOiBkZXZpY2VYLCBkZXZpY2VZOiBkZXZpY2VZLFxuICAgICAgICAgIG1vZGU6IG1vZGVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGluZm8uaW5kZXggPj0gMCkge1xuICAgICAgICAgIGluZm8ucGlja2VkID0gdHJ1ZTtcbiAgICAgICAgICBpbmZvLnpPcmRlciA9IHpPcmRlcisrO1xuICAgICAgICAgIC8vIElmIHByb3BzLmRhdGEgaXMgYW4gaW5kZXhhYmxlIGFycmF5LCBnZXQgdGhlIG9iamVjdFxuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGxheWVyLnByb3BzLmRhdGEpKSB7XG4gICAgICAgICAgICBpbmZvLm9iamVjdCA9IGxheWVyLnByb3BzLmRhdGFbaW5mby5pbmRleF07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcGlja2VkSW5mb3MucHVzaChpbmZvKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIC8vIENhbGxpbmcgY2FsbGJhY2tzIGNhbiBoYXZlIGFzeW5jIGludGVyYWN0aW9ucyB3aXRoIFJlYWN0XG4gIC8vIHdoaWNoIG51bGxpZmllcyBsYXllci5zdGF0ZS5cbiAgdmFyIHVuaGFuZGxlZFBpY2tJbmZvcyA9IFtdO1xuICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlO1xuICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7XG4gIHZhciBfaXRlcmF0b3JFcnJvcjIgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaXRlcmF0b3IyID0gcGlja2VkSW5mb3NbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHtcbiAgICAgIHZhciBpbmZvID0gX3N0ZXAyLnZhbHVlO1xuXG4gICAgICB2YXIgaGFuZGxlZCA9IG51bGw7XG4gICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgY2FzZSAnY2xpY2snOlxuICAgICAgICAgIGhhbmRsZWQgPSBpbmZvLmxheWVyLnByb3BzLm9uQ2xpY2soaW5mbyk7YnJlYWs7XG4gICAgICAgIGNhc2UgJ2hvdmVyJzpcbiAgICAgICAgICBoYW5kbGVkID0gaW5mby5sYXllci5wcm9wcy5vbkhvdmVyKGluZm8pO2JyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBwaWNrIHR5cGUnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFoYW5kbGVkKSB7XG4gICAgICAgIHVuaGFuZGxlZFBpY2tJbmZvcy5wdXNoKGluZm8pO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IyID0gdHJ1ZTtcbiAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4pIHtcbiAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHVuaGFuZGxlZFBpY2tJbmZvcztcbn1cbi8qIGVzbGludC1lbmFibGUgbWF4LWRlcHRoLCBtYXgtc3RhdGVtZW50cyAqL1xuXG5mdW5jdGlvbiBjcmVhdGVJbmZvKF9yZWYzKSB7XG4gIHZhciBpbmZvID0gX3JlZjMuaW5mbyxcbiAgICAgIGxheWVyID0gX3JlZjMubGF5ZXIsXG4gICAgICBwaXhlbCA9IF9yZWYzLnBpeGVsLFxuICAgICAgZGV2aWNlUGl4ZWwgPSBfcmVmMy5kZXZpY2VQaXhlbCxcbiAgICAgIHBpeGVsUmF0aW8gPSBfcmVmMy5waXhlbFJhdGlvO1xuXG4gIC8vIEFzc2lnbiBhIG51bWJlciBvZiBwb3RlbnRpYWxseSB1c2VmdWwgcHJvcHMgdG8gdGhlIFwiaW5mb1wiIG9iamVjdFxuICByZXR1cm4ge1xuICAgIGxheWVyOiBsYXllcixcbiAgICBpbmRleDogLTEsXG4gICAgcGlja2VkOiBmYWxzZSxcbiAgICB4OiBwaXhlbFswXSxcbiAgICB5OiBwaXhlbFsxXSxcbiAgICBwaXhlbDogcGl4ZWwsXG4gICAgZGV2aWNlUGl4ZWw6IGRldmljZVBpeGVsLFxuICAgIHBpeGVsUmF0aW86IHBpeGVsUmF0aW8sXG4gICAgbG5nTGF0OiBsYXllci51bnByb2plY3QocGl4ZWwpXG4gIH07XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGliL2RyYXctYW5kLXBpY2suanNcbi8vIG1vZHVsZSBpZCA9IDU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 59 */
/* unknown exports provided */
/*!*************************!*\
  !*** ./src/lib/init.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__package_json__ = __webpack_require__(/*! ../../package.json */ 76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__package_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__package_json__);\n// Version detection\n\n\nvar STARTUP_MESSAGE = 'set deck.log.priority=2 to trace attribute updates';\n\n/* global console */\n/* eslint-disable no-console */\nconsole.log('deck.gl ' + __WEBPACK_IMPORTED_MODULE_0__package_json__[\"version\"] + ' - ' + STARTUP_MESSAGE);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2luaXQuanM/ZjhkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBWZXJzaW9uIGRldGVjdGlvblxuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbic7XG5cbnZhciBTVEFSVFVQX01FU1NBR0UgPSAnc2V0IGRlY2subG9nLnByaW9yaXR5PTIgdG8gdHJhY2UgYXR0cmlidXRlIHVwZGF0ZXMnO1xuXG4vKiBnbG9iYWwgY29uc29sZSAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuY29uc29sZS5sb2coJ2RlY2suZ2wgJyArIHZlcnNpb24gKyAnIC0gJyArIFNUQVJUVVBfTUVTU0FHRSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGliL2luaXQuanNcbi8vIG1vZHVsZSBpZCA9IDU5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 60 */
/* exports provided: default */
/* exports used: default */
/*!**********************************!*\
  !*** ./src/lib/layer-manager.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__layer__ = __webpack_require__(/*! ./layer */ 27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(/*! ./utils */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_assert__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__draw_and_pick__ = __webpack_require__(/*! ./draw-and-pick */ 58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__viewports__ = __webpack_require__(/*! ./viewports */ 15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_luma_gl__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// IMLEMENTATION NOTES: Why new layers are created on every render\n//\n// The key here is to understand the declarative / functional\n// programming nature of \"reactive\" applications.\n//\n// - In a reactive application, the entire \"UI tree\"\n//   is re-rendered every time something in the application changes.\n//\n// - The UI framework (such as React or deck.gl) then diffs the rendered\n//   tree of UI elements (React Elements or deck.gl Layers) against the\n//   previously tree and makes optimized changes (to the DOM or to WebGL state).\n//\n// - Deck.gl layers are not based on React.\n//   But it should be possible to wrap deck.gl layers in React components to\n//   enable use of JSX.\n//\n// The deck.gl model that for the app creates a new set of on layers on every\n// render.\n// Internally, the new layers are efficiently matched against existing layers\n// using layer ids.\n//\n// All calculated state (programs, attributes etc) are stored in a state object\n// and this state object is moved forward to the match layer on every render\n// cycle.  The new layer ends up with the state of the old layer (and the\n// props of the new layer), while the old layer is simply discarded for\n// garbage collecion.\n//\n/* eslint-disable no-try-catch */\n\n\n\n\n// import {Viewport} from 'viewport-mercator-project';\n\n\n\n\nvar LayerManager = function () {\n  function LayerManager(_ref) {\n    var gl = _ref.gl;\n\n    _classCallCheck(this, LayerManager);\n\n    this.prevLayers = [];\n    this.layers = [];\n    // Tracks if any layers were drawn last update\n    // Needed to ensure that screen is cleared when no layers are shown\n    this.screenCleared = false;\n    this.oldContext = {};\n    this.context = {\n      gl: gl,\n      uniforms: {},\n      viewport: null,\n      viewportChanged: true,\n      pickingFBO: null\n    };\n    Object.seal(this.context);\n  }\n\n  _createClass(LayerManager, [{\n    key: 'setViewport',\n    value: function setViewport(viewport) {\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(viewport instanceof __WEBPACK_IMPORTED_MODULE_4__viewports__[\"b\" /* Viewport */], 'Invalid viewport');\n\n      // TODO - viewport change detection breaks METER_OFFSETS mode\n      // const oldViewport = this.context.viewport;\n      // const viewportChanged = !oldViewport || !viewport.equals(oldViewport);\n\n      var viewportChanged = true;\n\n      if (viewportChanged) {\n        Object.assign(this.oldContext, this.context);\n        this.context.viewport = viewport;\n        this.context.viewportChanged = true;\n        this.context.uniforms = {};\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */])(4, viewport);\n      }\n\n      return this;\n    }\n  }, {\n    key: 'updateLayers',\n    value: function updateLayers(_ref2) {\n      var newLayers = _ref2.newLayers;\n\n      /* eslint-disable */\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(this.context.viewport, 'LayerManager.updateLayers: viewport not set');\n\n      // Filter out any null layers\n      newLayers = newLayers.filter(function (newLayer) {\n        return newLayer !== null;\n      });\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = newLayers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var layer = _step.value;\n\n          layer.context = this.context;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.prevLayers = this.layers;\n\n      var _updateLayers2 = this._updateLayers({\n        oldLayers: this.prevLayers,\n        newLayers: newLayers\n      }),\n          error = _updateLayers2.error,\n          generatedLayers = _updateLayers2.generatedLayers;\n\n      this.layers = generatedLayers;\n      // Throw first error found, if any\n      if (error) {\n        throw error;\n      }\n      return this;\n    }\n  }, {\n    key: 'drawLayers',\n    value: function drawLayers(_ref3) {\n      var pass = _ref3.pass;\n\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(this.context.viewport, 'LayerManager.drawLayers: viewport not set');\n\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__draw_and_pick__[\"a\" /* drawLayers */])({ layers: this.layers, pass: pass });\n\n      return this;\n    }\n  }, {\n    key: 'pickLayer',\n    value: function pickLayer(_ref4) {\n      var x = _ref4.x,\n          y = _ref4.y,\n          mode = _ref4.mode;\n      var _context = this.context,\n          gl = _context.gl,\n          uniforms = _context.uniforms;\n\n      // Set up a frame buffer if needed\n\n      if (this.context.pickingFBO === null || gl.canvas.width !== this.context.pickingFBO.width || gl.canvas.height !== this.context.pickingFBO.height) {\n        this.context.pickingFBO = new __WEBPACK_IMPORTED_MODULE_5_luma_gl__[\"FramebufferObject\"](gl, {\n          width: gl.canvas.width,\n          height: gl.canvas.height\n        });\n      }\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__draw_and_pick__[\"b\" /* pickLayers */])(gl, {\n        x: x,\n        y: y,\n        uniforms: {\n          renderPickingBuffer: true,\n          picking_uEnable: true\n        },\n        layers: this.layers,\n        mode: mode,\n        pickingFBO: this.context.pickingFBO\n      });\n    }\n  }, {\n    key: 'needsRedraw',\n    value: function needsRedraw() {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$clearRedrawFlag = _ref5.clearRedrawFlags,\n          clearRedrawFlags = _ref5$clearRedrawFlag === undefined ? false : _ref5$clearRedrawFlag;\n\n      if (!this.context.viewport) {\n        return false;\n      }\n\n      var redraw = false;\n\n      // Make sure that buffer is cleared once when layer list becomes empty\n      if (this.layers.length === 0) {\n        if (this.screenCleared === false) {\n          redraw = true;\n          this.screenCleared = true;\n          return true;\n        }\n      } else {\n        if (this.screenCleared === true) {\n          this.screenCleared = false;\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.layers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var layer = _step2.value;\n\n          redraw = redraw || layer.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return redraw;\n    }\n\n    // PRIVATE METHODS\n\n    // Match all layers, checking for caught errors\n    // To avoid having an exception in one layer disrupt other layers\n\n  }, {\n    key: '_updateLayers',\n    value: function _updateLayers(_ref6) {\n      var oldLayers = _ref6.oldLayers,\n          newLayers = _ref6.newLayers;\n\n      // Create old layer map\n      var oldLayerMap = {};\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = oldLayers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var oldLayer = _step3.value;\n\n          if (oldLayerMap[oldLayer.id]) {\n            __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].once(0, 'Multipe old layers with same id ' + layerName(oldLayer));\n          } else {\n            oldLayerMap[oldLayer.id] = oldLayer;\n          }\n        }\n\n        // Allocate array for generated layers\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var generatedLayers = [];\n\n      // Match sublayers\n      var error = this._matchSublayers({\n        newLayers: newLayers, oldLayerMap: oldLayerMap, generatedLayers: generatedLayers\n      });\n\n      var error2 = this._finalizeOldLayers(oldLayers);\n      var firstError = error || error2;\n      return { error: firstError, generatedLayers: generatedLayers };\n    }\n\n    /* eslint-disable max-statements */\n\n  }, {\n    key: '_matchSublayers',\n    value: function _matchSublayers(_ref7) {\n      var newLayers = _ref7.newLayers,\n          oldLayerMap = _ref7.oldLayerMap,\n          generatedLayers = _ref7.generatedLayers;\n\n      // Filter out any null layers\n      newLayers = newLayers.filter(function (newLayer) {\n        return newLayer !== null;\n      });\n\n      var error = null;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = newLayers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var newLayer = _step4.value;\n\n          newLayer.context = this.context;\n\n          try {\n            // 1. given a new coming layer, find its matching layer\n            var oldLayer = oldLayerMap[newLayer.id];\n            oldLayerMap[newLayer.id] = null;\n\n            if (oldLayer === null) {\n              __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].once(0, 'Multipe new layers with same id ' + layerName(newLayer));\n            }\n\n            // Only transfer state at this stage. We must not generate exceptions\n            // until all layers' state have been transferred\n            if (oldLayer) {\n              __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */])(3, 'matched ' + layerName(newLayer), oldLayer, '=>', newLayer);\n              this._transferLayerState(oldLayer, newLayer);\n              this._updateLayer(newLayer);\n            } else {\n              this._initializeNewLayer(newLayer);\n            }\n            generatedLayers.push(newLayer);\n\n            // Call layer lifecycle method: render sublayers\n            var sublayers = newLayer.renderLayers();\n            // End layer lifecycle method: render sublayers\n\n            if (sublayers) {\n              sublayers = Array.isArray(sublayers) ? sublayers : [sublayers];\n              this._matchSublayers({\n                newLayers: sublayers,\n                oldLayerMap: oldLayerMap,\n                generatedLayers: generatedLayers\n              });\n            }\n          } catch (err) {\n            __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].once(0, 'deck.gl error during matching of ' + layerName(newLayer) + ' ' + err, err);\n            // Save first error\n            error = error || err;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return error;\n    }\n  }, {\n    key: '_transferLayerState',\n    value: function _transferLayerState(oldLayer, newLayer) {\n      var state = oldLayer.state,\n          props = oldLayer.props;\n\n      // sanity check\n\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(state, 'deck.gl sanity check - Matching layer has no state');\n      __WEBPACK_IMPORTED_MODULE_2_assert___default()(oldLayer !== newLayer, 'deck.gl sanity check - Matching layer is same');\n\n      // Move state\n      newLayer.state = state;\n      state.layer = newLayer;\n\n      // Update model layer reference\n      if (state.model) {\n        state.model.userData.layer = newLayer;\n      }\n      // Keep a temporary ref to the old props, for prop comparison\n      newLayer.oldProps = props;\n      oldLayer.state = null;\n    }\n\n    // Update the old layers that were not matched\n\n  }, {\n    key: '_finalizeOldLayers',\n    value: function _finalizeOldLayers(oldLayers) {\n      var error = null;\n      // Unmatched layers still have state, it will be discarded\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = oldLayers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var layer = _step5.value;\n\n          if (layer.state) {\n            error = error || this._finalizeLayer(layer);\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return error;\n    }\n\n    // Initializes a single layer, calling layer methods\n\n  }, {\n    key: '_initializeNewLayer',\n    value: function _initializeNewLayer(layer) {\n      var error = null;\n      // Check if new layer, and initialize it's state\n      if (!layer.state) {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */])(1, 'initializing ' + layerName(layer));\n        try {\n          layer.initializeLayer({\n            oldProps: {},\n            props: layer.props,\n            oldContext: this.oldContext,\n            context: this.context,\n            changeFlags: layer.diffProps({}, layer.props, this.context)\n          });\n        } catch (err) {\n          __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].once(0, 'deck.gl error during initialization of ' + layerName(layer) + ' ' + err, err);\n          // Save first error\n          error = error || err;\n        }\n        // Set back pointer (used in picking)\n        if (layer.state) {\n          layer.state.layer = layer;\n          // Save layer on model for picking purposes\n          // TODO - store on model.userData rather than directly on model\n        }\n        if (layer.state && layer.state.model) {\n          layer.state.model.userData.layer = layer;\n        }\n      }\n      return error;\n    }\n\n    // Updates a single layer, calling layer methods\n\n  }, {\n    key: '_updateLayer',\n    value: function _updateLayer(layer) {\n      var oldProps = layer.oldProps,\n          props = layer.props;\n\n      var error = null;\n      if (oldProps) {\n        try {\n          layer.updateLayer({\n            oldProps: oldProps,\n            props: props,\n            context: this.context,\n            oldContext: this.oldContext,\n            changeFlags: layer.diffProps(oldProps, layer.props, this.context)\n          });\n        } catch (err) {\n          __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].once(0, 'deck.gl error during update of ' + layerName(layer), err);\n          // Save first error\n          error = err;\n        }\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */])(2, 'updating ' + layerName(layer));\n      }\n      return error;\n    }\n\n    // Finalizes a single layer\n\n  }, {\n    key: '_finalizeLayer',\n    value: function _finalizeLayer(layer) {\n      var error = null;\n      var state = layer.state;\n\n      if (state) {\n        try {\n          layer.finalizeLayer();\n        } catch (err) {\n          __WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */].once(0, 'deck.gl error during finalization of ' + layerName(layer), err);\n          // Save first error\n          error = err;\n        }\n        layer.state = null;\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* log */])(1, 'finalizing ' + layerName(layer));\n      }\n      return error;\n    }\n  }]);\n\n  return LayerManager;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = LayerManager;\n\n\nfunction layerName(layer) {\n  if (layer instanceof __WEBPACK_IMPORTED_MODULE_0__layer__[\"a\" /* default */]) {\n    return '' + layer;\n  }\n  return !layer ? 'null layer' : 'invalid layer';\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 61 */
/* exports provided: parseColor, parseHexColor, setOpacity, applyOpacity */
/*!********************************!*\
  !*** ./src/lib/utils/color.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export parseColor */\n/* unused harmony export parseHexColor */\n/* unused harmony export setOpacity */\n/* unused harmony export applyOpacity */\n\n// Parse array or string color\nfunction parseColor(color) {\n  if (Array.isArray(color)) {\n    if (color.length === 3) {\n      return [color[0], color[1], color[2], 255];\n    }\n    return color;\n  }\n  if (typeof color === 'string') {\n    return parseHexColor(color);\n  }\n  return null;\n}\n\n// Parse a hex color\nfunction parseHexColor(color) {\n  var array = new Uint8ClampedArray(4);\n  if (color.length === 7) {\n    var value = parseInt(color.substring(1), 16);\n    array[0] = value / 65536;\n    array[1] = value / 256 % 256;\n    array[2] = value % 256;\n    array[3] = 255;\n  } else if (color.length === 9) {\n    var _value = parseInt(color.substring(1), 16);\n    array[0] = _value / 16777216;\n    array[1] = _value / 65536 % 256;\n    array[2] = _value / 256 % 256;\n    array[3] = _value % 256;\n  }\n  return array;\n}\n\nfunction setOpacity(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;\n\n  return [color[0], color[1], color[2], opacity];\n}\n\nfunction applyOpacity(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;\n\n  return [color[0], color[1], color[2], opacity];\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3V0aWxzL2NvbG9yLmpzP2NiZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBQYXJzZSBhcnJheSBvciBzdHJpbmcgY29sb3JcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbG9yKGNvbG9yKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNvbG9yKSkge1xuICAgIGlmIChjb2xvci5sZW5ndGggPT09IDMpIHtcbiAgICAgIHJldHVybiBbY29sb3JbMF0sIGNvbG9yWzFdLCBjb2xvclsyXSwgMjU1XTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG4gIGlmICh0eXBlb2YgY29sb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHBhcnNlSGV4Q29sb3IoY29sb3IpO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG4vLyBQYXJzZSBhIGhleCBjb2xvclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSGV4Q29sb3IoY29sb3IpIHtcbiAgdmFyIGFycmF5ID0gbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDQpO1xuICBpZiAoY29sb3IubGVuZ3RoID09PSA3KSB7XG4gICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoY29sb3Iuc3Vic3RyaW5nKDEpLCAxNik7XG4gICAgYXJyYXlbMF0gPSB2YWx1ZSAvIDY1NTM2O1xuICAgIGFycmF5WzFdID0gdmFsdWUgLyAyNTYgJSAyNTY7XG4gICAgYXJyYXlbMl0gPSB2YWx1ZSAlIDI1NjtcbiAgICBhcnJheVszXSA9IDI1NTtcbiAgfSBlbHNlIGlmIChjb2xvci5sZW5ndGggPT09IDkpIHtcbiAgICB2YXIgX3ZhbHVlID0gcGFyc2VJbnQoY29sb3Iuc3Vic3RyaW5nKDEpLCAxNik7XG4gICAgYXJyYXlbMF0gPSBfdmFsdWUgLyAxNjc3NzIxNjtcbiAgICBhcnJheVsxXSA9IF92YWx1ZSAvIDY1NTM2ICUgMjU2O1xuICAgIGFycmF5WzJdID0gX3ZhbHVlIC8gMjU2ICUgMjU2O1xuICAgIGFycmF5WzNdID0gX3ZhbHVlICUgMjU2O1xuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldE9wYWNpdHkoY29sb3IpIHtcbiAgdmFyIG9wYWNpdHkgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDEyNztcblxuICByZXR1cm4gW2NvbG9yWzBdLCBjb2xvclsxXSwgY29sb3JbMl0sIG9wYWNpdHldO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlPcGFjaXR5KGNvbG9yKSB7XG4gIHZhciBvcGFjaXR5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAxMjc7XG5cbiAgcmV0dXJuIFtjb2xvclswXSwgY29sb3JbMV0sIGNvbG9yWzJdLCBvcGFjaXR5XTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9saWIvdXRpbHMvY29sb3IuanNcbi8vIG1vZHVsZSBpZCA9IDYxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 62 */
/* exports provided: compareArrays, checkArray */
/*!*****************************************!*\
  !*** ./src/lib/utils/compare-arrays.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export compareArrays */\n/* unused harmony export checkArray */\nfunction compareArrays(array1, array2) {\n\n  var length = Math.min(array1.length, array2.length);\n  for (var i = 0; i < length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return \"Arrays are different in element \" + i + \": \" + array1[i] + \" vs \" + array2[i];\n    }\n  }\n\n  if (array1.length !== array2.length) {\n    return \"Arrays have different length \" + array1.length + \" vs \" + array2.length;\n  }\n\n  return null;\n}\n\nfunction checkArray(array) {\n  for (var i = 0; i < array.length; ++i) {\n    if (!Number.isFinite(array[i])) {\n      throw new Error(\"Array has invalid element \" + i + \": \" + array[i]);\n    }\n  }\n  return null;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3V0aWxzL2NvbXBhcmUtYXJyYXlzLmpzP2NiYWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVBcnJheXMoYXJyYXkxLCBhcnJheTIpIHtcblxuICB2YXIgbGVuZ3RoID0gTWF0aC5taW4oYXJyYXkxLmxlbmd0aCwgYXJyYXkyLmxlbmd0aCk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoYXJyYXkxW2ldICE9PSBhcnJheTJbaV0pIHtcbiAgICAgIHJldHVybiBcIkFycmF5cyBhcmUgZGlmZmVyZW50IGluIGVsZW1lbnQgXCIgKyBpICsgXCI6IFwiICsgYXJyYXkxW2ldICsgXCIgdnMgXCIgKyBhcnJheTJbaV07XG4gICAgfVxuICB9XG5cbiAgaWYgKGFycmF5MS5sZW5ndGggIT09IGFycmF5Mi5sZW5ndGgpIHtcbiAgICByZXR1cm4gXCJBcnJheXMgaGF2ZSBkaWZmZXJlbnQgbGVuZ3RoIFwiICsgYXJyYXkxLmxlbmd0aCArIFwiIHZzIFwiICsgYXJyYXkyLmxlbmd0aDtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tBcnJheShhcnJheSkge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUoYXJyYXlbaV0pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBcnJheSBoYXMgaW52YWxpZCBlbGVtZW50IFwiICsgaSArIFwiOiBcIiArIGFycmF5W2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGliL3V0aWxzL2NvbXBhcmUtYXJyYXlzLmpzXG4vLyBtb2R1bGUgaWQgPSA2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 63 */
/* exports provided: compareProps, areEqualShallow */
/* exports used: compareProps */
/*!******************************************!*\
  !*** ./src/lib/utils/compare-objects.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_assert__);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = compareProps;\n/* unused harmony export areEqualShallow */\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * @param {Object} opt.oldProps - object with old key/value pairs\n * @param {Object} opt.newProps - object with new key/value pairs\n * @param {Object} opt.ignoreProps={} - object, keys that should not be compared\n * @returns {null|String} - null when values of all keys are strictly equal.\n *   if unequal, returns a string explaining what changed.\n */\n/* eslint-disable max-statements, complexity */\nfunction compareProps() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      oldProps = _ref.oldProps,\n      newProps = _ref.newProps,\n      _ref$ignoreProps = _ref.ignoreProps,\n      ignoreProps = _ref$ignoreProps === undefined ? {} : _ref$ignoreProps;\n\n  __WEBPACK_IMPORTED_MODULE_0_assert___default()(oldProps !== undefined && newProps !== undefined, 'compareProps args');\n\n  if (oldProps === newProps) {\n    return null;\n  }\n\n  if ((typeof oldProps === 'undefined' ? 'undefined' : _typeof(oldProps)) !== 'object' || oldProps === null) {\n    return 'old props is not an object';\n  }\n  if ((typeof newProps === 'undefined' ? 'undefined' : _typeof(newProps)) !== 'object' || newProps === null) {\n    return 'new props is not an object';\n  }\n\n  // Test if new props different from old props\n  for (var key in oldProps) {\n    if (!(key in ignoreProps)) {\n      if (!newProps.hasOwnProperty(key)) {\n        return 'prop ' + key + ' dropped: ' + oldProps[key] + ' -> (undefined)';\n      } else if (oldProps[key] !== newProps[key]) {\n        return 'prop ' + key + ' changed: ' + oldProps[key] + ' -> ' + newProps[key];\n      }\n    }\n  }\n\n  // Test if any new props have been added\n  for (var _key in newProps) {\n    if (!(_key in ignoreProps)) {\n      if (!oldProps.hasOwnProperty(_key)) {\n        return 'prop ' + _key + ' added: (undefined) -> ' + newProps[_key];\n      }\n    }\n  }\n\n  return null;\n}\n/* eslint-enable max-statements, complexity */\n\n// Shallow compare\n/* eslint-disable complexity */\nfunction areEqualShallow(a, b) {\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$ignore = _ref2.ignore,\n      ignore = _ref2$ignore === undefined ? {} : _ref2$ignore;\n\n  if (a === b) {\n    return true;\n  }\n\n  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== 'object' || a === null || (typeof b === 'undefined' ? 'undefined' : _typeof(b)) !== 'object' || b === null) {\n    return false;\n  }\n\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (!(key in ignore) && (!(key in b) || a[key] !== b[key])) {\n      return false;\n    }\n  }\n  for (var _key2 in b) {\n    if (!(_key2 in ignore) && !(_key2 in a)) {\n      return false;\n    }\n  }\n  return true;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3V0aWxzL2NvbXBhcmUtb2JqZWN0cy5qcz8yODM2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdC5vbGRQcm9wcyAtIG9iamVjdCB3aXRoIG9sZCBrZXkvdmFsdWUgcGFpcnNcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHQubmV3UHJvcHMgLSBvYmplY3Qgd2l0aCBuZXcga2V5L3ZhbHVlIHBhaXJzXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0Lmlnbm9yZVByb3BzPXt9IC0gb2JqZWN0LCBrZXlzIHRoYXQgc2hvdWxkIG5vdCBiZSBjb21wYXJlZFxuICogQHJldHVybnMge251bGx8U3RyaW5nfSAtIG51bGwgd2hlbiB2YWx1ZXMgb2YgYWxsIGtleXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuICogICBpZiB1bmVxdWFsLCByZXR1cm5zIGEgc3RyaW5nIGV4cGxhaW5pbmcgd2hhdCBjaGFuZ2VkLlxuICovXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtc3RhdGVtZW50cywgY29tcGxleGl0eSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVQcm9wcygpIHtcbiAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LFxuICAgICAgb2xkUHJvcHMgPSBfcmVmLm9sZFByb3BzLFxuICAgICAgbmV3UHJvcHMgPSBfcmVmLm5ld1Byb3BzLFxuICAgICAgX3JlZiRpZ25vcmVQcm9wcyA9IF9yZWYuaWdub3JlUHJvcHMsXG4gICAgICBpZ25vcmVQcm9wcyA9IF9yZWYkaWdub3JlUHJvcHMgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZiRpZ25vcmVQcm9wcztcblxuICBhc3NlcnQob2xkUHJvcHMgIT09IHVuZGVmaW5lZCAmJiBuZXdQcm9wcyAhPT0gdW5kZWZpbmVkLCAnY29tcGFyZVByb3BzIGFyZ3MnKTtcblxuICBpZiAob2xkUHJvcHMgPT09IG5ld1Byb3BzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBpZiAoKHR5cGVvZiBvbGRQcm9wcyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2Yob2xkUHJvcHMpKSAhPT0gJ29iamVjdCcgfHwgb2xkUHJvcHMgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ29sZCBwcm9wcyBpcyBub3QgYW4gb2JqZWN0JztcbiAgfVxuICBpZiAoKHR5cGVvZiBuZXdQcm9wcyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YobmV3UHJvcHMpKSAhPT0gJ29iamVjdCcgfHwgbmV3UHJvcHMgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ25ldyBwcm9wcyBpcyBub3QgYW4gb2JqZWN0JztcbiAgfVxuXG4gIC8vIFRlc3QgaWYgbmV3IHByb3BzIGRpZmZlcmVudCBmcm9tIG9sZCBwcm9wc1xuICBmb3IgKHZhciBrZXkgaW4gb2xkUHJvcHMpIHtcbiAgICBpZiAoIShrZXkgaW4gaWdub3JlUHJvcHMpKSB7XG4gICAgICBpZiAoIW5ld1Byb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgcmV0dXJuICdwcm9wICcgKyBrZXkgKyAnIGRyb3BwZWQ6ICcgKyBvbGRQcm9wc1trZXldICsgJyAtPiAodW5kZWZpbmVkKSc7XG4gICAgICB9IGVsc2UgaWYgKG9sZFByb3BzW2tleV0gIT09IG5ld1Byb3BzW2tleV0pIHtcbiAgICAgICAgcmV0dXJuICdwcm9wICcgKyBrZXkgKyAnIGNoYW5nZWQ6ICcgKyBvbGRQcm9wc1trZXldICsgJyAtPiAnICsgbmV3UHJvcHNba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBUZXN0IGlmIGFueSBuZXcgcHJvcHMgaGF2ZSBiZWVuIGFkZGVkXG4gIGZvciAodmFyIF9rZXkgaW4gbmV3UHJvcHMpIHtcbiAgICBpZiAoIShfa2V5IGluIGlnbm9yZVByb3BzKSkge1xuICAgICAgaWYgKCFvbGRQcm9wcy5oYXNPd25Qcm9wZXJ0eShfa2V5KSkge1xuICAgICAgICByZXR1cm4gJ3Byb3AgJyArIF9rZXkgKyAnIGFkZGVkOiAodW5kZWZpbmVkKSAtPiAnICsgbmV3UHJvcHNbX2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4vKiBlc2xpbnQtZW5hYmxlIG1heC1zdGF0ZW1lbnRzLCBjb21wbGV4aXR5ICovXG5cbi8vIFNoYWxsb3cgY29tcGFyZVxuLyogZXNsaW50LWRpc2FibGUgY29tcGxleGl0eSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFyZUVxdWFsU2hhbGxvdyhhLCBiKSB7XG4gIHZhciBfcmVmMiA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge30sXG4gICAgICBfcmVmMiRpZ25vcmUgPSBfcmVmMi5pZ25vcmUsXG4gICAgICBpZ25vcmUgPSBfcmVmMiRpZ25vcmUgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZjIkaWdub3JlO1xuXG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoKHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKSkgIT09ICdvYmplY3QnIHx8IGEgPT09IG51bGwgfHwgKHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKSkgIT09ICdvYmplY3QnIHx8IGIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoT2JqZWN0LmtleXMoYSkubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhiKS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKHZhciBrZXkgaW4gYSkge1xuICAgIGlmICghKGtleSBpbiBpZ25vcmUpICYmICghKGtleSBpbiBiKSB8fCBhW2tleV0gIT09IGJba2V5XSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZm9yICh2YXIgX2tleTIgaW4gYikge1xuICAgIGlmICghKF9rZXkyIGluIGlnbm9yZSkgJiYgIShfa2V5MiBpbiBhKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9saWIvdXRpbHMvY29tcGFyZS1vYmplY3RzLmpzXG4vLyBtb2R1bGUgaWQgPSA2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 64 */
/* exports provided: flatten, countVertices, flattenVertices, fillArray */
/* exports used: flatten, flattenVertices, fillArray */
/*!**********************************!*\
  !*** ./src/lib/utils/flatten.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = flatten;\n/* unused harmony export countVertices */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = flattenVertices;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = fillArray;\n/**\n * Flattens a nested array into a single level array\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @param {Array} array The array to flatten.\n * @return {Array} Returns the new flattened array.\n */\nfunction flatten(array) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var index = -1;\n  while (++index < array.length) {\n    var value = array[index];\n    if (Array.isArray(value)) {\n      flatten(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nfunction countVertices(nestedArray) {\n  var count = 0;\n  var index = -1;\n  while (++index < nestedArray.length) {\n    var value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      count += countVertices(value);\n    } else {\n      count++;\n    }\n  }\n  return count;\n}\n\n// Flattens nested array of vertices, padding third coordinate as needed\nfunction flattenVertices(nestedArray) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$result = _ref.result,\n      result = _ref$result === undefined ? [] : _ref$result,\n      _ref$dimensions = _ref.dimensions,\n      dimensions = _ref$dimensions === undefined ? 3 : _ref$dimensions;\n\n  var index = -1;\n  var vertexLength = 0;\n  while (++index < nestedArray.length) {\n    var value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      flattenVertices(value, { result: result, dimensions: dimensions });\n    } else {\n      if (vertexLength < dimensions) {\n        // eslint-disable-line\n        result.push(value);\n        vertexLength++;\n      }\n    }\n  }\n  // Add a third coordinate if needed\n  if (vertexLength > 0 && vertexLength < dimensions) {\n    result.push(0);\n  }\n  return result;\n}\n\n// Uses copyWithin to significantly speed up typed array value filling\nfunction fillArray(_ref2) {\n  var target = _ref2.target,\n      source = _ref2.source,\n      _ref2$start = _ref2.start,\n      start = _ref2$start === undefined ? 0 : _ref2$start,\n      _ref2$count = _ref2.count,\n      count = _ref2$count === undefined ? 1 : _ref2$count;\n\n  var total = count * source.length;\n  var copied = 0;\n  for (var i = 0; i < source.length; ++i) {\n    target[start + copied++] = source[i];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n\n// Flattens nested array of vertices, padding third coordinate as needed\n/*\nexport function flattenTypedVertices(nestedArray, {\n  result = [],\n  Type = Float32Array,\n  start = 0,\n  dimensions = 3\n} = {}) {\n  let index = -1;\n  let vertexLength = 0;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      start = flattenTypedVertices(value, {result, start, dimensions});\n    } else {\n      if (vertexLength < dimensions) { // eslint-disable-line\n        result[start++] = value;\n        vertexLength++;\n      }\n    }\n  }\n  // Add a third coordinate if needed\n  if (vertexLength > 0 && vertexLength < dimensions) {\n    result[start++] = 0;\n  }\n  return start;\n}\n*///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3V0aWxzL2ZsYXR0ZW4uanM/MzQxMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZsYXR0ZW5zIGEgbmVzdGVkIGFycmF5IGludG8gYSBzaW5nbGUgbGV2ZWwgYXJyYXlcbiAqIEBleGFtcGxlIGZsYXR0ZW4oW1sxLCBbMl1dLCBbM10sIDRdKSA9PiBbMSwgMiwgMywgNF1cbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBmbGF0dGVuLlxuICogQHJldHVybiB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmbGF0dGVuZWQgYXJyYXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuKGFycmF5KSB7XG4gIHZhciByZXN1bHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdO1xuXG4gIHZhciBpbmRleCA9IC0xO1xuICB3aGlsZSAoKytpbmRleCA8IGFycmF5Lmxlbmd0aCkge1xuICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZsYXR0ZW4odmFsdWUsIHJlc3VsdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvdW50VmVydGljZXMobmVzdGVkQXJyYXkpIHtcbiAgdmFyIGNvdW50ID0gMDtcbiAgdmFyIGluZGV4ID0gLTE7XG4gIHdoaWxlICgrK2luZGV4IDwgbmVzdGVkQXJyYXkubGVuZ3RoKSB7XG4gICAgdmFyIHZhbHVlID0gbmVzdGVkQXJyYXlbaW5kZXhdO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsdWUpKSB7XG4gICAgICBjb3VudCArPSBjb3VudFZlcnRpY2VzKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY291bnQrKztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNvdW50O1xufVxuXG4vLyBGbGF0dGVucyBuZXN0ZWQgYXJyYXkgb2YgdmVydGljZXMsIHBhZGRpbmcgdGhpcmQgY29vcmRpbmF0ZSBhcyBuZWVkZWRcbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuVmVydGljZXMobmVzdGVkQXJyYXkpIHtcbiAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LFxuICAgICAgX3JlZiRyZXN1bHQgPSBfcmVmLnJlc3VsdCxcbiAgICAgIHJlc3VsdCA9IF9yZWYkcmVzdWx0ID09PSB1bmRlZmluZWQgPyBbXSA6IF9yZWYkcmVzdWx0LFxuICAgICAgX3JlZiRkaW1lbnNpb25zID0gX3JlZi5kaW1lbnNpb25zLFxuICAgICAgZGltZW5zaW9ucyA9IF9yZWYkZGltZW5zaW9ucyA9PT0gdW5kZWZpbmVkID8gMyA6IF9yZWYkZGltZW5zaW9ucztcblxuICB2YXIgaW5kZXggPSAtMTtcbiAgdmFyIHZlcnRleExlbmd0aCA9IDA7XG4gIHdoaWxlICgrK2luZGV4IDwgbmVzdGVkQXJyYXkubGVuZ3RoKSB7XG4gICAgdmFyIHZhbHVlID0gbmVzdGVkQXJyYXlbaW5kZXhdO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsdWUpKSB7XG4gICAgICBmbGF0dGVuVmVydGljZXModmFsdWUsIHsgcmVzdWx0OiByZXN1bHQsIGRpbWVuc2lvbnM6IGRpbWVuc2lvbnMgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh2ZXJ0ZXhMZW5ndGggPCBkaW1lbnNpb25zKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgICAgICB2ZXJ0ZXhMZW5ndGgrKztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLy8gQWRkIGEgdGhpcmQgY29vcmRpbmF0ZSBpZiBuZWVkZWRcbiAgaWYgKHZlcnRleExlbmd0aCA+IDAgJiYgdmVydGV4TGVuZ3RoIDwgZGltZW5zaW9ucykge1xuICAgIHJlc3VsdC5wdXNoKDApO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8vIFVzZXMgY29weVdpdGhpbiB0byBzaWduaWZpY2FudGx5IHNwZWVkIHVwIHR5cGVkIGFycmF5IHZhbHVlIGZpbGxpbmdcbmV4cG9ydCBmdW5jdGlvbiBmaWxsQXJyYXkoX3JlZjIpIHtcbiAgdmFyIHRhcmdldCA9IF9yZWYyLnRhcmdldCxcbiAgICAgIHNvdXJjZSA9IF9yZWYyLnNvdXJjZSxcbiAgICAgIF9yZWYyJHN0YXJ0ID0gX3JlZjIuc3RhcnQsXG4gICAgICBzdGFydCA9IF9yZWYyJHN0YXJ0ID09PSB1bmRlZmluZWQgPyAwIDogX3JlZjIkc3RhcnQsXG4gICAgICBfcmVmMiRjb3VudCA9IF9yZWYyLmNvdW50LFxuICAgICAgY291bnQgPSBfcmVmMiRjb3VudCA9PT0gdW5kZWZpbmVkID8gMSA6IF9yZWYyJGNvdW50O1xuXG4gIHZhciB0b3RhbCA9IGNvdW50ICogc291cmNlLmxlbmd0aDtcbiAgdmFyIGNvcGllZCA9IDA7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc291cmNlLmxlbmd0aDsgKytpKSB7XG4gICAgdGFyZ2V0W3N0YXJ0ICsgY29waWVkKytdID0gc291cmNlW2ldO1xuICB9XG5cbiAgd2hpbGUgKGNvcGllZCA8IHRvdGFsKSB7XG4gICAgLy8gSWYgd2UgaGF2ZSBjb3BpZWQgbGVzcyB0aGFuIGhhbGYsIGNvcHkgZXZlcnl0aGluZyB3ZSBnb3RcbiAgICAvLyBlbHNlIGNvcHkgcmVtYWluaW5nIGluIG9uZSBvcGVyYXRpb25cbiAgICBpZiAoY29waWVkIDwgdG90YWwgLSBjb3BpZWQpIHtcbiAgICAgIHRhcmdldC5jb3B5V2l0aGluKHN0YXJ0ICsgY29waWVkLCBzdGFydCwgc3RhcnQgKyBjb3BpZWQpO1xuICAgICAgY29waWVkICo9IDI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhcmdldC5jb3B5V2l0aGluKHN0YXJ0ICsgY29waWVkLCBzdGFydCwgc3RhcnQgKyB0b3RhbCAtIGNvcGllZCk7XG4gICAgICBjb3BpZWQgPSB0b3RhbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG4vLyBGbGF0dGVucyBuZXN0ZWQgYXJyYXkgb2YgdmVydGljZXMsIHBhZGRpbmcgdGhpcmQgY29vcmRpbmF0ZSBhcyBuZWVkZWRcbi8qXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlblR5cGVkVmVydGljZXMobmVzdGVkQXJyYXksIHtcbiAgcmVzdWx0ID0gW10sXG4gIFR5cGUgPSBGbG9hdDMyQXJyYXksXG4gIHN0YXJ0ID0gMCxcbiAgZGltZW5zaW9ucyA9IDNcbn0gPSB7fSkge1xuICBsZXQgaW5kZXggPSAtMTtcbiAgbGV0IHZlcnRleExlbmd0aCA9IDA7XG4gIHdoaWxlICgrK2luZGV4IDwgbmVzdGVkQXJyYXkubGVuZ3RoKSB7XG4gICAgY29uc3QgdmFsdWUgPSBuZXN0ZWRBcnJheVtpbmRleF07XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpIHx8IEFycmF5QnVmZmVyLmlzVmlldyh2YWx1ZSkpIHtcbiAgICAgIHN0YXJ0ID0gZmxhdHRlblR5cGVkVmVydGljZXModmFsdWUsIHtyZXN1bHQsIHN0YXJ0LCBkaW1lbnNpb25zfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh2ZXJ0ZXhMZW5ndGggPCBkaW1lbnNpb25zKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgcmVzdWx0W3N0YXJ0KytdID0gdmFsdWU7XG4gICAgICAgIHZlcnRleExlbmd0aCsrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBBZGQgYSB0aGlyZCBjb29yZGluYXRlIGlmIG5lZWRlZFxuICBpZiAodmVydGV4TGVuZ3RoID4gMCAmJiB2ZXJ0ZXhMZW5ndGggPCBkaW1lbnNpb25zKSB7XG4gICAgcmVzdWx0W3N0YXJ0KytdID0gMDtcbiAgfVxuICByZXR1cm4gc3RhcnQ7XG59XG4qL1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi91dGlscy9mbGF0dGVuLmpzXG4vLyBtb2R1bGUgaWQgPSA2NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 65 */
/* exports provided: default */
/* exports used: default */
/*!******************************!*\
  !*** ./src/lib/utils/log.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_assert__);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = log;\n/* eslint-disable no-console */\n/* global console, window */\n\n\nfunction log(priority) {\n  __WEBPACK_IMPORTED_MODULE_0_assert___default()(Number.isFinite(priority), 'log priority must be a number');\n  if (priority <= log.priority) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // Node doesn't have console.debug, but looks better in browser consoles\n    if (console.debug) {\n      var _console;\n\n      (_console = console).debug.apply(_console, args);\n    } else {\n      var _console2;\n\n      (_console2 = console).info.apply(_console2, args);\n    }\n  }\n}\n\nvar cache = {};\n\nfunction once(priority, arg) {\n  if (!cache[arg] && priority <= log.priority) {\n    var _console3;\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    (_console3 = console).warn.apply(_console3, [arg].concat(args));\n    cache[arg] = true;\n  }\n}\n\nlog.priority = 0;\nlog.log = log;\nlog.once = once;\n\n// Expose to browser\nif (typeof window !== 'undefined') {\n  window.deck = window.deck || { log: log };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3V0aWxzL2xvZy5qcz9iNzFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbi8qIGdsb2JhbCBjb25zb2xlLCB3aW5kb3cgKi9cbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9nKHByaW9yaXR5KSB7XG4gIGFzc2VydChOdW1iZXIuaXNGaW5pdGUocHJpb3JpdHkpLCAnbG9nIHByaW9yaXR5IG11c3QgYmUgYSBudW1iZXInKTtcbiAgaWYgKHByaW9yaXR5IDw9IGxvZy5wcmlvcml0eSkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgLy8gTm9kZSBkb2Vzbid0IGhhdmUgY29uc29sZS5kZWJ1ZywgYnV0IGxvb2tzIGJldHRlciBpbiBicm93c2VyIGNvbnNvbGVzXG4gICAgaWYgKGNvbnNvbGUuZGVidWcpIHtcbiAgICAgIHZhciBfY29uc29sZTtcblxuICAgICAgKF9jb25zb2xlID0gY29uc29sZSkuZGVidWcuYXBwbHkoX2NvbnNvbGUsIGFyZ3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX2NvbnNvbGUyO1xuXG4gICAgICAoX2NvbnNvbGUyID0gY29uc29sZSkuaW5mby5hcHBseShfY29uc29sZTIsIGFyZ3MpO1xuICAgIH1cbiAgfVxufVxuXG52YXIgY2FjaGUgPSB7fTtcblxuZnVuY3Rpb24gb25jZShwcmlvcml0eSwgYXJnKSB7XG4gIGlmICghY2FjaGVbYXJnXSAmJiBwcmlvcml0eSA8PSBsb2cucHJpb3JpdHkpIHtcbiAgICB2YXIgX2NvbnNvbGUzO1xuXG4gICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIgPiAyID8gX2xlbjIgLSAyIDogMCksIF9rZXkyID0gMjsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgYXJnc1tfa2V5MiAtIDJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICB9XG5cbiAgICAoX2NvbnNvbGUzID0gY29uc29sZSkud2Fybi5hcHBseShfY29uc29sZTMsIFthcmddLmNvbmNhdChhcmdzKSk7XG4gICAgY2FjaGVbYXJnXSA9IHRydWU7XG4gIH1cbn1cblxubG9nLnByaW9yaXR5ID0gMDtcbmxvZy5sb2cgPSBsb2c7XG5sb2cub25jZSA9IG9uY2U7XG5cbi8vIEV4cG9zZSB0byBicm93c2VyXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgd2luZG93LmRlY2sgPSB3aW5kb3cuZGVjayB8fCB7IGxvZzogbG9nIH07XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGliL3V0aWxzL2xvZy5qc1xuLy8gbW9kdWxlIGlkID0gNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 66 */
/* exports provided: getUniformsFromViewport */
/* exports used: getUniformsFromViewport */
/*!**************************************!*\
  !*** ./src/lib/viewport-uniforms.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_assert__ = __webpack_require__(/*! assert */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_assert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_assert__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(/*! ./constants */ 26);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getUniformsFromViewport;\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n\n\n\n\n\nfunction fp64ify(a) {\n  var hiPart = Math.fround(a);\n  var loPart = a - Math.fround(a);\n  return [hiPart, loPart];\n}\n\n// To quickly set a vector to zero\nvar ZERO_VECTOR = [0, 0, 0, 0];\n// 4x4 matrix that drops 4th component of vector\nvar VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\n\nfunction calculateMatrixAndOffset(_ref) {\n  var projectionMode = _ref.projectionMode,\n      positionOrigin = _ref.positionOrigin,\n      viewport = _ref.viewport,\n      modelMatrix = _ref.modelMatrix;\n  var viewMatrixUncentered = viewport.viewMatrixUncentered,\n      viewMatrix = viewport.viewMatrix,\n      projectionMatrix = viewport.projectionMatrix;\n\n\n  var projectionCenter = void 0;\n  var modelViewProjectionMatrix = void 0;\n\n  var viewProjectionMatrix = new __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"Matrix4\"](projectionMatrix).multiplyRight(viewMatrix);\n\n  switch (projectionMode) {\n\n    case __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* COORDINATE_SYSTEM */].LNGLAT:\n      projectionCenter = ZERO_VECTOR;\n      modelViewProjectionMatrix = viewProjectionMatrix;\n      if (modelMatrix) {\n        // Apply model matrix if supplied\n        // modelViewProjectionMatrix = modelViewProjectionMatrix.clone();\n        modelViewProjectionMatrix.multiplyRight(modelMatrix);\n      }\n      break;\n\n    case __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* COORDINATE_SYSTEM */].METER_OFFSETS:\n      // Calculate transformed projectionCenter (in 64 bit precision)\n      // This is the key to offset mode precision (avoids doing this\n      // addition in 32 bit precision)\n      var positionPixels = viewport.projectFlat(positionOrigin);\n      projectionCenter = viewProjectionMatrix.transformVector([positionPixels[0], positionPixels[1], 0.0, 1.0]);\n\n      modelViewProjectionMatrix = new __WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"Matrix4\"](projectionMatrix)\n      // Always apply uncentered projection matrix (shader adds center)\n      .multiplyRight(viewMatrixUncentered)\n      // Zero out 4th coordinate (\"after\" model matrix) - avoids further translations\n      .multiplyRight(VECTOR_TO_POINT_MATRIX);\n\n      if (modelMatrix) {\n        // Apply model matrix if supplied\n        modelViewProjectionMatrix.multiplyRight(modelMatrix);\n      }\n      break;\n\n    default:\n      throw new Error('Unknown projection mode');\n  }\n\n  return {\n    modelViewProjectionMatrix: modelViewProjectionMatrix,\n    projectionCenter: projectionCenter\n  };\n}\n\n/**\n * Returns uniforms for shaders based on current projection\n * includes: projection matrix suitable for shaders\n *\n * TODO - Ensure this works with any viewport, not just WebMercatorViewports\n *\n * @param {WebMercatorViewport} viewport -\n * @return {Float32Array} - 4x4 projection matrix that can be used in shaders\n */\nfunction getUniformsFromViewport(viewport) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$modelMatrix = _ref2.modelMatrix,\n      modelMatrix = _ref2$modelMatrix === undefined ? null : _ref2$modelMatrix,\n      _ref2$projectionMode = _ref2.projectionMode,\n      projectionMode = _ref2$projectionMode === undefined ? __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* COORDINATE_SYSTEM */].LNGLAT : _ref2$projectionMode,\n      _ref2$positionOrigin = _ref2.positionOrigin,\n      positionOrigin = _ref2$positionOrigin === undefined ? [0, 0] : _ref2$positionOrigin;\n\n  __WEBPACK_IMPORTED_MODULE_1_assert___default()(viewport.scale, 'Viewport scale missing');\n\n  var _calculateMatrixAndOf = calculateMatrixAndOffset({ projectionMode: projectionMode, positionOrigin: positionOrigin, modelMatrix: modelMatrix, viewport: viewport }),\n      projectionCenter = _calculateMatrixAndOf.projectionCenter,\n      modelViewProjectionMatrix = _calculateMatrixAndOf.modelViewProjectionMatrix;\n\n  __WEBPACK_IMPORTED_MODULE_1_assert___default()(modelViewProjectionMatrix, 'Viewport missing modelViewProjectionMatrix');\n\n  // Calculate projection pixels per unit\n  var projectionPixelsPerUnit = viewport.getDistanceScales().pixelsPerMeter;\n  __WEBPACK_IMPORTED_MODULE_1_assert___default()(projectionPixelsPerUnit, 'Viewport missing pixelsPerMeter');\n\n  // calculate WebGL matrices\n\n  // Convert to Float32\n  var glProjectionMatrix = new Float32Array(modelViewProjectionMatrix);\n\n  // \"Float64Array\"\n  // Transpose the projection matrix to column major for GLSL.\n  var glProjectionMatrixFP64 = new Float32Array(32);\n  for (var i = 0; i < 4; ++i) {\n    for (var j = 0; j < 4; ++j) {\n      var _fp64ify = fp64ify(modelViewProjectionMatrix[j * 4 + i]);\n\n      var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n      glProjectionMatrixFP64[(i * 4 + j) * 2] = _fp64ify2[0];\n      glProjectionMatrixFP64[(i * 4 + j) * 2 + 1] = _fp64ify2[1];\n    }\n  }\n\n  return {\n    // Projection mode values\n    projectionMode: projectionMode,\n    projectionCenter: projectionCenter,\n\n    // modelMatrix: modelMatrix || new Matrix4().identity(),\n\n    // Main projection matrices\n    projectionMatrix: glProjectionMatrix,\n    projectionMatrixUncentered: glProjectionMatrix,\n    projectionFP64: glProjectionMatrixFP64,\n    projectionPixelsPerUnit: projectionPixelsPerUnit,\n\n    // This is the mercator scale (2 ** zoom)\n    projectionScale: viewport.scale,\n\n    // Deprecated?\n    projectionScaleFP64: fp64ify(viewport.scale)\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 67 */
/* exports provided: default */
/*!****************************************************!*\
  !*** ./src/lib/viewports/orthographic-viewport.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__viewport__ = __webpack_require__(/*! ./viewport */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_gl_matrix__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar OrthographicViewport = function (_Viewport) {\n  _inherits(OrthographicViewport, _Viewport);\n\n  function OrthographicViewport(_ref) {\n    var width = _ref.width,\n        height = _ref.height,\n        eye = _ref.eye,\n        _ref$lookAt = _ref.lookAt,\n        lookAt = _ref$lookAt === undefined ? [0, 0, 0] : _ref$lookAt,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 1, 0] : _ref$up,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 100 : _ref$far,\n        _ref$fovy = _ref.fovy,\n        fovy = _ref$fovy === undefined ? 75 : _ref$fovy,\n        left = _ref.left,\n        top = _ref.top,\n        _ref$right = _ref.right,\n        right = _ref$right === undefined ? null : _ref$right,\n        _ref$bottom = _ref.bottom,\n        bottom = _ref$bottom === undefined ? null : _ref$bottom;\n\n    _classCallCheck(this, OrthographicViewport);\n\n    right = Number.isFinite(right) ? right : left + width;\n    bottom = Number.isFinite(bottom) ? right : top + height;\n    return _possibleConstructorReturn(this, (OrthographicViewport.__proto__ || Object.getPrototypeOf(OrthographicViewport)).call(this, {\n      viewMatrix: __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].lookAt([], eye, lookAt, up),\n      projectionMatrix: __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].ortho([], left, right, bottom, top, near, far),\n      width: width,\n      height: height\n    }));\n  }\n\n  return OrthographicViewport;\n}(__WEBPACK_IMPORTED_MODULE_0__viewport__[\"a\" /* default */]);\n\n/* unused harmony default export */ var _unused_webpack_default_export = OrthographicViewport;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3ZpZXdwb3J0cy9vcnRob2dyYXBoaWMtdmlld3BvcnQuanM/MTkzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBWaWV3cG9ydCBmcm9tICcuL3ZpZXdwb3J0JztcbmltcG9ydCB7IG1hdDQgfSBmcm9tICdnbC1tYXRyaXgnO1xuXG52YXIgT3J0aG9ncmFwaGljVmlld3BvcnQgPSBmdW5jdGlvbiAoX1ZpZXdwb3J0KSB7XG4gIF9pbmhlcml0cyhPcnRob2dyYXBoaWNWaWV3cG9ydCwgX1ZpZXdwb3J0KTtcblxuICBmdW5jdGlvbiBPcnRob2dyYXBoaWNWaWV3cG9ydChfcmVmKSB7XG4gICAgdmFyIHdpZHRoID0gX3JlZi53aWR0aCxcbiAgICAgICAgaGVpZ2h0ID0gX3JlZi5oZWlnaHQsXG4gICAgICAgIGV5ZSA9IF9yZWYuZXllLFxuICAgICAgICBfcmVmJGxvb2tBdCA9IF9yZWYubG9va0F0LFxuICAgICAgICBsb29rQXQgPSBfcmVmJGxvb2tBdCA9PT0gdW5kZWZpbmVkID8gWzAsIDAsIDBdIDogX3JlZiRsb29rQXQsXG4gICAgICAgIF9yZWYkdXAgPSBfcmVmLnVwLFxuICAgICAgICB1cCA9IF9yZWYkdXAgPT09IHVuZGVmaW5lZCA/IFswLCAxLCAwXSA6IF9yZWYkdXAsXG4gICAgICAgIF9yZWYkbmVhciA9IF9yZWYubmVhcixcbiAgICAgICAgbmVhciA9IF9yZWYkbmVhciA9PT0gdW5kZWZpbmVkID8gMSA6IF9yZWYkbmVhcixcbiAgICAgICAgX3JlZiRmYXIgPSBfcmVmLmZhcixcbiAgICAgICAgZmFyID0gX3JlZiRmYXIgPT09IHVuZGVmaW5lZCA/IDEwMCA6IF9yZWYkZmFyLFxuICAgICAgICBfcmVmJGZvdnkgPSBfcmVmLmZvdnksXG4gICAgICAgIGZvdnkgPSBfcmVmJGZvdnkgPT09IHVuZGVmaW5lZCA/IDc1IDogX3JlZiRmb3Z5LFxuICAgICAgICBsZWZ0ID0gX3JlZi5sZWZ0LFxuICAgICAgICB0b3AgPSBfcmVmLnRvcCxcbiAgICAgICAgX3JlZiRyaWdodCA9IF9yZWYucmlnaHQsXG4gICAgICAgIHJpZ2h0ID0gX3JlZiRyaWdodCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkcmlnaHQsXG4gICAgICAgIF9yZWYkYm90dG9tID0gX3JlZi5ib3R0b20sXG4gICAgICAgIGJvdHRvbSA9IF9yZWYkYm90dG9tID09PSB1bmRlZmluZWQgPyBudWxsIDogX3JlZiRib3R0b207XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgT3J0aG9ncmFwaGljVmlld3BvcnQpO1xuXG4gICAgcmlnaHQgPSBOdW1iZXIuaXNGaW5pdGUocmlnaHQpID8gcmlnaHQgOiBsZWZ0ICsgd2lkdGg7XG4gICAgYm90dG9tID0gTnVtYmVyLmlzRmluaXRlKGJvdHRvbSkgPyByaWdodCA6IHRvcCArIGhlaWdodDtcbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE9ydGhvZ3JhcGhpY1ZpZXdwb3J0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoT3J0aG9ncmFwaGljVmlld3BvcnQpKS5jYWxsKHRoaXMsIHtcbiAgICAgIHZpZXdNYXRyaXg6IG1hdDQubG9va0F0KFtdLCBleWUsIGxvb2tBdCwgdXApLFxuICAgICAgcHJvamVjdGlvbk1hdHJpeDogbWF0NC5vcnRobyhbXSwgbGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wLCBuZWFyLCBmYXIpLFxuICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICB9KSk7XG4gIH1cblxuICByZXR1cm4gT3J0aG9ncmFwaGljVmlld3BvcnQ7XG59KFZpZXdwb3J0KTtcblxuZXhwb3J0IGRlZmF1bHQgT3J0aG9ncmFwaGljVmlld3BvcnQ7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGliL3ZpZXdwb3J0cy9vcnRob2dyYXBoaWMtdmlld3BvcnQuanNcbi8vIG1vZHVsZSBpZCA9IDY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 68 */
/* exports provided: default */
/*!***************************************************!*\
  !*** ./src/lib/viewports/perspective-viewport.js ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__viewport__ = __webpack_require__(/*! ./viewport */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_gl_matrix__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar DEGREES_TO_RADIANS = Math.PI / 180;\n\nvar PerspectiveViewport = function (_Viewport) {\n  _inherits(PerspectiveViewport, _Viewport);\n\n  function PerspectiveViewport(_ref) {\n    var width = _ref.width,\n        height = _ref.height,\n        eye = _ref.eye,\n        _ref$lookAt = _ref.lookAt,\n        lookAt = _ref$lookAt === undefined ? [0, 0, 0] : _ref$lookAt,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 1, 0] : _ref$up,\n        _ref$fovy = _ref.fovy,\n        fovy = _ref$fovy === undefined ? 75 : _ref$fovy,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 100 : _ref$far,\n        _ref$aspect = _ref.aspect,\n        aspect = _ref$aspect === undefined ? null : _ref$aspect;\n\n    _classCallCheck(this, PerspectiveViewport);\n\n    var fovyRadians = fovy * DEGREES_TO_RADIANS;\n    aspect = Number.isFinite(aspect) ? aspect : width / height;\n    return _possibleConstructorReturn(this, (PerspectiveViewport.__proto__ || Object.getPrototypeOf(PerspectiveViewport)).call(this, {\n      viewMatrix: __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].lookAt([], eye, lookAt, up),\n      projectionMatrix: __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].perspective([], fovyRadians, aspect, near, far),\n      width: width,\n      height: height\n    }));\n  }\n\n  return PerspectiveViewport;\n}(__WEBPACK_IMPORTED_MODULE_0__viewport__[\"a\" /* default */]);\n\n/* unused harmony default export */ var _unused_webpack_default_export = PerspectiveViewport;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3ZpZXdwb3J0cy9wZXJzcGVjdGl2ZS12aWV3cG9ydC5qcz81MmIxIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFZpZXdwb3J0IGZyb20gJy4vdmlld3BvcnQnO1xuaW1wb3J0IHsgbWF0NCB9IGZyb20gJ2dsLW1hdHJpeCc7XG5cbnZhciBERUdSRUVTX1RPX1JBRElBTlMgPSBNYXRoLlBJIC8gMTgwO1xuXG52YXIgUGVyc3BlY3RpdmVWaWV3cG9ydCA9IGZ1bmN0aW9uIChfVmlld3BvcnQpIHtcbiAgX2luaGVyaXRzKFBlcnNwZWN0aXZlVmlld3BvcnQsIF9WaWV3cG9ydCk7XG5cbiAgZnVuY3Rpb24gUGVyc3BlY3RpdmVWaWV3cG9ydChfcmVmKSB7XG4gICAgdmFyIHdpZHRoID0gX3JlZi53aWR0aCxcbiAgICAgICAgaGVpZ2h0ID0gX3JlZi5oZWlnaHQsXG4gICAgICAgIGV5ZSA9IF9yZWYuZXllLFxuICAgICAgICBfcmVmJGxvb2tBdCA9IF9yZWYubG9va0F0LFxuICAgICAgICBsb29rQXQgPSBfcmVmJGxvb2tBdCA9PT0gdW5kZWZpbmVkID8gWzAsIDAsIDBdIDogX3JlZiRsb29rQXQsXG4gICAgICAgIF9yZWYkdXAgPSBfcmVmLnVwLFxuICAgICAgICB1cCA9IF9yZWYkdXAgPT09IHVuZGVmaW5lZCA/IFswLCAxLCAwXSA6IF9yZWYkdXAsXG4gICAgICAgIF9yZWYkZm92eSA9IF9yZWYuZm92eSxcbiAgICAgICAgZm92eSA9IF9yZWYkZm92eSA9PT0gdW5kZWZpbmVkID8gNzUgOiBfcmVmJGZvdnksXG4gICAgICAgIF9yZWYkbmVhciA9IF9yZWYubmVhcixcbiAgICAgICAgbmVhciA9IF9yZWYkbmVhciA9PT0gdW5kZWZpbmVkID8gMSA6IF9yZWYkbmVhcixcbiAgICAgICAgX3JlZiRmYXIgPSBfcmVmLmZhcixcbiAgICAgICAgZmFyID0gX3JlZiRmYXIgPT09IHVuZGVmaW5lZCA/IDEwMCA6IF9yZWYkZmFyLFxuICAgICAgICBfcmVmJGFzcGVjdCA9IF9yZWYuYXNwZWN0LFxuICAgICAgICBhc3BlY3QgPSBfcmVmJGFzcGVjdCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkYXNwZWN0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBlcnNwZWN0aXZlVmlld3BvcnQpO1xuXG4gICAgdmFyIGZvdnlSYWRpYW5zID0gZm92eSAqIERFR1JFRVNfVE9fUkFESUFOUztcbiAgICBhc3BlY3QgPSBOdW1iZXIuaXNGaW5pdGUoYXNwZWN0KSA/IGFzcGVjdCA6IHdpZHRoIC8gaGVpZ2h0O1xuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUGVyc3BlY3RpdmVWaWV3cG9ydC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFBlcnNwZWN0aXZlVmlld3BvcnQpKS5jYWxsKHRoaXMsIHtcbiAgICAgIHZpZXdNYXRyaXg6IG1hdDQubG9va0F0KFtdLCBleWUsIGxvb2tBdCwgdXApLFxuICAgICAgcHJvamVjdGlvbk1hdHJpeDogbWF0NC5wZXJzcGVjdGl2ZShbXSwgZm92eVJhZGlhbnMsIGFzcGVjdCwgbmVhciwgZmFyKSxcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgfSkpO1xuICB9XG5cbiAgcmV0dXJuIFBlcnNwZWN0aXZlVmlld3BvcnQ7XG59KFZpZXdwb3J0KTtcblxuZXhwb3J0IGRlZmF1bHQgUGVyc3BlY3RpdmVWaWV3cG9ydDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9saWIvdmlld3BvcnRzL3BlcnNwZWN0aXZlLXZpZXdwb3J0LmpzXG4vLyBtb2R1bGUgaWQgPSA2OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 69 */
/* exports provided: default */
/* exports used: default */
/*!****************************************************!*\
  !*** ./src/lib/viewports/web-mercator-viewport.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__viewport__ = __webpack_require__(/*! ./viewport */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gl_matrix__ = __webpack_require__(/*! gl-matrix */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gl_matrix___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_gl_matrix__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\n\n\n\n// CONSTANTS\nvar PI = Math.PI;\nvar PI_4 = PI / 4;\nvar DEGREES_TO_RADIANS = PI / 180;\nvar RADIANS_TO_DEGREES = 180 / PI;\nvar TILE_SIZE = 512;\nvar WORLD_SCALE = TILE_SIZE / (2 * PI);\n\nvar DEFAULT_MAP_STATE = {\n  latitude: 37,\n  longitude: -122,\n  zoom: 11,\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5\n};\n\nvar WebMercatorViewport = function (_Viewport) {\n  _inherits(WebMercatorViewport, _Viewport);\n\n  /**\n   * @classdesc\n   * Creates view/projection matrices from mercator params\n   * Note: The Viewport is immutable in the sense that it only has accessors.\n   * A new viewport instance should be created if any parameters have changed.\n   *\n   * @class\n   * @param {Object} opt - options\n   * @param {Boolean} mercator=true - Whether to use mercator projection\n   *\n   * @param {Number} opt.width=1 - Width of \"viewport\" or window\n   * @param {Number} opt.height=1 - Height of \"viewport\" or window\n   * @param {Array} opt.center=[0, 0] - Center of viewport\n   *   [longitude, latitude] or [x, y]\n   * @param {Number} opt.scale=1 - Either use scale or zoom\n   * @param {Number} opt.pitch=0 - Camera angle in degrees (0 is straight down)\n   * @param {Number} opt.bearing=0 - Map rotation in degrees (0 means north is up)\n   * @param {Number} opt.altitude= - Altitude of camera in screen units\n   *\n   * Web mercator projection short-hand parameters\n   * @param {Number} opt.latitude - Center of viewport on map (alternative to opt.center)\n   * @param {Number} opt.longitude - Center of viewport on map (alternative to opt.center)\n   * @param {Number} opt.zoom - Scale = Math.pow(2,zoom) on map (alternative to opt.scale)\n    * Notes:\n   *  - Only one of center or [latitude, longitude] can be specified\n   *  - [latitude, longitude] can only be specified when \"mercator\" is true\n   *  - Altitude has a default value that matches assumptions in mapbox-gl\n   *  - width and height are forced to 1 if supplied as 0, to avoid\n   *    division by zero. This is intended to reduce the burden of apps to\n   *    to check values before instantiating a Viewport.\n   */\n  /* eslint-disable complexity, max-statements */\n  function WebMercatorViewport() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        width = _ref.width,\n        height = _ref.height,\n        latitude = _ref.latitude,\n        longitude = _ref.longitude,\n        zoom = _ref.zoom,\n        pitch = _ref.pitch,\n        bearing = _ref.bearing,\n        altitude = _ref.altitude,\n        mercatorEnabled = _ref.mercatorEnabled;\n\n    _classCallCheck(this, WebMercatorViewport);\n\n    // Viewport - support undefined arguments\n    width = width !== undefined ? width : DEFAULT_MAP_STATE.width;\n    height = height !== undefined ? height : DEFAULT_MAP_STATE.height;\n    zoom = zoom !== undefined ? zoom : DEFAULT_MAP_STATE.zoom;\n    latitude = latitude !== undefined ? latitude : DEFAULT_MAP_STATE.latitude;\n    longitude = longitude !== undefined ? longitude : DEFAULT_MAP_STATE.longitude;\n    bearing = bearing !== undefined ? bearing : DEFAULT_MAP_STATE.bearing;\n    pitch = pitch !== undefined ? pitch : DEFAULT_MAP_STATE.pitch;\n    altitude = altitude !== undefined ? altitude : DEFAULT_MAP_STATE.altitude;\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    var scale = Math.pow(2, zoom);\n    // Altitude - prevent division by 0\n    // TODO - just throw an Error instead?\n    altitude = Math.max(0.75, altitude);\n\n    var distanceScales = calculateDistanceScales({ latitude: latitude, longitude: longitude, scale: scale });\n\n    var projectionMatrix = makeProjectionMatrixFromMercatorParams({\n      width: width,\n      height: height,\n      pitch: pitch,\n      bearing: bearing,\n      altitude: altitude\n    });\n\n    var _makeViewMatrixFromMe = makeViewMatrixFromMercatorParams({\n      width: width,\n      height: height,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom,\n      pitch: pitch,\n      bearing: bearing,\n      altitude: altitude,\n      distanceScales: distanceScales\n    }),\n        viewMatrix = _makeViewMatrixFromMe.viewMatrix,\n        viewMatrixUncentered = _makeViewMatrixFromMe.viewMatrixUncentered,\n        viewCenter = _makeViewMatrixFromMe.viewCenter;\n\n    // Add additional matrices\n    var _this = _possibleConstructorReturn(this, (WebMercatorViewport.__proto__ || Object.getPrototypeOf(WebMercatorViewport)).call(this, { width: width, height: height, viewMatrix: viewMatrix, projectionMatrix: projectionMatrix }));\n\n    _this.viewMatrixUncentered = viewMatrixUncentered;\n    _this.viewCenter = viewCenter;\n\n    // Save parameters\n    _this.latitude = latitude;\n    _this.longitude = longitude;\n    _this.zoom = zoom;\n    _this.pitch = pitch;\n    _this.bearing = bearing;\n    _this.altitude = altitude;\n\n    _this.scale = scale;\n\n    _this._distanceScales = distanceScales;\n\n    _this.getDistanceScales = _this.getDistanceScales.bind(_this);\n    _this.metersToLngLatDelta = _this.metersToLngLatDelta.bind(_this);\n    _this.lngLatDeltaToMeters = _this.lngLatDeltaToMeters.bind(_this);\n    _this.addMetersToLngLat = _this.addMetersToLngLat.bind(_this);\n    return _this;\n  }\n  /* eslint-enable complexity, max-statements */\n\n  /**\n   * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n   * Performs the nonlinear part of the web mercator projection.\n   * Remaining projection is done with 4x4 matrices which also handles\n   * perspective.\n   *\n   * @param {Array} lngLat - [lng, lat] coordinates\n   *   Specifies a point on the sphere to project onto the map.\n   * @return {Array} [x,y] coordinates.\n   */\n\n\n  _createClass(WebMercatorViewport, [{\n    key: '_projectFlat',\n    value: function _projectFlat(lngLat) {\n      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scale;\n\n      return projectFlat(lngLat, scale);\n    }\n\n    /**\n     * Unproject world point [x,y] on map onto {lat, lon} on sphere\n     *\n     * @param {object|Vector} xy - object with {x,y} members\n     *  representing point on projected map plane\n     * @return {GeoCoordinates} - object with {lat,lon} of point on sphere.\n     *   Has toArray method if you need a GeoJSON Array.\n     *   Per cartographic tradition, lat and lon are specified as degrees.\n     */\n\n  }, {\n    key: '_unprojectFlat',\n    value: function _unprojectFlat(xy) {\n      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scale;\n\n      return unprojectFlat(xy, scale);\n    }\n  }, {\n    key: 'getDistanceScales',\n    value: function getDistanceScales() {\n      return this._distanceScales;\n    }\n\n    /**\n     * Converts a meter offset to a lnglat offset\n     *\n     * Note: Uses simple linear approximation around the viewport center\n     * Error increases with size of offset (roughly 1% per 100km)\n     *\n     * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n     * @return {[Number,Number]|[Number,Number,Number]) - array of [lng,lat,z] deltas\n     */\n\n  }, {\n    key: 'metersToLngLatDelta',\n    value: function metersToLngLatDelta(xyz) {\n      var _xyz = _slicedToArray(xyz, 3),\n          x = _xyz[0],\n          y = _xyz[1],\n          _xyz$ = _xyz[2],\n          z = _xyz$ === undefined ? 0 : _xyz$;\n\n      var _distanceScales = this._distanceScales,\n          pixelsPerMeter = _distanceScales.pixelsPerMeter,\n          degreesPerPixel = _distanceScales.degreesPerPixel;\n\n      var deltaLng = x * pixelsPerMeter[0] * degreesPerPixel[0];\n      var deltaLat = y * pixelsPerMeter[1] * degreesPerPixel[1];\n      return xyz.length === 2 ? [deltaLng, deltaLat] : [deltaLng, deltaLat, z];\n    }\n\n    /**\n     * Converts a lnglat offset to a meter offset\n     *\n     * Note: Uses simple linear approximation around the viewport center\n     * Error increases with size of offset (roughly 1% per 100km)\n     *\n     * @param {[Number,Number]|[Number,Number,Number]) deltaLngLatZ - array of [lng,lat,z] deltas\n     * @return {[Number,Number]|[Number,Number,Number]) - array of meter deltas\n     */\n\n  }, {\n    key: 'lngLatDeltaToMeters',\n    value: function lngLatDeltaToMeters(deltaLngLatZ) {\n      var _deltaLngLatZ = _slicedToArray(deltaLngLatZ, 3),\n          deltaLng = _deltaLngLatZ[0],\n          deltaLat = _deltaLngLatZ[1],\n          _deltaLngLatZ$ = _deltaLngLatZ[2],\n          deltaZ = _deltaLngLatZ$ === undefined ? 0 : _deltaLngLatZ$;\n\n      var _distanceScales2 = this._distanceScales,\n          pixelsPerDegree = _distanceScales2.pixelsPerDegree,\n          metersPerPixel = _distanceScales2.metersPerPixel;\n\n      var deltaX = deltaLng * pixelsPerDegree[0] * metersPerPixel[0];\n      var deltaY = deltaLat * pixelsPerDegree[1] * metersPerPixel[1];\n      return deltaLngLatZ.length === 2 ? [deltaX, deltaY] : [deltaX, deltaY, deltaZ];\n    }\n\n    /**\n     * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n     *\n     * Note: Uses simple linear approximation around the viewport center\n     * Error increases with size of offset (roughly 1% per 100km)\n     *\n     * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n     * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n     * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n     */\n\n  }, {\n    key: 'addMetersToLngLat',\n    value: function addMetersToLngLat(lngLatZ, xyz) {\n      var _lngLatZ = _slicedToArray(lngLatZ, 3),\n          lng = _lngLatZ[0],\n          lat = _lngLatZ[1],\n          _lngLatZ$ = _lngLatZ[2],\n          Z = _lngLatZ$ === undefined ? 0 : _lngLatZ$;\n\n      var _metersToLngLatDelta = this.metersToLngLatDelta(xyz),\n          _metersToLngLatDelta2 = _slicedToArray(_metersToLngLatDelta, 3),\n          deltaLng = _metersToLngLatDelta2[0],\n          deltaLat = _metersToLngLatDelta2[1],\n          _metersToLngLatDelta3 = _metersToLngLatDelta2[2],\n          deltaZ = _metersToLngLatDelta3 === undefined ? 0 : _metersToLngLatDelta3;\n\n      return lngLatZ.length === 2 ? [lng + deltaLng, lat + deltaLat] : [lng + deltaLng, lat + deltaLat, Z + deltaZ];\n    }\n\n    // INTERNAL METHODS\n\n  }, {\n    key: '_getParams',\n    value: function _getParams() {\n      return this._distanceScales;\n    }\n  }]);\n\n  return WebMercatorViewport;\n}(__WEBPACK_IMPORTED_MODULE_0__viewport__[\"a\" /* default */]);\n\n/**\n * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n * Performs the nonlinear part of the web mercator projection.\n * Remaining projection is done with 4x4 matrices which also handles\n * perspective.\n *\n * @param {Array} lngLat - [lng, lat] coordinates\n *   Specifies a point on the sphere to project onto the map.\n * @return {Array} [x,y] coordinates.\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = WebMercatorViewport;\nfunction projectFlat(_ref2, scale) {\n  var _ref3 = _slicedToArray(_ref2, 2),\n      lng = _ref3[0],\n      lat = _ref3[1];\n\n  scale = scale * WORLD_SCALE;\n  var lambda2 = lng * DEGREES_TO_RADIANS;\n  var phi2 = lat * DEGREES_TO_RADIANS;\n  var x = scale * (lambda2 + PI);\n  var y = scale * (PI - Math.log(Math.tan(PI_4 + phi2 * 0.5)));\n  return [x, y];\n}\n\n/**\n * Unproject world point [x,y] on map onto {lat, lon} on sphere\n *\n * @param {object|Vector} xy - object with {x,y} members\n *  representing point on projected map plane\n * @return {GeoCoordinates} - object with {lat,lon} of point on sphere.\n *   Has toArray method if you need a GeoJSON Array.\n *   Per cartographic tradition, lat and lon are specified as degrees.\n */\nfunction unprojectFlat(_ref4, scale) {\n  var _ref5 = _slicedToArray(_ref4, 2),\n      x = _ref5[0],\n      y = _ref5[1];\n\n  scale = scale * WORLD_SCALE;\n  var lambda2 = x / scale - PI;\n  var phi2 = 2 * (Math.atan(Math.exp(PI - y / scale)) - PI_4);\n  return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];\n}\n\n/**\n * Calculate distance scales in meters around current lat/lon, both for\n * degrees and pixels.\n * In mercator projection mode, the distance scales vary significantly\n * with latitude.\n */\nfunction calculateDistanceScales(_ref6) {\n  var latitude = _ref6.latitude,\n      longitude = _ref6.longitude,\n      scale = _ref6.scale;\n\n  // Approximately 111km per degree at equator\n  var METERS_PER_DEGREE = 111000;\n\n  var latCosine = Math.cos(latitude * Math.PI / 180);\n\n  var metersPerDegree = METERS_PER_DEGREE * latCosine;\n\n  // Calculate number of pixels occupied by one degree longitude\n  // around current lat/lon\n  var pixelsPerDegreeX = __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"vec2\"].distance(projectFlat([longitude + 0.5, latitude]), projectFlat([longitude - 0.5, latitude]));\n  // Calculate number of pixels occupied by one degree latitude\n  // around current lat/lon\n  var pixelsPerDegreeY = __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"vec2\"].distance(projectFlat([longitude, latitude + 0.5]), projectFlat([longitude, latitude - 0.5]));\n\n  var pixelsPerMeterX = pixelsPerDegreeX / metersPerDegree;\n  var pixelsPerMeterY = pixelsPerDegreeY / metersPerDegree;\n  var pixelsPerMeterZ = (pixelsPerMeterX + pixelsPerMeterY) / 2;\n  // const pixelsPerMeter = [pixelsPerMeterX, pixelsPerMeterY, pixelsPerMeterZ];\n\n  var worldSize = TILE_SIZE * scale;\n  var altPixelsPerMeter = worldSize / (4e7 * latCosine);\n  var pixelsPerMeter = [altPixelsPerMeter, altPixelsPerMeter, altPixelsPerMeter];\n  var metersPerPixel = [1 / altPixelsPerMeter, 1 / altPixelsPerMeter, 1 / pixelsPerMeterZ];\n\n  var pixelsPerDegree = [pixelsPerDegreeX, pixelsPerDegreeY, pixelsPerMeterZ];\n  var degreesPerPixel = [1 / pixelsPerDegreeX, 1 / pixelsPerDegreeY, 1 / pixelsPerMeterZ];\n\n  // Main results, used for converting meters to latlng deltas and scaling offsets\n  return {\n    pixelsPerMeter: pixelsPerMeter,\n    metersPerPixel: metersPerPixel,\n    pixelsPerDegree: pixelsPerDegree,\n    degreesPerPixel: degreesPerPixel\n  };\n}\n\n// ATTRIBUTION:\n// view and projection matrix creation is intentionally kept compatible with\n// mapbox-gl's implementation to ensure that seamless interoperation\n// with mapbox and react-map-gl. See: https://github.com/mapbox/mapbox-gl-js\nfunction makeProjectionMatrixFromMercatorParams(_ref7) {\n  var width = _ref7.width,\n      height = _ref7.height,\n      pitch = _ref7.pitch,\n      altitude = _ref7.altitude;\n\n  var pitchRadians = pitch * DEGREES_TO_RADIANS;\n\n  // PROJECTION MATRIX: PROJECTS FROM CAMERA SPACE TO CLIPSPACE\n  // Find the distance from the center point to the center top\n  // in altitude units using law of sines.\n  var halfFov = Math.atan(0.5 / altitude);\n  var topHalfSurfaceDistance = Math.sin(halfFov) * altitude / Math.sin(Math.PI / 2 - pitchRadians - halfFov);\n\n  // Calculate z value of the farthest fragment that should be rendered.\n  var farZ = Math.cos(Math.PI / 2 - pitchRadians) * topHalfSurfaceDistance + altitude;\n\n  var projectionMatrix = __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].perspective(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__viewport__[\"b\" /* createMat4 */])(), 2 * Math.atan(height / 2 / altitude), // fov in radians\n  width / height, // aspect ratio\n  0.1, // near plane\n  farZ * 10.0 // far plane\n  );\n\n  return projectionMatrix;\n}\n\nfunction makeViewMatrixFromMercatorParams(_ref8) {\n  var width = _ref8.width,\n      height = _ref8.height,\n      longitude = _ref8.longitude,\n      latitude = _ref8.latitude,\n      zoom = _ref8.zoom,\n      pitch = _ref8.pitch,\n      bearing = _ref8.bearing,\n      altitude = _ref8.altitude;\n\n  // Center x, y\n  var scale = Math.pow(2, zoom);\n  // VIEW MATRIX: PROJECTS FROM VIRTUAL PIXELS TO CAMERA SPACE\n  // Note: As usual, matrix operation orders should be read in reverse\n  // since vectors will be multiplied from the right during transformation\n  var vm = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__viewport__[\"b\" /* createMat4 */])();\n\n  // Move camera to altitude\n  __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].translate(vm, vm, [0, 0, -altitude]);\n\n  // After the rotateX, z values are in pixel units. Convert them to\n  // altitude units. 1 altitude unit = the screen height.\n  __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].scale(vm, vm, [1, -1, 1 / height]);\n\n  // Rotate by bearing, and then by pitch (which tilts the view)\n  __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].rotateX(vm, vm, pitch * DEGREES_TO_RADIANS);\n  __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].rotateZ(vm, vm, -bearing * DEGREES_TO_RADIANS);\n\n  var _projectFlat2 = projectFlat([longitude, latitude], scale),\n      _projectFlat3 = _slicedToArray(_projectFlat2, 2),\n      centerX = _projectFlat3[0],\n      centerY = _projectFlat3[1];\n\n  var center = [-centerX, -centerY, 0, 1];\n  var viewCenter = __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"vec4\"].transformMat4([], center, vm);\n\n  var vmCentered = __WEBPACK_IMPORTED_MODULE_1_gl_matrix__[\"mat4\"].translate([], vm, [-centerX, -centerY, 0]);\n\n  return {\n    viewMatrix: vmCentered,\n    viewMatrixUncentered: vm,\n    viewCenter: viewCenter\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL3ZpZXdwb3J0cy93ZWItbWVyY2F0b3Itdmlld3BvcnQuanM/NTM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuLy8gVmlldyBhbmQgUHJvamVjdGlvbiBNYXRyaXggY2FsY3VsYXRpb25zIGZvciBtYXBib3gtanMgc3R5bGVcbi8vIG1hcCB2aWV3IHByb3BlcnRpZXNcbmltcG9ydCBWaWV3cG9ydCwgeyBjcmVhdGVNYXQ0IH0gZnJvbSAnLi92aWV3cG9ydCc7XG5pbXBvcnQgeyBtYXQ0LCB2ZWM0LCB2ZWMyIH0gZnJvbSAnZ2wtbWF0cml4JztcblxuLy8gQ09OU1RBTlRTXG52YXIgUEkgPSBNYXRoLlBJO1xudmFyIFBJXzQgPSBQSSAvIDQ7XG52YXIgREVHUkVFU19UT19SQURJQU5TID0gUEkgLyAxODA7XG52YXIgUkFESUFOU19UT19ERUdSRUVTID0gMTgwIC8gUEk7XG52YXIgVElMRV9TSVpFID0gNTEyO1xudmFyIFdPUkxEX1NDQUxFID0gVElMRV9TSVpFIC8gKDIgKiBQSSk7XG5cbnZhciBERUZBVUxUX01BUF9TVEFURSA9IHtcbiAgbGF0aXR1ZGU6IDM3LFxuICBsb25naXR1ZGU6IC0xMjIsXG4gIHpvb206IDExLFxuICBwaXRjaDogMCxcbiAgYmVhcmluZzogMCxcbiAgYWx0aXR1ZGU6IDEuNVxufTtcblxudmFyIFdlYk1lcmNhdG9yVmlld3BvcnQgPSBmdW5jdGlvbiAoX1ZpZXdwb3J0KSB7XG4gIF9pbmhlcml0cyhXZWJNZXJjYXRvclZpZXdwb3J0LCBfVmlld3BvcnQpO1xuXG4gIC8qKlxuICAgKiBAY2xhc3NkZXNjXG4gICAqIENyZWF0ZXMgdmlldy9wcm9qZWN0aW9uIG1hdHJpY2VzIGZyb20gbWVyY2F0b3IgcGFyYW1zXG4gICAqIE5vdGU6IFRoZSBWaWV3cG9ydCBpcyBpbW11dGFibGUgaW4gdGhlIHNlbnNlIHRoYXQgaXQgb25seSBoYXMgYWNjZXNzb3JzLlxuICAgKiBBIG5ldyB2aWV3cG9ydCBpbnN0YW5jZSBzaG91bGQgYmUgY3JlYXRlZCBpZiBhbnkgcGFyYW1ldGVycyBoYXZlIGNoYW5nZWQuXG4gICAqXG4gICAqIEBjbGFzc1xuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0IC0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge0Jvb2xlYW59IG1lcmNhdG9yPXRydWUgLSBXaGV0aGVyIHRvIHVzZSBtZXJjYXRvciBwcm9qZWN0aW9uXG4gICAqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvcHQud2lkdGg9MSAtIFdpZHRoIG9mIFwidmlld3BvcnRcIiBvciB3aW5kb3dcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdC5oZWlnaHQ9MSAtIEhlaWdodCBvZiBcInZpZXdwb3J0XCIgb3Igd2luZG93XG4gICAqIEBwYXJhbSB7QXJyYXl9IG9wdC5jZW50ZXI9WzAsIDBdIC0gQ2VudGVyIG9mIHZpZXdwb3J0XG4gICAqICAgW2xvbmdpdHVkZSwgbGF0aXR1ZGVdIG9yIFt4LCB5XVxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0LnNjYWxlPTEgLSBFaXRoZXIgdXNlIHNjYWxlIG9yIHpvb21cbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdC5waXRjaD0wIC0gQ2FtZXJhIGFuZ2xlIGluIGRlZ3JlZXMgKDAgaXMgc3RyYWlnaHQgZG93bilcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdC5iZWFyaW5nPTAgLSBNYXAgcm90YXRpb24gaW4gZGVncmVlcyAoMCBtZWFucyBub3J0aCBpcyB1cClcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdC5hbHRpdHVkZT0gLSBBbHRpdHVkZSBvZiBjYW1lcmEgaW4gc2NyZWVuIHVuaXRzXG4gICAqXG4gICAqIFdlYiBtZXJjYXRvciBwcm9qZWN0aW9uIHNob3J0LWhhbmQgcGFyYW1ldGVyc1xuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0LmxhdGl0dWRlIC0gQ2VudGVyIG9mIHZpZXdwb3J0IG9uIG1hcCAoYWx0ZXJuYXRpdmUgdG8gb3B0LmNlbnRlcilcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdC5sb25naXR1ZGUgLSBDZW50ZXIgb2Ygdmlld3BvcnQgb24gbWFwIChhbHRlcm5hdGl2ZSB0byBvcHQuY2VudGVyKVxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0Lnpvb20gLSBTY2FsZSA9IE1hdGgucG93KDIsem9vbSkgb24gbWFwIChhbHRlcm5hdGl2ZSB0byBvcHQuc2NhbGUpXG4gICAgKiBOb3RlczpcbiAgICogIC0gT25seSBvbmUgb2YgY2VudGVyIG9yIFtsYXRpdHVkZSwgbG9uZ2l0dWRlXSBjYW4gYmUgc3BlY2lmaWVkXG4gICAqICAtIFtsYXRpdHVkZSwgbG9uZ2l0dWRlXSBjYW4gb25seSBiZSBzcGVjaWZpZWQgd2hlbiBcIm1lcmNhdG9yXCIgaXMgdHJ1ZVxuICAgKiAgLSBBbHRpdHVkZSBoYXMgYSBkZWZhdWx0IHZhbHVlIHRoYXQgbWF0Y2hlcyBhc3N1bXB0aW9ucyBpbiBtYXBib3gtZ2xcbiAgICogIC0gd2lkdGggYW5kIGhlaWdodCBhcmUgZm9yY2VkIHRvIDEgaWYgc3VwcGxpZWQgYXMgMCwgdG8gYXZvaWRcbiAgICogICAgZGl2aXNpb24gYnkgemVyby4gVGhpcyBpcyBpbnRlbmRlZCB0byByZWR1Y2UgdGhlIGJ1cmRlbiBvZiBhcHBzIHRvXG4gICAqICAgIHRvIGNoZWNrIHZhbHVlcyBiZWZvcmUgaW5zdGFudGlhdGluZyBhIFZpZXdwb3J0LlxuICAgKi9cbiAgLyogZXNsaW50LWRpc2FibGUgY29tcGxleGl0eSwgbWF4LXN0YXRlbWVudHMgKi9cbiAgZnVuY3Rpb24gV2ViTWVyY2F0b3JWaWV3cG9ydCgpIHtcbiAgICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sXG4gICAgICAgIHdpZHRoID0gX3JlZi53aWR0aCxcbiAgICAgICAgaGVpZ2h0ID0gX3JlZi5oZWlnaHQsXG4gICAgICAgIGxhdGl0dWRlID0gX3JlZi5sYXRpdHVkZSxcbiAgICAgICAgbG9uZ2l0dWRlID0gX3JlZi5sb25naXR1ZGUsXG4gICAgICAgIHpvb20gPSBfcmVmLnpvb20sXG4gICAgICAgIHBpdGNoID0gX3JlZi5waXRjaCxcbiAgICAgICAgYmVhcmluZyA9IF9yZWYuYmVhcmluZyxcbiAgICAgICAgYWx0aXR1ZGUgPSBfcmVmLmFsdGl0dWRlLFxuICAgICAgICBtZXJjYXRvckVuYWJsZWQgPSBfcmVmLm1lcmNhdG9yRW5hYmxlZDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBXZWJNZXJjYXRvclZpZXdwb3J0KTtcblxuICAgIC8vIFZpZXdwb3J0IC0gc3VwcG9ydCB1bmRlZmluZWQgYXJndW1lbnRzXG4gICAgd2lkdGggPSB3aWR0aCAhPT0gdW5kZWZpbmVkID8gd2lkdGggOiBERUZBVUxUX01BUF9TVEFURS53aWR0aDtcbiAgICBoZWlnaHQgPSBoZWlnaHQgIT09IHVuZGVmaW5lZCA/IGhlaWdodCA6IERFRkFVTFRfTUFQX1NUQVRFLmhlaWdodDtcbiAgICB6b29tID0gem9vbSAhPT0gdW5kZWZpbmVkID8gem9vbSA6IERFRkFVTFRfTUFQX1NUQVRFLnpvb207XG4gICAgbGF0aXR1ZGUgPSBsYXRpdHVkZSAhPT0gdW5kZWZpbmVkID8gbGF0aXR1ZGUgOiBERUZBVUxUX01BUF9TVEFURS5sYXRpdHVkZTtcbiAgICBsb25naXR1ZGUgPSBsb25naXR1ZGUgIT09IHVuZGVmaW5lZCA/IGxvbmdpdHVkZSA6IERFRkFVTFRfTUFQX1NUQVRFLmxvbmdpdHVkZTtcbiAgICBiZWFyaW5nID0gYmVhcmluZyAhPT0gdW5kZWZpbmVkID8gYmVhcmluZyA6IERFRkFVTFRfTUFQX1NUQVRFLmJlYXJpbmc7XG4gICAgcGl0Y2ggPSBwaXRjaCAhPT0gdW5kZWZpbmVkID8gcGl0Y2ggOiBERUZBVUxUX01BUF9TVEFURS5waXRjaDtcbiAgICBhbHRpdHVkZSA9IGFsdGl0dWRlICE9PSB1bmRlZmluZWQgPyBhbHRpdHVkZSA6IERFRkFVTFRfTUFQX1NUQVRFLmFsdGl0dWRlO1xuXG4gICAgLy8gU2lsZW50bHkgYWxsb3cgYXBwcyB0byBzZW5kIGluIDAsMCB0byBmYWNpbGl0YXRlIGlzb21vcnBoaWMgcmVuZGVyIGV0Y1xuICAgIHdpZHRoID0gd2lkdGggfHwgMTtcbiAgICBoZWlnaHQgPSBoZWlnaHQgfHwgMTtcblxuICAgIHZhciBzY2FsZSA9IE1hdGgucG93KDIsIHpvb20pO1xuICAgIC8vIEFsdGl0dWRlIC0gcHJldmVudCBkaXZpc2lvbiBieSAwXG4gICAgLy8gVE9ETyAtIGp1c3QgdGhyb3cgYW4gRXJyb3IgaW5zdGVhZD9cbiAgICBhbHRpdHVkZSA9IE1hdGgubWF4KDAuNzUsIGFsdGl0dWRlKTtcblxuICAgIHZhciBkaXN0YW5jZVNjYWxlcyA9IGNhbGN1bGF0ZURpc3RhbmNlU2NhbGVzKHsgbGF0aXR1ZGU6IGxhdGl0dWRlLCBsb25naXR1ZGU6IGxvbmdpdHVkZSwgc2NhbGU6IHNjYWxlIH0pO1xuXG4gICAgdmFyIHByb2plY3Rpb25NYXRyaXggPSBtYWtlUHJvamVjdGlvbk1hdHJpeEZyb21NZXJjYXRvclBhcmFtcyh7XG4gICAgICB3aWR0aDogd2lkdGgsXG4gICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgIHBpdGNoOiBwaXRjaCxcbiAgICAgIGJlYXJpbmc6IGJlYXJpbmcsXG4gICAgICBhbHRpdHVkZTogYWx0aXR1ZGVcbiAgICB9KTtcblxuICAgIHZhciBfbWFrZVZpZXdNYXRyaXhGcm9tTWUgPSBtYWtlVmlld01hdHJpeEZyb21NZXJjYXRvclBhcmFtcyh7XG4gICAgICB3aWR0aDogd2lkdGgsXG4gICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgIGxvbmdpdHVkZTogbG9uZ2l0dWRlLFxuICAgICAgbGF0aXR1ZGU6IGxhdGl0dWRlLFxuICAgICAgem9vbTogem9vbSxcbiAgICAgIHBpdGNoOiBwaXRjaCxcbiAgICAgIGJlYXJpbmc6IGJlYXJpbmcsXG4gICAgICBhbHRpdHVkZTogYWx0aXR1ZGUsXG4gICAgICBkaXN0YW5jZVNjYWxlczogZGlzdGFuY2VTY2FsZXNcbiAgICB9KSxcbiAgICAgICAgdmlld01hdHJpeCA9IF9tYWtlVmlld01hdHJpeEZyb21NZS52aWV3TWF0cml4LFxuICAgICAgICB2aWV3TWF0cml4VW5jZW50ZXJlZCA9IF9tYWtlVmlld01hdHJpeEZyb21NZS52aWV3TWF0cml4VW5jZW50ZXJlZCxcbiAgICAgICAgdmlld0NlbnRlciA9IF9tYWtlVmlld01hdHJpeEZyb21NZS52aWV3Q2VudGVyO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgbWF0cmljZXNcbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoV2ViTWVyY2F0b3JWaWV3cG9ydC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFdlYk1lcmNhdG9yVmlld3BvcnQpKS5jYWxsKHRoaXMsIHsgd2lkdGg6IHdpZHRoLCBoZWlnaHQ6IGhlaWdodCwgdmlld01hdHJpeDogdmlld01hdHJpeCwgcHJvamVjdGlvbk1hdHJpeDogcHJvamVjdGlvbk1hdHJpeCB9KSk7XG5cbiAgICBfdGhpcy52aWV3TWF0cml4VW5jZW50ZXJlZCA9IHZpZXdNYXRyaXhVbmNlbnRlcmVkO1xuICAgIF90aGlzLnZpZXdDZW50ZXIgPSB2aWV3Q2VudGVyO1xuXG4gICAgLy8gU2F2ZSBwYXJhbWV0ZXJzXG4gICAgX3RoaXMubGF0aXR1ZGUgPSBsYXRpdHVkZTtcbiAgICBfdGhpcy5sb25naXR1ZGUgPSBsb25naXR1ZGU7XG4gICAgX3RoaXMuem9vbSA9IHpvb207XG4gICAgX3RoaXMucGl0Y2ggPSBwaXRjaDtcbiAgICBfdGhpcy5iZWFyaW5nID0gYmVhcmluZztcbiAgICBfdGhpcy5hbHRpdHVkZSA9IGFsdGl0dWRlO1xuXG4gICAgX3RoaXMuc2NhbGUgPSBzY2FsZTtcblxuICAgIF90aGlzLl9kaXN0YW5jZVNjYWxlcyA9IGRpc3RhbmNlU2NhbGVzO1xuXG4gICAgX3RoaXMuZ2V0RGlzdGFuY2VTY2FsZXMgPSBfdGhpcy5nZXREaXN0YW5jZVNjYWxlcy5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5tZXRlcnNUb0xuZ0xhdERlbHRhID0gX3RoaXMubWV0ZXJzVG9MbmdMYXREZWx0YS5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5sbmdMYXREZWx0YVRvTWV0ZXJzID0gX3RoaXMubG5nTGF0RGVsdGFUb01ldGVycy5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5hZGRNZXRlcnNUb0xuZ0xhdCA9IF90aGlzLmFkZE1ldGVyc1RvTG5nTGF0LmJpbmQoX3RoaXMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIGNvbXBsZXhpdHksIG1heC1zdGF0ZW1lbnRzICovXG5cbiAgLyoqXG4gICAqIFByb2plY3QgW2xuZyxsYXRdIG9uIHNwaGVyZSBvbnRvIFt4LHldIG9uIDUxMio1MTIgTWVyY2F0b3IgWm9vbSAwIHRpbGUuXG4gICAqIFBlcmZvcm1zIHRoZSBub25saW5lYXIgcGFydCBvZiB0aGUgd2ViIG1lcmNhdG9yIHByb2plY3Rpb24uXG4gICAqIFJlbWFpbmluZyBwcm9qZWN0aW9uIGlzIGRvbmUgd2l0aCA0eDQgbWF0cmljZXMgd2hpY2ggYWxzbyBoYW5kbGVzXG4gICAqIHBlcnNwZWN0aXZlLlxuICAgKlxuICAgKiBAcGFyYW0ge0FycmF5fSBsbmdMYXQgLSBbbG5nLCBsYXRdIGNvb3JkaW5hdGVzXG4gICAqICAgU3BlY2lmaWVzIGEgcG9pbnQgb24gdGhlIHNwaGVyZSB0byBwcm9qZWN0IG9udG8gdGhlIG1hcC5cbiAgICogQHJldHVybiB7QXJyYXl9IFt4LHldIGNvb3JkaW5hdGVzLlxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhXZWJNZXJjYXRvclZpZXdwb3J0LCBbe1xuICAgIGtleTogJ19wcm9qZWN0RmxhdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9wcm9qZWN0RmxhdChsbmdMYXQpIHtcbiAgICAgIHZhciBzY2FsZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdGhpcy5zY2FsZTtcblxuICAgICAgcmV0dXJuIHByb2plY3RGbGF0KGxuZ0xhdCwgc2NhbGUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVucHJvamVjdCB3b3JsZCBwb2ludCBbeCx5XSBvbiBtYXAgb250byB7bGF0LCBsb259IG9uIHNwaGVyZVxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R8VmVjdG9yfSB4eSAtIG9iamVjdCB3aXRoIHt4LHl9IG1lbWJlcnNcbiAgICAgKiAgcmVwcmVzZW50aW5nIHBvaW50IG9uIHByb2plY3RlZCBtYXAgcGxhbmVcbiAgICAgKiBAcmV0dXJuIHtHZW9Db29yZGluYXRlc30gLSBvYmplY3Qgd2l0aCB7bGF0LGxvbn0gb2YgcG9pbnQgb24gc3BoZXJlLlxuICAgICAqICAgSGFzIHRvQXJyYXkgbWV0aG9kIGlmIHlvdSBuZWVkIGEgR2VvSlNPTiBBcnJheS5cbiAgICAgKiAgIFBlciBjYXJ0b2dyYXBoaWMgdHJhZGl0aW9uLCBsYXQgYW5kIGxvbiBhcmUgc3BlY2lmaWVkIGFzIGRlZ3JlZXMuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ191bnByb2plY3RGbGF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3VucHJvamVjdEZsYXQoeHkpIHtcbiAgICAgIHZhciBzY2FsZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdGhpcy5zY2FsZTtcblxuICAgICAgcmV0dXJuIHVucHJvamVjdEZsYXQoeHksIHNjYWxlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXREaXN0YW5jZVNjYWxlcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldERpc3RhbmNlU2NhbGVzKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Rpc3RhbmNlU2NhbGVzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvbnZlcnRzIGEgbWV0ZXIgb2Zmc2V0IHRvIGEgbG5nbGF0IG9mZnNldFxuICAgICAqXG4gICAgICogTm90ZTogVXNlcyBzaW1wbGUgbGluZWFyIGFwcHJveGltYXRpb24gYXJvdW5kIHRoZSB2aWV3cG9ydCBjZW50ZXJcbiAgICAgKiBFcnJvciBpbmNyZWFzZXMgd2l0aCBzaXplIG9mIG9mZnNldCAocm91Z2hseSAxJSBwZXIgMTAwa20pXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1tOdW1iZXIsTnVtYmVyXXxbTnVtYmVyLE51bWJlcixOdW1iZXJdKSB4eXogLSBhcnJheSBvZiBtZXRlciBkZWx0YXNcbiAgICAgKiBAcmV0dXJuIHtbTnVtYmVyLE51bWJlcl18W051bWJlcixOdW1iZXIsTnVtYmVyXSkgLSBhcnJheSBvZiBbbG5nLGxhdCx6XSBkZWx0YXNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnbWV0ZXJzVG9MbmdMYXREZWx0YScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1ldGVyc1RvTG5nTGF0RGVsdGEoeHl6KSB7XG4gICAgICB2YXIgX3h5eiA9IF9zbGljZWRUb0FycmF5KHh5eiwgMyksXG4gICAgICAgICAgeCA9IF94eXpbMF0sXG4gICAgICAgICAgeSA9IF94eXpbMV0sXG4gICAgICAgICAgX3h5eiQgPSBfeHl6WzJdLFxuICAgICAgICAgIHogPSBfeHl6JCA9PT0gdW5kZWZpbmVkID8gMCA6IF94eXokO1xuXG4gICAgICB2YXIgX2Rpc3RhbmNlU2NhbGVzID0gdGhpcy5fZGlzdGFuY2VTY2FsZXMsXG4gICAgICAgICAgcGl4ZWxzUGVyTWV0ZXIgPSBfZGlzdGFuY2VTY2FsZXMucGl4ZWxzUGVyTWV0ZXIsXG4gICAgICAgICAgZGVncmVlc1BlclBpeGVsID0gX2Rpc3RhbmNlU2NhbGVzLmRlZ3JlZXNQZXJQaXhlbDtcblxuICAgICAgdmFyIGRlbHRhTG5nID0geCAqIHBpeGVsc1Blck1ldGVyWzBdICogZGVncmVlc1BlclBpeGVsWzBdO1xuICAgICAgdmFyIGRlbHRhTGF0ID0geSAqIHBpeGVsc1Blck1ldGVyWzFdICogZGVncmVlc1BlclBpeGVsWzFdO1xuICAgICAgcmV0dXJuIHh5ei5sZW5ndGggPT09IDIgPyBbZGVsdGFMbmcsIGRlbHRhTGF0XSA6IFtkZWx0YUxuZywgZGVsdGFMYXQsIHpdO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvbnZlcnRzIGEgbG5nbGF0IG9mZnNldCB0byBhIG1ldGVyIG9mZnNldFxuICAgICAqXG4gICAgICogTm90ZTogVXNlcyBzaW1wbGUgbGluZWFyIGFwcHJveGltYXRpb24gYXJvdW5kIHRoZSB2aWV3cG9ydCBjZW50ZXJcbiAgICAgKiBFcnJvciBpbmNyZWFzZXMgd2l0aCBzaXplIG9mIG9mZnNldCAocm91Z2hseSAxJSBwZXIgMTAwa20pXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1tOdW1iZXIsTnVtYmVyXXxbTnVtYmVyLE51bWJlcixOdW1iZXJdKSBkZWx0YUxuZ0xhdFogLSBhcnJheSBvZiBbbG5nLGxhdCx6XSBkZWx0YXNcbiAgICAgKiBAcmV0dXJuIHtbTnVtYmVyLE51bWJlcl18W051bWJlcixOdW1iZXIsTnVtYmVyXSkgLSBhcnJheSBvZiBtZXRlciBkZWx0YXNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnbG5nTGF0RGVsdGFUb01ldGVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxuZ0xhdERlbHRhVG9NZXRlcnMoZGVsdGFMbmdMYXRaKSB7XG4gICAgICB2YXIgX2RlbHRhTG5nTGF0WiA9IF9zbGljZWRUb0FycmF5KGRlbHRhTG5nTGF0WiwgMyksXG4gICAgICAgICAgZGVsdGFMbmcgPSBfZGVsdGFMbmdMYXRaWzBdLFxuICAgICAgICAgIGRlbHRhTGF0ID0gX2RlbHRhTG5nTGF0WlsxXSxcbiAgICAgICAgICBfZGVsdGFMbmdMYXRaJCA9IF9kZWx0YUxuZ0xhdFpbMl0sXG4gICAgICAgICAgZGVsdGFaID0gX2RlbHRhTG5nTGF0WiQgPT09IHVuZGVmaW5lZCA/IDAgOiBfZGVsdGFMbmdMYXRaJDtcblxuICAgICAgdmFyIF9kaXN0YW5jZVNjYWxlczIgPSB0aGlzLl9kaXN0YW5jZVNjYWxlcyxcbiAgICAgICAgICBwaXhlbHNQZXJEZWdyZWUgPSBfZGlzdGFuY2VTY2FsZXMyLnBpeGVsc1BlckRlZ3JlZSxcbiAgICAgICAgICBtZXRlcnNQZXJQaXhlbCA9IF9kaXN0YW5jZVNjYWxlczIubWV0ZXJzUGVyUGl4ZWw7XG5cbiAgICAgIHZhciBkZWx0YVggPSBkZWx0YUxuZyAqIHBpeGVsc1BlckRlZ3JlZVswXSAqIG1ldGVyc1BlclBpeGVsWzBdO1xuICAgICAgdmFyIGRlbHRhWSA9IGRlbHRhTGF0ICogcGl4ZWxzUGVyRGVncmVlWzFdICogbWV0ZXJzUGVyUGl4ZWxbMV07XG4gICAgICByZXR1cm4gZGVsdGFMbmdMYXRaLmxlbmd0aCA9PT0gMiA/IFtkZWx0YVgsIGRlbHRhWV0gOiBbZGVsdGFYLCBkZWx0YVksIGRlbHRhWl07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIGEgbWV0ZXIgZGVsdGEgdG8gYSBiYXNlIGxuZ2xhdCBjb29yZGluYXRlLCByZXR1cm5pbmcgYSBuZXcgbG5nbGF0IGFycmF5XG4gICAgICpcbiAgICAgKiBOb3RlOiBVc2VzIHNpbXBsZSBsaW5lYXIgYXBwcm94aW1hdGlvbiBhcm91bmQgdGhlIHZpZXdwb3J0IGNlbnRlclxuICAgICAqIEVycm9yIGluY3JlYXNlcyB3aXRoIHNpemUgb2Ygb2Zmc2V0IChyb3VnaGx5IDElIHBlciAxMDBrbSlcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7W051bWJlcixOdW1iZXJdfFtOdW1iZXIsTnVtYmVyLE51bWJlcl0pIGxuZ0xhdFogLSBiYXNlIGNvb3JkaW5hdGVcbiAgICAgKiBAcGFyYW0ge1tOdW1iZXIsTnVtYmVyXXxbTnVtYmVyLE51bWJlcixOdW1iZXJdKSB4eXogLSBhcnJheSBvZiBtZXRlciBkZWx0YXNcbiAgICAgKiBAcmV0dXJuIHtbTnVtYmVyLE51bWJlcl18W051bWJlcixOdW1iZXIsTnVtYmVyXSkgYXJyYXkgb2YgW2xuZyxsYXQsel0gZGVsdGFzXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2FkZE1ldGVyc1RvTG5nTGF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkTWV0ZXJzVG9MbmdMYXQobG5nTGF0WiwgeHl6KSB7XG4gICAgICB2YXIgX2xuZ0xhdFogPSBfc2xpY2VkVG9BcnJheShsbmdMYXRaLCAzKSxcbiAgICAgICAgICBsbmcgPSBfbG5nTGF0WlswXSxcbiAgICAgICAgICBsYXQgPSBfbG5nTGF0WlsxXSxcbiAgICAgICAgICBfbG5nTGF0WiQgPSBfbG5nTGF0WlsyXSxcbiAgICAgICAgICBaID0gX2xuZ0xhdFokID09PSB1bmRlZmluZWQgPyAwIDogX2xuZ0xhdFokO1xuXG4gICAgICB2YXIgX21ldGVyc1RvTG5nTGF0RGVsdGEgPSB0aGlzLm1ldGVyc1RvTG5nTGF0RGVsdGEoeHl6KSxcbiAgICAgICAgICBfbWV0ZXJzVG9MbmdMYXREZWx0YTIgPSBfc2xpY2VkVG9BcnJheShfbWV0ZXJzVG9MbmdMYXREZWx0YSwgMyksXG4gICAgICAgICAgZGVsdGFMbmcgPSBfbWV0ZXJzVG9MbmdMYXREZWx0YTJbMF0sXG4gICAgICAgICAgZGVsdGFMYXQgPSBfbWV0ZXJzVG9MbmdMYXREZWx0YTJbMV0sXG4gICAgICAgICAgX21ldGVyc1RvTG5nTGF0RGVsdGEzID0gX21ldGVyc1RvTG5nTGF0RGVsdGEyWzJdLFxuICAgICAgICAgIGRlbHRhWiA9IF9tZXRlcnNUb0xuZ0xhdERlbHRhMyA9PT0gdW5kZWZpbmVkID8gMCA6IF9tZXRlcnNUb0xuZ0xhdERlbHRhMztcblxuICAgICAgcmV0dXJuIGxuZ0xhdFoubGVuZ3RoID09PSAyID8gW2xuZyArIGRlbHRhTG5nLCBsYXQgKyBkZWx0YUxhdF0gOiBbbG5nICsgZGVsdGFMbmcsIGxhdCArIGRlbHRhTGF0LCBaICsgZGVsdGFaXTtcbiAgICB9XG5cbiAgICAvLyBJTlRFUk5BTCBNRVRIT0RTXG5cbiAgfSwge1xuICAgIGtleTogJ19nZXRQYXJhbXMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0UGFyYW1zKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Rpc3RhbmNlU2NhbGVzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBXZWJNZXJjYXRvclZpZXdwb3J0O1xufShWaWV3cG9ydCk7XG5cbi8qKlxuICogUHJvamVjdCBbbG5nLGxhdF0gb24gc3BoZXJlIG9udG8gW3gseV0gb24gNTEyKjUxMiBNZXJjYXRvciBab29tIDAgdGlsZS5cbiAqIFBlcmZvcm1zIHRoZSBub25saW5lYXIgcGFydCBvZiB0aGUgd2ViIG1lcmNhdG9yIHByb2plY3Rpb24uXG4gKiBSZW1haW5pbmcgcHJvamVjdGlvbiBpcyBkb25lIHdpdGggNHg0IG1hdHJpY2VzIHdoaWNoIGFsc28gaGFuZGxlc1xuICogcGVyc3BlY3RpdmUuXG4gKlxuICogQHBhcmFtIHtBcnJheX0gbG5nTGF0IC0gW2xuZywgbGF0XSBjb29yZGluYXRlc1xuICogICBTcGVjaWZpZXMgYSBwb2ludCBvbiB0aGUgc3BoZXJlIHRvIHByb2plY3Qgb250byB0aGUgbWFwLlxuICogQHJldHVybiB7QXJyYXl9IFt4LHldIGNvb3JkaW5hdGVzLlxuICovXG5cblxuZXhwb3J0IGRlZmF1bHQgV2ViTWVyY2F0b3JWaWV3cG9ydDtcbmZ1bmN0aW9uIHByb2plY3RGbGF0KF9yZWYyLCBzY2FsZSkge1xuICB2YXIgX3JlZjMgPSBfc2xpY2VkVG9BcnJheShfcmVmMiwgMiksXG4gICAgICBsbmcgPSBfcmVmM1swXSxcbiAgICAgIGxhdCA9IF9yZWYzWzFdO1xuXG4gIHNjYWxlID0gc2NhbGUgKiBXT1JMRF9TQ0FMRTtcbiAgdmFyIGxhbWJkYTIgPSBsbmcgKiBERUdSRUVTX1RPX1JBRElBTlM7XG4gIHZhciBwaGkyID0gbGF0ICogREVHUkVFU19UT19SQURJQU5TO1xuICB2YXIgeCA9IHNjYWxlICogKGxhbWJkYTIgKyBQSSk7XG4gIHZhciB5ID0gc2NhbGUgKiAoUEkgLSBNYXRoLmxvZyhNYXRoLnRhbihQSV80ICsgcGhpMiAqIDAuNSkpKTtcbiAgcmV0dXJuIFt4LCB5XTtcbn1cblxuLyoqXG4gKiBVbnByb2plY3Qgd29ybGQgcG9pbnQgW3gseV0gb24gbWFwIG9udG8ge2xhdCwgbG9ufSBvbiBzcGhlcmVcbiAqXG4gKiBAcGFyYW0ge29iamVjdHxWZWN0b3J9IHh5IC0gb2JqZWN0IHdpdGgge3gseX0gbWVtYmVyc1xuICogIHJlcHJlc2VudGluZyBwb2ludCBvbiBwcm9qZWN0ZWQgbWFwIHBsYW5lXG4gKiBAcmV0dXJuIHtHZW9Db29yZGluYXRlc30gLSBvYmplY3Qgd2l0aCB7bGF0LGxvbn0gb2YgcG9pbnQgb24gc3BoZXJlLlxuICogICBIYXMgdG9BcnJheSBtZXRob2QgaWYgeW91IG5lZWQgYSBHZW9KU09OIEFycmF5LlxuICogICBQZXIgY2FydG9ncmFwaGljIHRyYWRpdGlvbiwgbGF0IGFuZCBsb24gYXJlIHNwZWNpZmllZCBhcyBkZWdyZWVzLlxuICovXG5mdW5jdGlvbiB1bnByb2plY3RGbGF0KF9yZWY0LCBzY2FsZSkge1xuICB2YXIgX3JlZjUgPSBfc2xpY2VkVG9BcnJheShfcmVmNCwgMiksXG4gICAgICB4ID0gX3JlZjVbMF0sXG4gICAgICB5ID0gX3JlZjVbMV07XG5cbiAgc2NhbGUgPSBzY2FsZSAqIFdPUkxEX1NDQUxFO1xuICB2YXIgbGFtYmRhMiA9IHggLyBzY2FsZSAtIFBJO1xuICB2YXIgcGhpMiA9IDIgKiAoTWF0aC5hdGFuKE1hdGguZXhwKFBJIC0geSAvIHNjYWxlKSkgLSBQSV80KTtcbiAgcmV0dXJuIFtsYW1iZGEyICogUkFESUFOU19UT19ERUdSRUVTLCBwaGkyICogUkFESUFOU19UT19ERUdSRUVTXTtcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGUgZGlzdGFuY2Ugc2NhbGVzIGluIG1ldGVycyBhcm91bmQgY3VycmVudCBsYXQvbG9uLCBib3RoIGZvclxuICogZGVncmVlcyBhbmQgcGl4ZWxzLlxuICogSW4gbWVyY2F0b3IgcHJvamVjdGlvbiBtb2RlLCB0aGUgZGlzdGFuY2Ugc2NhbGVzIHZhcnkgc2lnbmlmaWNhbnRseVxuICogd2l0aCBsYXRpdHVkZS5cbiAqL1xuZnVuY3Rpb24gY2FsY3VsYXRlRGlzdGFuY2VTY2FsZXMoX3JlZjYpIHtcbiAgdmFyIGxhdGl0dWRlID0gX3JlZjYubGF0aXR1ZGUsXG4gICAgICBsb25naXR1ZGUgPSBfcmVmNi5sb25naXR1ZGUsXG4gICAgICBzY2FsZSA9IF9yZWY2LnNjYWxlO1xuXG4gIC8vIEFwcHJveGltYXRlbHkgMTExa20gcGVyIGRlZ3JlZSBhdCBlcXVhdG9yXG4gIHZhciBNRVRFUlNfUEVSX0RFR1JFRSA9IDExMTAwMDtcblxuICB2YXIgbGF0Q29zaW5lID0gTWF0aC5jb3MobGF0aXR1ZGUgKiBNYXRoLlBJIC8gMTgwKTtcblxuICB2YXIgbWV0ZXJzUGVyRGVncmVlID0gTUVURVJTX1BFUl9ERUdSRUUgKiBsYXRDb3NpbmU7XG5cbiAgLy8gQ2FsY3VsYXRlIG51bWJlciBvZiBwaXhlbHMgb2NjdXBpZWQgYnkgb25lIGRlZ3JlZSBsb25naXR1ZGVcbiAgLy8gYXJvdW5kIGN1cnJlbnQgbGF0L2xvblxuICB2YXIgcGl4ZWxzUGVyRGVncmVlWCA9IHZlYzIuZGlzdGFuY2UocHJvamVjdEZsYXQoW2xvbmdpdHVkZSArIDAuNSwgbGF0aXR1ZGVdKSwgcHJvamVjdEZsYXQoW2xvbmdpdHVkZSAtIDAuNSwgbGF0aXR1ZGVdKSk7XG4gIC8vIENhbGN1bGF0ZSBudW1iZXIgb2YgcGl4ZWxzIG9jY3VwaWVkIGJ5IG9uZSBkZWdyZWUgbGF0aXR1ZGVcbiAgLy8gYXJvdW5kIGN1cnJlbnQgbGF0L2xvblxuICB2YXIgcGl4ZWxzUGVyRGVncmVlWSA9IHZlYzIuZGlzdGFuY2UocHJvamVjdEZsYXQoW2xvbmdpdHVkZSwgbGF0aXR1ZGUgKyAwLjVdKSwgcHJvamVjdEZsYXQoW2xvbmdpdHVkZSwgbGF0aXR1ZGUgLSAwLjVdKSk7XG5cbiAgdmFyIHBpeGVsc1Blck1ldGVyWCA9IHBpeGVsc1BlckRlZ3JlZVggLyBtZXRlcnNQZXJEZWdyZWU7XG4gIHZhciBwaXhlbHNQZXJNZXRlclkgPSBwaXhlbHNQZXJEZWdyZWVZIC8gbWV0ZXJzUGVyRGVncmVlO1xuICB2YXIgcGl4ZWxzUGVyTWV0ZXJaID0gKHBpeGVsc1Blck1ldGVyWCArIHBpeGVsc1Blck1ldGVyWSkgLyAyO1xuICAvLyBjb25zdCBwaXhlbHNQZXJNZXRlciA9IFtwaXhlbHNQZXJNZXRlclgsIHBpeGVsc1Blck1ldGVyWSwgcGl4ZWxzUGVyTWV0ZXJaXTtcblxuICB2YXIgd29ybGRTaXplID0gVElMRV9TSVpFICogc2NhbGU7XG4gIHZhciBhbHRQaXhlbHNQZXJNZXRlciA9IHdvcmxkU2l6ZSAvICg0ZTcgKiBsYXRDb3NpbmUpO1xuICB2YXIgcGl4ZWxzUGVyTWV0ZXIgPSBbYWx0UGl4ZWxzUGVyTWV0ZXIsIGFsdFBpeGVsc1Blck1ldGVyLCBhbHRQaXhlbHNQZXJNZXRlcl07XG4gIHZhciBtZXRlcnNQZXJQaXhlbCA9IFsxIC8gYWx0UGl4ZWxzUGVyTWV0ZXIsIDEgLyBhbHRQaXhlbHNQZXJNZXRlciwgMSAvIHBpeGVsc1Blck1ldGVyWl07XG5cbiAgdmFyIHBpeGVsc1BlckRlZ3JlZSA9IFtwaXhlbHNQZXJEZWdyZWVYLCBwaXhlbHNQZXJEZWdyZWVZLCBwaXhlbHNQZXJNZXRlclpdO1xuICB2YXIgZGVncmVlc1BlclBpeGVsID0gWzEgLyBwaXhlbHNQZXJEZWdyZWVYLCAxIC8gcGl4ZWxzUGVyRGVncmVlWSwgMSAvIHBpeGVsc1Blck1ldGVyWl07XG5cbiAgLy8gTWFpbiByZXN1bHRzLCB1c2VkIGZvciBjb252ZXJ0aW5nIG1ldGVycyB0byBsYXRsbmcgZGVsdGFzIGFuZCBzY2FsaW5nIG9mZnNldHNcbiAgcmV0dXJuIHtcbiAgICBwaXhlbHNQZXJNZXRlcjogcGl4ZWxzUGVyTWV0ZXIsXG4gICAgbWV0ZXJzUGVyUGl4ZWw6IG1ldGVyc1BlclBpeGVsLFxuICAgIHBpeGVsc1BlckRlZ3JlZTogcGl4ZWxzUGVyRGVncmVlLFxuICAgIGRlZ3JlZXNQZXJQaXhlbDogZGVncmVlc1BlclBpeGVsXG4gIH07XG59XG5cbi8vIEFUVFJJQlVUSU9OOlxuLy8gdmlldyBhbmQgcHJvamVjdGlvbiBtYXRyaXggY3JlYXRpb24gaXMgaW50ZW50aW9uYWxseSBrZXB0IGNvbXBhdGlibGUgd2l0aFxuLy8gbWFwYm94LWdsJ3MgaW1wbGVtZW50YXRpb24gdG8gZW5zdXJlIHRoYXQgc2VhbWxlc3MgaW50ZXJvcGVyYXRpb25cbi8vIHdpdGggbWFwYm94IGFuZCByZWFjdC1tYXAtZ2wuIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL21hcGJveC9tYXBib3gtZ2wtanNcbmZ1bmN0aW9uIG1ha2VQcm9qZWN0aW9uTWF0cml4RnJvbU1lcmNhdG9yUGFyYW1zKF9yZWY3KSB7XG4gIHZhciB3aWR0aCA9IF9yZWY3LndpZHRoLFxuICAgICAgaGVpZ2h0ID0gX3JlZjcuaGVpZ2h0LFxuICAgICAgcGl0Y2ggPSBfcmVmNy5waXRjaCxcbiAgICAgIGFsdGl0dWRlID0gX3JlZjcuYWx0aXR1ZGU7XG5cbiAgdmFyIHBpdGNoUmFkaWFucyA9IHBpdGNoICogREVHUkVFU19UT19SQURJQU5TO1xuXG4gIC8vIFBST0pFQ1RJT04gTUFUUklYOiBQUk9KRUNUUyBGUk9NIENBTUVSQSBTUEFDRSBUTyBDTElQU1BBQ0VcbiAgLy8gRmluZCB0aGUgZGlzdGFuY2UgZnJvbSB0aGUgY2VudGVyIHBvaW50IHRvIHRoZSBjZW50ZXIgdG9wXG4gIC8vIGluIGFsdGl0dWRlIHVuaXRzIHVzaW5nIGxhdyBvZiBzaW5lcy5cbiAgdmFyIGhhbGZGb3YgPSBNYXRoLmF0YW4oMC41IC8gYWx0aXR1ZGUpO1xuICB2YXIgdG9wSGFsZlN1cmZhY2VEaXN0YW5jZSA9IE1hdGguc2luKGhhbGZGb3YpICogYWx0aXR1ZGUgLyBNYXRoLnNpbihNYXRoLlBJIC8gMiAtIHBpdGNoUmFkaWFucyAtIGhhbGZGb3YpO1xuXG4gIC8vIENhbGN1bGF0ZSB6IHZhbHVlIG9mIHRoZSBmYXJ0aGVzdCBmcmFnbWVudCB0aGF0IHNob3VsZCBiZSByZW5kZXJlZC5cbiAgdmFyIGZhclogPSBNYXRoLmNvcyhNYXRoLlBJIC8gMiAtIHBpdGNoUmFkaWFucykgKiB0b3BIYWxmU3VyZmFjZURpc3RhbmNlICsgYWx0aXR1ZGU7XG5cbiAgdmFyIHByb2plY3Rpb25NYXRyaXggPSBtYXQ0LnBlcnNwZWN0aXZlKGNyZWF0ZU1hdDQoKSwgMiAqIE1hdGguYXRhbihoZWlnaHQgLyAyIC8gYWx0aXR1ZGUpLCAvLyBmb3YgaW4gcmFkaWFuc1xuICB3aWR0aCAvIGhlaWdodCwgLy8gYXNwZWN0IHJhdGlvXG4gIDAuMSwgLy8gbmVhciBwbGFuZVxuICBmYXJaICogMTAuMCAvLyBmYXIgcGxhbmVcbiAgKTtcblxuICByZXR1cm4gcHJvamVjdGlvbk1hdHJpeDtcbn1cblxuZnVuY3Rpb24gbWFrZVZpZXdNYXRyaXhGcm9tTWVyY2F0b3JQYXJhbXMoX3JlZjgpIHtcbiAgdmFyIHdpZHRoID0gX3JlZjgud2lkdGgsXG4gICAgICBoZWlnaHQgPSBfcmVmOC5oZWlnaHQsXG4gICAgICBsb25naXR1ZGUgPSBfcmVmOC5sb25naXR1ZGUsXG4gICAgICBsYXRpdHVkZSA9IF9yZWY4LmxhdGl0dWRlLFxuICAgICAgem9vbSA9IF9yZWY4Lnpvb20sXG4gICAgICBwaXRjaCA9IF9yZWY4LnBpdGNoLFxuICAgICAgYmVhcmluZyA9IF9yZWY4LmJlYXJpbmcsXG4gICAgICBhbHRpdHVkZSA9IF9yZWY4LmFsdGl0dWRlO1xuXG4gIC8vIENlbnRlciB4LCB5XG4gIHZhciBzY2FsZSA9IE1hdGgucG93KDIsIHpvb20pO1xuICAvLyBWSUVXIE1BVFJJWDogUFJPSkVDVFMgRlJPTSBWSVJUVUFMIFBJWEVMUyBUTyBDQU1FUkEgU1BBQ0VcbiAgLy8gTm90ZTogQXMgdXN1YWwsIG1hdHJpeCBvcGVyYXRpb24gb3JkZXJzIHNob3VsZCBiZSByZWFkIGluIHJldmVyc2VcbiAgLy8gc2luY2UgdmVjdG9ycyB3aWxsIGJlIG11bHRpcGxpZWQgZnJvbSB0aGUgcmlnaHQgZHVyaW5nIHRyYW5zZm9ybWF0aW9uXG4gIHZhciB2bSA9IGNyZWF0ZU1hdDQoKTtcblxuICAvLyBNb3ZlIGNhbWVyYSB0byBhbHRpdHVkZVxuICBtYXQ0LnRyYW5zbGF0ZSh2bSwgdm0sIFswLCAwLCAtYWx0aXR1ZGVdKTtcblxuICAvLyBBZnRlciB0aGUgcm90YXRlWCwgeiB2YWx1ZXMgYXJlIGluIHBpeGVsIHVuaXRzLiBDb252ZXJ0IHRoZW0gdG9cbiAgLy8gYWx0aXR1ZGUgdW5pdHMuIDEgYWx0aXR1ZGUgdW5pdCA9IHRoZSBzY3JlZW4gaGVpZ2h0LlxuICBtYXQ0LnNjYWxlKHZtLCB2bSwgWzEsIC0xLCAxIC8gaGVpZ2h0XSk7XG5cbiAgLy8gUm90YXRlIGJ5IGJlYXJpbmcsIGFuZCB0aGVuIGJ5IHBpdGNoICh3aGljaCB0aWx0cyB0aGUgdmlldylcbiAgbWF0NC5yb3RhdGVYKHZtLCB2bSwgcGl0Y2ggKiBERUdSRUVTX1RPX1JBRElBTlMpO1xuICBtYXQ0LnJvdGF0ZVoodm0sIHZtLCAtYmVhcmluZyAqIERFR1JFRVNfVE9fUkFESUFOUyk7XG5cbiAgdmFyIF9wcm9qZWN0RmxhdDIgPSBwcm9qZWN0RmxhdChbbG9uZ2l0dWRlLCBsYXRpdHVkZV0sIHNjYWxlKSxcbiAgICAgIF9wcm9qZWN0RmxhdDMgPSBfc2xpY2VkVG9BcnJheShfcHJvamVjdEZsYXQyLCAyKSxcbiAgICAgIGNlbnRlclggPSBfcHJvamVjdEZsYXQzWzBdLFxuICAgICAgY2VudGVyWSA9IF9wcm9qZWN0RmxhdDNbMV07XG5cbiAgdmFyIGNlbnRlciA9IFstY2VudGVyWCwgLWNlbnRlclksIDAsIDFdO1xuICB2YXIgdmlld0NlbnRlciA9IHZlYzQudHJhbnNmb3JtTWF0NChbXSwgY2VudGVyLCB2bSk7XG5cbiAgdmFyIHZtQ2VudGVyZWQgPSBtYXQ0LnRyYW5zbGF0ZShbXSwgdm0sIFstY2VudGVyWCwgLWNlbnRlclksIDBdKTtcblxuICByZXR1cm4ge1xuICAgIHZpZXdNYXRyaXg6IHZtQ2VudGVyZWQsXG4gICAgdmlld01hdHJpeFVuY2VudGVyZWQ6IHZtLFxuICAgIHZpZXdDZW50ZXI6IHZpZXdDZW50ZXJcbiAgfTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9saWIvdmlld3BvcnRzL3dlYi1tZXJjYXRvci12aWV3cG9ydC5qc1xuLy8gbW9kdWxlIGlkID0gNjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 70 */
/* exports provided: default */
/* exports used: default */
/*!*************************************!*\
  !*** ./src/react/webgl-renderer.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ 30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__autobind__ = __webpack_require__(/*! ./autobind */ 12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_luma_gl__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global window */\n\n\n\n/* global requestAnimationFrame, cancelAnimationFrame */\n\nvar DEFAULT_PIXEL_RATIO = typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\nvar propTypes = {\n  id: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].string.isRequired,\n\n  width: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].number.isRequired,\n  height: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].number.isRequired,\n  style: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].object,\n\n  pixelRatio: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].number,\n  viewport: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].object.isRequired,\n  events: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].object,\n  gl: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].object,\n  glOptions: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].object,\n  debug: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].bool,\n\n  onInitializationFailed: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func,\n  onRendererInitialized: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func.isRequired,\n  onRenderFrame: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func,\n  onMouseMove: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func,\n  onClick: __WEBPACK_IMPORTED_MODULE_0_react__[\"PropTypes\"].func\n};\n\nvar defaultProps = {\n  style: {},\n  gl: null,\n  glOptions: { preserveDrawingBuffer: true },\n  debug: false,\n  pixelRatio: DEFAULT_PIXEL_RATIO,\n\n  onInitializationFailed: function onInitializationFailed(error) {\n    throw error;\n  },\n  onRendererInitialized: function onRendererInitialized() {},\n  onRenderFrame: function onRenderFrame() {}\n};\n\nvar WebGLRenderer = function (_React$Component) {\n  _inherits(WebGLRenderer, _React$Component);\n\n  /**\n   * @classdesc\n   * Small react component that uses Luma.GL to initialize a WebGL context.\n   *\n   * Returns a canvas, creates a basic WebGL context\n   * sets up a renderloop, and registers some basic event handlers\n   *\n   * @class\n   * @param {Object} props - see propTypes documentation\n   */\n  function WebGLRenderer(props) {\n    _classCallCheck(this, WebGLRenderer);\n\n    var _this = _possibleConstructorReturn(this, (WebGLRenderer.__proto__ || Object.getPrototypeOf(WebGLRenderer)).call(this, props));\n\n    _this.state = {};\n    _this._animationFrame = null;\n    _this.gl = null;\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__autobind__[\"a\" /* default */])(_this);\n    return _this;\n  }\n\n  _createClass(WebGLRenderer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var canvas = this.refs.overlay;\n      this._initWebGL(canvas);\n      this._animationLoop();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._cancelAnimationLoop();\n    }\n\n    /**\n     * Initialize LumaGL library and through it WebGL\n     * @param {string} canvas\n     */\n\n  }, {\n    key: '_initWebGL',\n    value: function _initWebGL(canvas) {\n      var _props = this.props,\n          debug = _props.debug,\n          glOptions = _props.glOptions;\n\n      // Create context if not supplied\n\n      var gl = this.props.gl;\n      if (!gl) {\n        try {\n          gl = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_luma_gl__[\"createGLContext\"])(Object.assign({ canvas: canvas, debug: debug }, glOptions));\n        } catch (error) {\n          this.props.onInitializationFailed(error);\n          return;\n        }\n      }\n\n      this.gl = gl;\n\n      // Call callback last, in case it throws\n      this.props.onRendererInitialized({ canvas: canvas, gl: gl });\n    }\n\n    /**\n     * Main WebGL animation loop\n     */\n\n  }, {\n    key: '_animationLoop',\n    value: function _animationLoop() {\n      this._renderFrame();\n      // Keep registering ourselves for the next animation frame\n      if (typeof window !== 'undefined') {\n        this._animationFrame = requestAnimationFrame(this._animationLoop);\n      }\n    }\n  }, {\n    key: '_cancelAnimationLoop',\n    value: function _cancelAnimationLoop() {\n      if (this._animationFrame) {\n        cancelAnimationFrame(this._animationFrame);\n      }\n    }\n\n    // Updates WebGL viewport to latest props\n    // for clean logging, only calls gl.viewport if props have changed\n\n  }, {\n    key: '_updateGLViewport',\n    value: function _updateGLViewport() {\n      var _props$viewport = this.props.viewport,\n          x = _props$viewport.x,\n          y = _props$viewport.y,\n          w = _props$viewport.width,\n          h = _props$viewport.height;\n      var dpr = this.props.pixelRatio;\n      var gl = this.gl;\n\n\n      x = x * dpr;\n      y = y * dpr;\n      w = w * dpr;\n      h = h * dpr;\n\n      if (x !== this.x || y !== this.y || w !== this.w || h !== this.h) {\n        gl.viewport(x, y, w, h);\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n      }\n    }\n  }, {\n    key: '_renderFrame',\n    value: function _renderFrame() {\n      var _props$viewport2 = this.props.viewport,\n          width = _props$viewport2.width,\n          height = _props$viewport2.height;\n      var gl = this.gl;\n\n      // Check for reasons not to draw\n\n      if (!gl || !(width > 0) || !(height > 0)) {\n        return;\n      }\n\n      this._updateGLViewport();\n\n      // Call render callback\n      this.props.onRenderFrame({ gl: gl });\n\n      this.props.onAfterRender(this.refs.overlay);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          id = _props2.id,\n          width = _props2.width,\n          height = _props2.height,\n          pixelRatio = _props2.pixelRatio,\n          style = _props2.style;\n\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])('canvas', {\n        ref: 'overlay',\n        key: 'overlay',\n        id: id,\n        width: width * pixelRatio,\n        height: height * pixelRatio,\n        style: Object.assign({}, style, { width: width, height: height })\n      });\n    }\n  }]);\n\n  return WebGLRenderer;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = WebGLRenderer;\n\n\nWebGLRenderer.propTypes = propTypes;\nWebGLRenderer.defaultProps = defaultProps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 71 */
/* exports provided: checkRendererVendor, getPlatformShaderDefines, assembleShaders */
/* exports used: assembleShaders */
/*!**********************************************!*\
  !*** ./src/shader-utils/assemble-shaders.js ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl__ = __webpack_require__(/*! luma.gl */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_luma_gl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_luma_gl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shader_chunks__ = __webpack_require__(/*! ./shader-chunks */ 28);\n/* unused harmony export checkRendererVendor */\n/* unused harmony export getPlatformShaderDefines */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = assembleShaders;\n\n\n// Load shader chunks\n// import SHADER_CHUNKS from '../../dist/shaderlib/shader-chunks';\n\n\nfunction checkRendererVendor(debugInfo, gpuVendor) {\n  var vendor = debugInfo.vendor,\n      renderer = debugInfo.renderer;\n\n  var result = void 0;\n  switch (gpuVendor) {\n    case 'nvidia':\n      result = vendor.match(/NVIDIA/i) || renderer.match(/NVIDIA/i);\n      break;\n    case 'intel':\n      result = vendor.match(/INTEL/i) || renderer.match(/INTEL/i);\n      break;\n    case 'amd':\n      result = vendor.match(/AMD/i) || renderer.match(/AMD/i) || vendor.match(/ATI/i) || renderer.match(/ATI/i);\n      break;\n    default:\n      result = false;\n  }\n  return result;\n}\n\nfunction getPlatformShaderDefines(gl) {\n  /* eslint-disable */\n  var platformDefines = '';\n  var debugInfo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_luma_gl__[\"glGetDebugInfo\"])(gl);\n\n  if (checkRendererVendor(debugInfo, 'nvidia')) {\n    platformDefines += '#define NVIDIA_GPU\\n#define NVIDIA_FP64_WORKAROUND 1\\n#define NVIDIA_EQUATION_WORKAROUND 1\\n';\n  } else if (checkRendererVendor(debugInfo, 'intel')) {\n    platformDefines += '#define INTEL_GPU\\n#define INTEL_FP64_WORKAROUND 1\\n#define NVIDIA_EQUATION_WORKAROUND 1\\n #define INTEL_TAN_WORKAROUND 1\\n';\n  } else if (checkRendererVendor(debugInfo, 'amd')) {\n    platformDefines += '#define AMD_GPU\\n';\n  } else {\n    platformDefines += '#define DEFAULT_GPU\\n';\n  }\n\n  return platformDefines;\n}\n\nfunction assembleShader(gl) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _opts = opts,\n      vs = _opts.vs,\n      _opts$project = _opts.project,\n      project = _opts$project === undefined ? true : _opts$project,\n      _opts$project2 = _opts.project64,\n      project64 = _opts$project2 === undefined ? false : _opts$project2;\n  var _opts2 = opts,\n      _opts2$fp = _opts2.fp64,\n      fp64 = _opts2$fp === undefined ? false : _opts2$fp;\n\n  if (project64 === true) {\n    fp64 = true;\n  }\n  var source = getPlatformShaderDefines(gl) + '\\n';\n  opts = Object.assign({}, opts, { project: project, project64: project64, fp64: fp64 });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = Object.keys(__WEBPACK_IMPORTED_MODULE_1__shader_chunks__)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var chunkName = _step.value;\n\n      if (opts[chunkName]) {\n        source += __WEBPACK_IMPORTED_MODULE_1__shader_chunks__[chunkName].source + '\\n';\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = (opts.modules || [])[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _chunkName = _step2.value;\n\n      if (__WEBPACK_IMPORTED_MODULE_1__shader_chunks__[_chunkName]) {\n        source += __WEBPACK_IMPORTED_MODULE_1__shader_chunks__[_chunkName].source + '\\n';\n      } else {\n        throw new Error('Shader module ' + _chunkName + ' not found');\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  source += vs;\n  return source;\n}\n\nfunction assembleShaders(gl, opts) {\n  return {\n    gl: gl,\n    vs: assembleShader(gl, opts),\n    fs: opts.fs\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hhZGVyLXV0aWxzL2Fzc2VtYmxlLXNoYWRlcnMuanM/NGM1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnbEdldERlYnVnSW5mbyB9IGZyb20gJ2x1bWEuZ2wnO1xuXG4vLyBMb2FkIHNoYWRlciBjaHVua3Ncbi8vIGltcG9ydCBTSEFERVJfQ0hVTktTIGZyb20gJy4uLy4uL2Rpc3Qvc2hhZGVybGliL3NoYWRlci1jaHVua3MnO1xuaW1wb3J0ICogYXMgU0hBREVSX0NIVU5LUyBmcm9tICcuL3NoYWRlci1jaHVua3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tSZW5kZXJlclZlbmRvcihkZWJ1Z0luZm8sIGdwdVZlbmRvcikge1xuICB2YXIgdmVuZG9yID0gZGVidWdJbmZvLnZlbmRvcixcbiAgICAgIHJlbmRlcmVyID0gZGVidWdJbmZvLnJlbmRlcmVyO1xuXG4gIHZhciByZXN1bHQgPSB2b2lkIDA7XG4gIHN3aXRjaCAoZ3B1VmVuZG9yKSB7XG4gICAgY2FzZSAnbnZpZGlhJzpcbiAgICAgIHJlc3VsdCA9IHZlbmRvci5tYXRjaCgvTlZJRElBL2kpIHx8IHJlbmRlcmVyLm1hdGNoKC9OVklESUEvaSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdpbnRlbCc6XG4gICAgICByZXN1bHQgPSB2ZW5kb3IubWF0Y2goL0lOVEVML2kpIHx8IHJlbmRlcmVyLm1hdGNoKC9JTlRFTC9pKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2FtZCc6XG4gICAgICByZXN1bHQgPSB2ZW5kb3IubWF0Y2goL0FNRC9pKSB8fCByZW5kZXJlci5tYXRjaCgvQU1EL2kpIHx8IHZlbmRvci5tYXRjaCgvQVRJL2kpIHx8IHJlbmRlcmVyLm1hdGNoKC9BVEkvaSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBsYXRmb3JtU2hhZGVyRGVmaW5lcyhnbCkge1xuICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICB2YXIgcGxhdGZvcm1EZWZpbmVzID0gJyc7XG4gIHZhciBkZWJ1Z0luZm8gPSBnbEdldERlYnVnSW5mbyhnbCk7XG5cbiAgaWYgKGNoZWNrUmVuZGVyZXJWZW5kb3IoZGVidWdJbmZvLCAnbnZpZGlhJykpIHtcbiAgICBwbGF0Zm9ybURlZmluZXMgKz0gJyNkZWZpbmUgTlZJRElBX0dQVVxcbiNkZWZpbmUgTlZJRElBX0ZQNjRfV09SS0FST1VORCAxXFxuI2RlZmluZSBOVklESUFfRVFVQVRJT05fV09SS0FST1VORCAxXFxuJztcbiAgfSBlbHNlIGlmIChjaGVja1JlbmRlcmVyVmVuZG9yKGRlYnVnSW5mbywgJ2ludGVsJykpIHtcbiAgICBwbGF0Zm9ybURlZmluZXMgKz0gJyNkZWZpbmUgSU5URUxfR1BVXFxuI2RlZmluZSBJTlRFTF9GUDY0X1dPUktBUk9VTkQgMVxcbiNkZWZpbmUgTlZJRElBX0VRVUFUSU9OX1dPUktBUk9VTkQgMVxcbiAjZGVmaW5lIElOVEVMX1RBTl9XT1JLQVJPVU5EIDFcXG4nO1xuICB9IGVsc2UgaWYgKGNoZWNrUmVuZGVyZXJWZW5kb3IoZGVidWdJbmZvLCAnYW1kJykpIHtcbiAgICBwbGF0Zm9ybURlZmluZXMgKz0gJyNkZWZpbmUgQU1EX0dQVVxcbic7XG4gIH0gZWxzZSB7XG4gICAgcGxhdGZvcm1EZWZpbmVzICs9ICcjZGVmaW5lIERFRkFVTFRfR1BVXFxuJztcbiAgfVxuXG4gIHJldHVybiBwbGF0Zm9ybURlZmluZXM7XG59XG5cbmZ1bmN0aW9uIGFzc2VtYmxlU2hhZGVyKGdsKSB7XG4gIHZhciBvcHRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIF9vcHRzID0gb3B0cyxcbiAgICAgIHZzID0gX29wdHMudnMsXG4gICAgICBfb3B0cyRwcm9qZWN0ID0gX29wdHMucHJvamVjdCxcbiAgICAgIHByb2plY3QgPSBfb3B0cyRwcm9qZWN0ID09PSB1bmRlZmluZWQgPyB0cnVlIDogX29wdHMkcHJvamVjdCxcbiAgICAgIF9vcHRzJHByb2plY3QyID0gX29wdHMucHJvamVjdDY0LFxuICAgICAgcHJvamVjdDY0ID0gX29wdHMkcHJvamVjdDIgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdHMkcHJvamVjdDI7XG4gIHZhciBfb3B0czIgPSBvcHRzLFxuICAgICAgX29wdHMyJGZwID0gX29wdHMyLmZwNjQsXG4gICAgICBmcDY0ID0gX29wdHMyJGZwID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRzMiRmcDtcblxuICBpZiAocHJvamVjdDY0ID09PSB0cnVlKSB7XG4gICAgZnA2NCA9IHRydWU7XG4gIH1cbiAgdmFyIHNvdXJjZSA9IGdldFBsYXRmb3JtU2hhZGVyRGVmaW5lcyhnbCkgKyAnXFxuJztcbiAgb3B0cyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdHMsIHsgcHJvamVjdDogcHJvamVjdCwgcHJvamVjdDY0OiBwcm9qZWN0NjQsIGZwNjQ6IGZwNjQgfSk7XG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvciA9IE9iamVjdC5rZXlzKFNIQURFUl9DSFVOS1MpW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgdmFyIGNodW5rTmFtZSA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICBpZiAob3B0c1tjaHVua05hbWVdKSB7XG4gICAgICAgIHNvdXJjZSArPSBTSEFERVJfQ0hVTktTW2NodW5rTmFtZV0uc291cmNlICsgJ1xcbic7XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG4gICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7XG4gIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yMiA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSAob3B0cy5tb2R1bGVzIHx8IFtdKVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwMjsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IChfc3RlcDIgPSBfaXRlcmF0b3IyLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZSkge1xuICAgICAgdmFyIF9jaHVua05hbWUgPSBfc3RlcDIudmFsdWU7XG5cbiAgICAgIGlmIChTSEFERVJfQ0hVTktTW19jaHVua05hbWVdKSB7XG4gICAgICAgIHNvdXJjZSArPSBTSEFERVJfQ0hVTktTW19jaHVua05hbWVdLnNvdXJjZSArICdcXG4nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTaGFkZXIgbW9kdWxlICcgKyBfY2h1bmtOYW1lICsgJyBub3QgZm91bmQnKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7XG4gICAgX2l0ZXJhdG9yRXJyb3IyID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yICYmIF9pdGVyYXRvcjIucmV0dXJuKSB7XG4gICAgICAgIF9pdGVyYXRvcjIucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjIpIHtcbiAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHNvdXJjZSArPSB2cztcbiAgcmV0dXJuIHNvdXJjZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VtYmxlU2hhZGVycyhnbCwgb3B0cykge1xuICByZXR1cm4ge1xuICAgIGdsOiBnbCxcbiAgICB2czogYXNzZW1ibGVTaGFkZXIoZ2wsIG9wdHMpLFxuICAgIGZzOiBvcHRzLmZzXG4gIH07XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc2hhZGVyLXV0aWxzL2Fzc2VtYmxlLXNoYWRlcnMuanNcbi8vIG1vZHVsZSBpZCA9IDcxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 72 */
/* exports provided: fp64 */
/* exports used: fp64 */
/*!*************************************!*\
  !*** ./src/shaderlib/fp64/index.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fp64; });\n\n\nvar fp64 = {\n  interface: 'fp64',\n  source: '// Copyright (c) 2016 Uber Technologies, Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \"Software\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\nuniform float ONE;\\n\\nconst vec2 E_FP64 = vec2(2.7182817459106445e+00, 8.254840366817007e-08);\\nconst vec2 LOG2_FP64 = vec2(0.6931471824645996e+00, -1.9046542121259336e-09);\\nconst vec2 PI_FP64 = vec2(3.1415927410125732, -8.742278012618954e-8);\\nconst vec2 TWO_PI_FP64 = vec2(6.2831854820251465, -1.7484556025237907e-7);\\nconst vec2 PI_2_FP64 = vec2(1.5707963705062866, -4.371139006309477e-8);\\nconst vec2 PI_4_FP64 = vec2(0.7853981852531433, -2.1855695031547384e-8);\\nconst vec2 PI_16_FP64 = vec2(0.19634954631328583, -5.463923757886846e-9);\\nconst vec2 PI_16_2_FP64 = vec2(0.39269909262657166, -1.0927847515773692e-8);\\nconst vec2 PI_16_3_FP64 = vec2(0.5890486240386963, -1.4906100798128818e-9);\\nconst vec2 PI_180_FP64 = vec2(0.01745329238474369, 1.3519960498364902e-10);\\n\\nconst vec2 SIN_TABLE_0_FP64 = vec2(0.19509032368659973, -1.6704714833615242e-9);\\nconst vec2 SIN_TABLE_1_FP64 = vec2(0.3826834261417389, 6.22335089017767e-9);\\nconst vec2 SIN_TABLE_2_FP64 = vec2(0.5555702447891235, -1.1769521357507529e-8);\\nconst vec2 SIN_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617041793133e-8);\\n\\nconst vec2 COS_TABLE_0_FP64 = vec2(0.9807852506637573, 2.9739473106360492e-8);\\nconst vec2 COS_TABLE_1_FP64 = vec2(0.9238795042037964, 2.8307490351764386e-8);\\nconst vec2 COS_TABLE_2_FP64 = vec2(0.8314695954322815, 1.6870263741530778e-8);\\nconst vec2 COS_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617152815436e-8);\\n\\nconst vec2 INVERSE_FACTORIAL_3_FP64 = vec2(1.666666716337204e-01, -4.967053879312289e-09); // 1/3!\\nconst vec2 INVERSE_FACTORIAL_4_FP64 = vec2(4.16666679084301e-02, -1.2417634698280722e-09); // 1/4!\\nconst vec2 INVERSE_FACTORIAL_5_FP64 = vec2(8.333333767950535e-03, -4.34617203337595e-10); // 1/5!\\nconst vec2 INVERSE_FACTORIAL_6_FP64 = vec2(1.3888889225199819e-03, -3.3631094437103215e-11); // 1/6!\\nconst vec2 INVERSE_FACTORIAL_7_FP64 = vec2(1.9841270113829523e-04,  -2.725596874933456e-12); // 1/7!\\nconst vec2 INVERSE_FACTORIAL_8_FP64 = vec2(2.4801587642286904e-05, -3.406996025904184e-13); // 1/8!\\nconst vec2 INVERSE_FACTORIAL_9_FP64 = vec2(2.75573188446287533e-06, 3.7935713937038186e-14); // 1/9!\\nconst vec2 INVERSE_FACTORIAL_10_FP64 = vec2(2.755731998149713e-07, -7.575112367869873e-15); // 1/10!\\n\\nfloat nint(float d) {\\n    if (d == floor(d)) return d;\\n    return floor(d + 0.5);\\n}\\n\\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\\nvec2 split(float a) {\\n  const float SPLIT = 4097.0;\\n  float t = a * SPLIT;\\n  float a_hi = t * ONE - (t - a);\\n  float a_lo = a * ONE - a_hi;\\n  return vec2(a_hi, a_lo);\\n}\\n#else\\nvec2 split(float a) {\\n  const float SPLIT = 4097.0;\\n  float t = a * SPLIT;\\n  float a_hi = t - (t - a);\\n  float a_lo = a - a_hi;\\n  return vec2(a_hi, a_lo);\\n}\\n#endif\\n\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\nvec2 quickTwoSum(float a, float b) {\\n  float sum = (a + b) * ONE;\\n  float err = b - (sum - a) * ONE;\\n  return vec2(sum, err);\\n}\\n#else\\nvec2 quickTwoSum(float a, float b) {\\n  float sum = a + b;\\n  float err = b - (sum - a);\\n  return vec2(sum, err);\\n}\\n#endif\\n\\nvec2 nint_fp64(vec2 a) {\\n    float hi = nint(a.x);\\n    float lo;\\n    vec2 tmp;\\n    if (hi == a.x) {\\n        lo = nint(a.y);\\n        tmp = quickTwoSum(hi, lo);\\n    } else {\\n        lo = 0.0;\\n        if (abs(hi - a.x) == 0.5 && a.y < 0.0) {\\n            hi -= 1.0;\\n        }\\n        tmp = vec2(hi, lo);\\n    }\\n    return tmp;\\n}\\n\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\n\\n/* The purpose of this workaround is to prevent compilers from\\noptimizing away necessary arithmetic operations by swapping their sequences\\nor transform the equation to some \\'equivalent\\' from.\\n\\nThe method is to multiply an artifical variable, ONE, which will be known to\\nthe compiler to be one only at the runtime. The whole expression is then represented\\nas a polynomial with respective to ONE. In the coefficients of all terms, only one a\\nand one b should appear\\n\\nerr = (a + b) * ONE^6 - a * ONE^5 - (a + b) * ONE^4 + a * ONE^3 - b - (a + b) * ONE^2 + a * ONE\\n*/\\n\\nvec2 twoSum(float a, float b) {\\n  float s = (a + b);\\n  float v = (s * ONE - a) * ONE;\\n  float err = (a - (s - v) * ONE) * ONE * ONE * ONE + (b - v);\\n  return vec2(s, err);\\n}\\n#else\\nvec2 twoSum(float a, float b) {\\n  float s = a + b;\\n  float v = s - a;\\n  float err = (a - (s - v)) + (b - v);\\n  return vec2(s, err);\\n}\\n#endif\\n\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\n/* Same thing as in twoSum() */\\nvec2 twoSub(float a, float b) {\\n  float s = (a - b);\\n  float v = (s * ONE - a) * ONE;\\n  float err = (a - (s - v) * ONE) * ONE * ONE * ONE - (b + v);\\n  return vec2(s, err);\\n}\\n#else\\nvec2 twoSub(float a, float b) {\\n  float s = a - b;\\n  float v = s - a;\\n  float err = (a - (s - v)) - (b + v);\\n  return vec2(s, err);\\n}\\n#endif\\n\\nvec2 twoProd(float a, float b) {\\n  float prod = a * b;\\n  vec2 a_fp64 = split(a);\\n  vec2 b_fp64 = split(b);\\n  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +\\n    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;\\n  return vec2(prod, err);\\n}\\n\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\nvec2 twoSqr(float a) {\\n  float prod = a * a;\\n  vec2 a_fp64 = split(a);\\n\\n  float err = ((a_fp64.x * a_fp64.x - prod) * ONE + 2.0 * a_fp64.x * a_fp64.y * ONE * ONE) + a_fp64.y * a_fp64.y * ONE * ONE * ONE;\\n  return vec2(prod, err);\\n}\\n#else\\nvec2 twoSqr(float a) {\\n  float prod = a * a;\\n  vec2 a_fp64 = split(a);\\n\\n  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;\\n  return vec2(prod, err);\\n}\\n#endif\\n\\nvec2 sum_fp64(vec2 a, vec2 b) {\\n  vec2 s, t;\\n  s = twoSum(a.x, b.x);\\n  t = twoSum(a.y, b.y);\\n  s.y += t.x;\\n  s = quickTwoSum(s.x, s.y);\\n  s.y += t.y;\\n  s = quickTwoSum(s.x, s.y);\\n  return s;\\n}\\n\\nvec2 sub_fp64(vec2 a, vec2 b) {\\n  vec2 s, t;\\n  s = twoSub(a.x, b.x);\\n  t = twoSub(a.y, b.y);\\n  s.y += t.x;\\n  s = quickTwoSum(s.x, s.y);\\n  s.y += t.y;\\n  s = quickTwoSum(s.x, s.y);\\n  return s;\\n}\\n\\nvec2 mul_fp64(vec2 a, vec2 b) {\\n  vec2 prod = twoProd(a.x, b.x);\\n  // y component is for the error\\n  prod.y += a.x * b.y;\\n  prod.y += a.y * b.x;\\n  prod = quickTwoSum(prod.x, prod.y);\\n  return prod;\\n}\\n\\nvec2 div_fp64(vec2 a, vec2 b) {\\n  float xn = 1.0 / b.x;\\n  vec2 yn = a * xn;\\n  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;\\n  vec2 prod = twoProd(xn, diff);\\n  return sum_fp64(yn, prod);\\n}\\n\\nvec2 sqrt_fp64(vec2 a) {\\n\\n  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);\\n  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\\n\\n  float x = 1.0 / sqrt(a.x);\\n  float yn = a.x * x;\\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\\n  vec2 yn_sqr = twoSqr(yn) * ONE;\\n#else\\n  vec2 yn_sqr = twoSqr(yn);\\n#endif\\n  float diff = sub_fp64(a, yn_sqr).x;\\n  vec2 prod = twoProd(x * 0.5, diff);\\n  return sum_fp64(vec2(yn, 0.0), prod);\\n}\\n\\n/* k_power controls how much range reduction we would like to have\\nRange reduction uses the following method:\\nassume a = k_power * r + m * log(2), k and m being integers.\\nSet k_power = 4 (we can choose other k to trade accuracy with performance.\\nwe only need to calculate exp(r) and using exp(a) = 2^m * exp(r)^k_power;\\n*/\\n\\nvec2 exp_fp64(vec2 a) {\\n  // We need to make sure these two numbers match\\n  // as bit-wise shift is not available in GLSL 1.0\\n  const int k_power = 4;\\n  const float k = 16.0;\\n\\n  const float inv_k = 1.0 / k;\\n\\n  if (a.x <= -88.0) return vec2(0.0, 0.0);\\n  if (a.x >= 88.0) return vec2(1.0 / 0.0, 1.0 / 0.0);\\n  if (a.x == 0.0 && a.y == 0.0) return vec2(1.0, 0.0);\\n  if (a.x == 1.0 && a.y == 0.0) return E_FP64;\\n\\n  float m = floor(a.x / LOG2_FP64.x + 0.5);\\n  vec2 r = sub_fp64(a, mul_fp64(LOG2_FP64, vec2(m, 0.0))) * inv_k;\\n  vec2 s, t, p;\\n\\n  p = mul_fp64(r, r);\\n  s = sum_fp64(r, p * 0.5);\\n  p = mul_fp64(p, r);\\n  t = mul_fp64(p, INVERSE_FACTORIAL_3_FP64);\\n\\n  s = sum_fp64(s, t);\\n  p = mul_fp64(p, r);\\n  t = mul_fp64(p, INVERSE_FACTORIAL_4_FP64);\\n\\n  s = sum_fp64(s, t);\\n  p = mul_fp64(p, r);\\n  t = mul_fp64(p, INVERSE_FACTORIAL_5_FP64);\\n\\n  // s = sum_fp64(s, t);\\n  // p = mul_fp64(p, r);\\n  // t = mul_fp64(p, INVERSE_FACTORIAL_6_FP64);\\n\\n  // s = sum_fp64(s, t);\\n  // p = mul_fp64(p, r);\\n  // t = mul_fp64(p, INVERSE_FACTORIAL_7_FP64);\\n\\n  s = sum_fp64(s, t);\\n\\n\\n  // At this point, s = exp(r) - 1; but after following 4 recursions, we will get exp(r) ^ 512 - 1.\\n  for (int i = 0; i < k_power; i++) {\\n    s = sum_fp64(s * 2.0, mul_fp64(s, s));\\n  }\\n\\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\\n  s = sum_fp64(s, vec2(ONE, 0.0));\\n#else\\n  s = sum_fp64(s, vec2(1.0, 0.0));\\n#endif\\n\\n  return s * pow(2.0, m);\\n//   return r;\\n}\\n\\nvec2 log_fp64(vec2 a)\\n{\\n  if (a.x == 1.0 && a.y == 0.0) return vec2(0.0, 0.0);\\n  if (a.x <= 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\\n  vec2 x = vec2(log(a.x), 0.0);\\n  vec2 s;\\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\\n  s = vec2(ONE, 0.0);\\n#else\\n  s = vec2(1.0, 0.0);\\n#endif\\n\\n  x = sub_fp64(sum_fp64(x, mul_fp64(a, exp_fp64(-x))), s);\\n  return x;\\n}\\n\\nvec2 sin_taylor_fp64(vec2 a) {\\n  vec2 r, s, t, x;\\n\\n  if (a.x == 0.0 && a.y == 0.0) {\\n    return vec2(0.0, 0.0);\\n  }\\n\\n  x = -mul_fp64(a, a);\\n  s = a;\\n  r = a;\\n\\n  r = mul_fp64(r, x);\\n  t = mul_fp64(r, INVERSE_FACTORIAL_3_FP64);\\n  s = sum_fp64(s, t);\\n\\n  r = mul_fp64(r, x);\\n  t = mul_fp64(r, INVERSE_FACTORIAL_5_FP64);\\n  s = sum_fp64(s, t);\\n\\n  /* keep the following commented code in case we need them\\n  for extra accuracy from the Taylor expansion*/\\n\\n  // r = mul_fp64(r, x);\\n  // t = mul_fp64(r, INVERSE_FACTORIAL_7_FP64);\\n  // s = sum_fp64(s, t);\\n\\n  // r = mul_fp64(r, x);\\n  // t = mul_fp64(r, INVERSE_FACTORIAL_9_FP64);\\n  // s = sum_fp64(s, t);\\n\\n  return s;\\n}\\n\\nvec2 cos_taylor_fp64(vec2 a) {\\n  vec2 r, s, t, x;\\n\\n  if (a.x == 0.0 && a.y == 0.0) {\\n    return vec2(1.0, 0.0);\\n  }\\n\\n  x = -mul_fp64(a, a);\\n  r = x;\\n  s = sum_fp64(vec2(1.0, 0.0), r * 0.5);\\n\\n  r = mul_fp64(r, x);\\n  t = mul_fp64(r, INVERSE_FACTORIAL_4_FP64);\\n  s = sum_fp64(s, t);\\n\\n  r = mul_fp64(r, x);\\n  t = mul_fp64(r, INVERSE_FACTORIAL_6_FP64);\\n  s = sum_fp64(s, t);\\n\\n  /* keep the following commented code in case we need them\\n  for extra accuracy from the Taylor expansion*/\\n\\n  // r = mul_fp64(r, x);\\n  // t = mul_fp64(r, INVERSE_FACTORIAL_8_FP64);\\n  // s = sum_fp64(s, t);\\n\\n  // r = mul_fp64(r, x);\\n  // t = mul_fp64(r, INVERSE_FACTORIAL_10_FP64);\\n  // s = sum_fp64(s, t);\\n\\n  return s;\\n}\\n\\nvoid sincos_taylor_fp64(vec2 a, out vec2 sin_t, out vec2 cos_t) {\\n  if (a.x == 0.0 && a.y == 0.0) {\\n    sin_t = vec2(0.0, 0.0);\\n    cos_t = vec2(1.0, 0.0);\\n  }\\n\\n  sin_t = sin_taylor_fp64(a);\\n  cos_t = sqrt_fp64(sub_fp64(vec2(1.0, 0.0), mul_fp64(sin_t, sin_t)));\\n}\\n\\nvec2 sin_fp64(vec2 a) {\\n    if (a.x == 0.0 && a.y == 0.0) {\\n        return vec2(0.0, 0.0);\\n    }\\n\\n    // 2pi range reduction\\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\\n\\n    vec2 t;\\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\\n    int j = int(q);\\n\\n    if (j < -2 || j > 2) {\\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\\n    }\\n\\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\\n\\n    q = floor(t.x / PI_16_FP64.x + 0.5);\\n    int k = int(q);\\n\\n    if (k == 0) {\\n        if (j == 0) {\\n            return sin_taylor_fp64(t);\\n        } else if (j == 1) {\\n            return cos_taylor_fp64(t);\\n        } else if (j == -1) {\\n            return -cos_taylor_fp64(t);\\n        } else {\\n            return -sin_taylor_fp64(t);\\n        }\\n    }\\n\\n    int abs_k = int(abs(float(k)));\\n\\n    if (abs_k > 4) {\\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\\n    } else {\\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\\n    }\\n\\n    vec2 u = vec2(0.0, 0.0);\\n    vec2 v = vec2(0.0, 0.0);\\n\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\n    if (abs(float(abs_k) - 1.0) < 0.5) {\\n        u = COS_TABLE_0_FP64;\\n        v = SIN_TABLE_0_FP64;\\n    } else if (abs(float(abs_k) - 2.0) < 0.5) {\\n        u = COS_TABLE_1_FP64;\\n        v = SIN_TABLE_1_FP64;\\n    } else if (abs(float(abs_k) - 3.0) < 0.5) {\\n        u = COS_TABLE_2_FP64;\\n        v = SIN_TABLE_2_FP64;\\n    } else if (abs(float(abs_k) - 4.0) < 0.5) {\\n        u = COS_TABLE_3_FP64;\\n        v = SIN_TABLE_3_FP64;\\n    }\\n#else\\n    if (abs_k == 1) {\\n        u = COS_TABLE_0_FP64;\\n        v = SIN_TABLE_0_FP64;\\n    } else if (abs_k == 2) {\\n        u = COS_TABLE_1_FP64;\\n        v = SIN_TABLE_1_FP64;\\n    } else if (abs_k == 3) {\\n        u = COS_TABLE_2_FP64;\\n        v = SIN_TABLE_2_FP64;\\n    } else if (abs_k == 4) {\\n        u = COS_TABLE_3_FP64;\\n        v = SIN_TABLE_3_FP64;\\n    }\\n#endif\\n\\n    vec2 sin_t, cos_t;\\n    sincos_taylor_fp64(t, sin_t, cos_t);\\n\\n\\n\\n    vec2 result = vec2(0.0, 0.0);\\n    if (j == 0) {\\n        if (k > 0) {\\n            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n        } else {\\n            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n        }\\n    } else if (j == 1) {\\n        if (k > 0) {\\n            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        } else {\\n            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        }\\n    } else if (j == -1) {\\n        if (k > 0) {\\n            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\\n        } else {\\n            result = -sum_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\\n        }\\n    } else {\\n        if (k > 0) {\\n            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n        } else {\\n            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nvec2 cos_fp64(vec2 a) {\\n    if (a.x == 0.0 && a.y == 0.0) {\\n        return vec2(1.0, 0.0);\\n    }\\n\\n    // 2pi range reduction\\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\\n\\n    vec2 t;\\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\\n    int j = int(q);\\n\\n    if (j < -2 || j > 2) {\\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\\n    }\\n\\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\\n\\n    q = floor(t.x / PI_16_FP64.x + 0.5);\\n    int k = int(q);\\n\\n    if (k == 0) {\\n        if (j == 0) {\\n            return cos_taylor_fp64(t);\\n        } else if (j == 1) {\\n            return -sin_taylor_fp64(t);\\n        } else if (j == -1) {\\n            return sin_taylor_fp64(t);\\n        } else {\\n            return -cos_taylor_fp64(t);\\n        }\\n    }\\n\\n    int abs_k = int(abs(float(k)));\\n\\n    if (abs_k > 4) {\\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\\n    } else {\\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\\n    }\\n\\n    vec2 u = vec2(0.0, 0.0);\\n    vec2 v = vec2(0.0, 0.0);\\n\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\n    if (abs(float(abs_k) - 1.0) < 0.5) {\\n        u = COS_TABLE_0_FP64;\\n        v = SIN_TABLE_0_FP64;\\n    } else if (abs(float(abs_k) - 2.0) < 0.5) {\\n        u = COS_TABLE_1_FP64;\\n        v = SIN_TABLE_1_FP64;\\n    } else if (abs(float(abs_k) - 3.0) < 0.5) {\\n        u = COS_TABLE_2_FP64;\\n        v = SIN_TABLE_2_FP64;\\n    } else if (abs(float(abs_k) - 4.0) < 0.5) {\\n        u = COS_TABLE_3_FP64;\\n        v = SIN_TABLE_3_FP64;\\n    }\\n#else\\n    if (abs_k == 1) {\\n        u = COS_TABLE_0_FP64;\\n        v = SIN_TABLE_0_FP64;\\n    } else if (abs_k == 2) {\\n        u = COS_TABLE_1_FP64;\\n        v = SIN_TABLE_1_FP64;\\n    } else if (abs_k == 3) {\\n        u = COS_TABLE_2_FP64;\\n        v = SIN_TABLE_2_FP64;\\n    } else if (abs_k == 4) {\\n        u = COS_TABLE_3_FP64;\\n        v = SIN_TABLE_3_FP64;\\n    }\\n#endif\\n\\n    vec2 sin_t, cos_t;\\n    sincos_taylor_fp64(t, sin_t, cos_t);\\n\\n    vec2 result = vec2(0.0, 0.0);\\n    if (j == 0) {\\n        if (k > 0) {\\n            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        } else {\\n            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        }\\n    } else if (j == 1) {\\n        if (k > 0) {\\n            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n        } else {\\n            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));\\n        }\\n    } else if (j == -1) {\\n        if (k > 0) {\\n            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n        } else {\\n            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n        }\\n    } else {\\n        if (k > 0) {\\n            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\\n        } else {\\n            result = -sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nvec2 tan_fp64(vec2 a) {\\n    vec2 sin_a;\\n    vec2 cos_a;\\n\\n    if (a.x == 0.0 && a.y == 0.0) {\\n        return vec2(0.0, 0.0);\\n    }\\n\\n    // 2pi range reduction\\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\\n\\n    vec2 t;\\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\\n    int j = int(q);\\n\\n\\n    if (j < -2 || j > 2) {\\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\\n    }\\n\\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\\n\\n    q = floor(t.x / PI_16_FP64.x + 0.5);\\n    int k = int(q);\\n    int abs_k = int(abs(float(k)));\\n\\n    // We just can\\'t get PI/16 * 3.0 very accurately.\\n    // so let\\'s just store it\\n    if (abs_k > 4) {\\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\\n    } else {\\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\\n    }\\n\\n\\n    vec2 u = vec2(0.0, 0.0);\\n    vec2 v = vec2(0.0, 0.0);\\n\\n    vec2 sin_t, cos_t;\\n    vec2 s, c;\\n    sincos_taylor_fp64(t, sin_t, cos_t);\\n\\n    if (k == 0) {\\n        s = sin_t;\\n        c = cos_t;\\n    } else {\\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\\n        if (abs(float(abs_k) - 1.0) < 0.5) {\\n            u = COS_TABLE_0_FP64;\\n            v = SIN_TABLE_0_FP64;\\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\\n            u = COS_TABLE_1_FP64;\\n            v = SIN_TABLE_1_FP64;\\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\\n            u = COS_TABLE_2_FP64;\\n            v = SIN_TABLE_2_FP64;\\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\\n            u = COS_TABLE_3_FP64;\\n            v = SIN_TABLE_3_FP64;\\n        }\\n#else\\n        if (abs_k == 1) {\\n            u = COS_TABLE_0_FP64;\\n            v = SIN_TABLE_0_FP64;\\n        } else if (abs_k == 2) {\\n            u = COS_TABLE_1_FP64;\\n            v = SIN_TABLE_1_FP64;\\n        } else if (abs_k == 3) {\\n            u = COS_TABLE_2_FP64;\\n            v = SIN_TABLE_2_FP64;\\n        } else if (abs_k == 4) {\\n            u = COS_TABLE_3_FP64;\\n            v = SIN_TABLE_3_FP64;\\n        }\\n#endif\\n        if (k > 0) {\\n            s = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n            c = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        } else {\\n            s = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\\n            c = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\\n        }\\n    }\\n\\n    if (j == 0) {\\n        sin_a = s;\\n        cos_a = c;\\n    } else if (j == 1) {\\n        sin_a = c;\\n        cos_a = -s;\\n    } else if (j == -1) {\\n        sin_a = -c;\\n        cos_a = s;\\n    } else {\\n        sin_a = -s;\\n        cos_a = -c;\\n    }\\n    return div_fp64(sin_a, cos_a);\\n}\\n\\nvec2 radians_fp64(vec2 degree) {\\n  return mul_fp64(degree, PI_180_FP64);\\n}\\n\\n// Vector functions\\n// vec2 functions\\nvoid vec2_sum_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\\n    out_val[0] = sum_fp64(a[0], b[0]);\\n    out_val[1] = sum_fp64(a[1], b[1]);\\n}\\n\\nvoid vec2_sub_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\\n    out_val[0] = sub_fp64(a[0], b[0]);\\n    out_val[1] = sub_fp64(a[1], b[1]);\\n}\\n\\nvoid vec2_mix_fp64(vec2 x[2], vec2 y[2], float a, out vec2 out_val[2]) {\\n  vec2 range[2];\\n  vec2_sub_fp64(y, x, range);\\n  vec2 portion[2];\\n  portion[0] = range[0] * a;\\n  portion[1] = range[1] * a;\\n  vec2_sum_fp64(x, portion, out_val);\\n}\\n\\nvec2 vec2_length_fp64(vec2 x[2]) {\\n  return sqrt_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])));\\n}\\n\\nvec2 vec2_distance_fp64(vec2 x[2], vec2 y[2]) {\\n  vec2 diff[2];\\n  vec2_sub_fp64(x, y, diff);\\n  return vec2_length_fp64(diff);\\n}\\n\\n// vec3 functions\\nvoid vec3_sub_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {\\n  for (int i = 0; i < 3; i++) {\\n    out_val[i] = sum_fp64(a[i], b[i]);\\n  }\\n}\\n\\nvoid vec3_sum_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {\\n  for (int i = 0; i < 3; i++) {\\n    out_val[i] = sum_fp64(a[i], b[i]);\\n  }\\n}\\n\\nvec2 vec3_length_fp64(vec2 x[3]) {\\n  return sqrt_fp64(sum_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])), mul_fp64(x[2], x[2])));\\n}\\n\\nvec2 vec3_distance_fp64(vec2 x[3], vec2 y[3]) {\\n  vec2 diff[3];\\n  vec3_sub_fp64(x, y, diff);\\n  return vec3_length_fp64(diff);\\n}\\n\\n// vec4 functions\\nvoid vec4_fp64(vec4 a, out vec2 out_val[4]) {\\n  out_val[0].x = a[0];\\n  out_val[0].y = 0.0;\\n\\n  out_val[1].x = a[1];\\n  out_val[1].y = 0.0;\\n\\n  out_val[2].x = a[2];\\n  out_val[2].y = 0.0;\\n\\n  out_val[3].x = a[3];\\n  out_val[3].y = 0.0;\\n}\\n\\nvoid vec4_scalar_mul_fp64(vec2 a[4], vec2 b, out vec2 out_val[4]) {\\n  out_val[0] = mul_fp64(a[0], b);\\n  out_val[1] = mul_fp64(a[1], b);\\n  out_val[2] = mul_fp64(a[2], b);\\n  out_val[3] = mul_fp64(a[3], b);\\n}\\n\\nvoid vec4_sum_fp64(vec2 a[4], vec2 b[4], out vec2 out_val[4]) {\\n  for (int i = 0; i < 4; i++) {\\n    out_val[i] = sum_fp64(a[i], b[i]);\\n  }\\n}\\n\\nvoid vec4_dot_fp64(vec2 a[4], vec2 b[4], out vec2 out_val) {\\n  vec2 v[4];\\n\\n  v[0] = mul_fp64(a[0], b[0]);\\n  v[1] = mul_fp64(a[1], b[1]);\\n  v[2] = mul_fp64(a[2], b[2]);\\n  v[3] = mul_fp64(a[3], b[3]);\\n\\n  out_val = sum_fp64(sum_fp64(v[0], v[1]), sum_fp64(v[2], v[3]));\\n}\\n\\nvoid mat4_vec4_mul_fp64(vec2 b[16], vec2 a[4], out vec2 out_val[4]) {\\n  vec2 tmp[4];\\n\\n  for (int i = 0; i < 4; i++)\\n  {\\n    for (int j = 0; j < 4; j++)\\n    {\\n      tmp[j] = b[j + i * 4];\\n    }\\n    vec4_dot_fp64(a, tmp, out_val[i]);\\n  }\\n}\\n'\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 73 */
/* exports provided: updateSettings, lighting */
/* exports used: lighting, updateSettings */
/*!*****************************************!*\
  !*** ./src/shaderlib/lighting/index.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path__);\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = updateSettings;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return lighting; });\n\n\n\n// Light settings are used in 3d mode\nvar defaultLightSettings = {\n  enabled: true,\n  ambientColor: [255, 255, 255],\n  pointLightAmbientCoefficient: 0.1,\n  pointLightLocation: [40.4406, -79.9959, 1000000],\n  pointLightColor: [255, 255, 255],\n  pointLightAttenuation: 1.0,\n  materialSpecularColor: [255, 255, 255],\n  materialShininess: 1\n};\n\nfunction updateSettings(_ref) {\n  var settings = _ref.settings,\n      _ref$oldSettings = _ref.oldSettings,\n      oldSettings = _ref$oldSettings === undefined ? {} : _ref$oldSettings;\n\n  if (settings !== oldSettings) {\n    var lightSettings = Object.assign({}, defaultLightSettings, settings);\n    return {\n      uLightingEnabled: lightSettings.enabled,\n      uAmbientColor: lightSettings.ambientColor,\n      uPointLightAmbientCoefficient: lightSettings.pointLightAmbientCoefficient,\n      uPointLightLocation: lightSettings.pointLightLocation,\n      uPointLightColor: lightSettings.pointLightColor,\n      uPointLightAttenuation: lightSettings.pointLightAttenuation,\n      uMaterialSpecularColor: lightSettings.materialSpecularColor,\n      uMaterialShininess: lightSettings.materialShininess\n    };\n  }\n  return {};\n}\n\nvar lighting = {\n  interface: 'lighting',\n  source: '// LIGHTING\\nuniform bool uLightingEnabled;\\nuniform vec3 uAmbientColor;\\nuniform float uPointLightAmbientCoefficient;\\nuniform vec3 uPointLightLocation;\\nuniform vec3 uPointLightColor;\\nuniform float uPointLightAttenuation;\\n\\nuniform vec3 uMaterialSpecularColor;\\nuniform float uMaterialShininess;\\n\\nvec3 lighting_filterColor(vec3 position_modelspace, vec3 normal_modelspace, vec3 color) {\\n  if (!uLightingEnabled) {\\n    return color;\\n  }\\n\\n  vec3 pointLightLocation_modelspace = vec3(project_position(uPointLightLocation));\\n  vec3 lightDirection = normalize(pointLightLocation_modelspace - position_modelspace);\\n\\n  vec3 ambient = uPointLightAmbientCoefficient * color * uAmbientColor / 255.0;\\n\\n  float diffuseCoefficient = max(dot(normal_modelspace, lightDirection), 0.0);\\n  vec3 diffuse = diffuseCoefficient * uPointLightColor / 255. * color;\\n\\n  return ambient + uPointLightAttenuation * diffuse;\\n}\\n',\n  updateSettings: updateSettings\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hhZGVybGliL2xpZ2h0aW5nL2luZGV4LmpzP2RmY2YiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuLy8gTGlnaHQgc2V0dGluZ3MgYXJlIHVzZWQgaW4gM2QgbW9kZVxudmFyIGRlZmF1bHRMaWdodFNldHRpbmdzID0ge1xuICBlbmFibGVkOiB0cnVlLFxuICBhbWJpZW50Q29sb3I6IFsyNTUsIDI1NSwgMjU1XSxcbiAgcG9pbnRMaWdodEFtYmllbnRDb2VmZmljaWVudDogMC4xLFxuICBwb2ludExpZ2h0TG9jYXRpb246IFs0MC40NDA2LCAtNzkuOTk1OSwgMTAwMDAwMF0sXG4gIHBvaW50TGlnaHRDb2xvcjogWzI1NSwgMjU1LCAyNTVdLFxuICBwb2ludExpZ2h0QXR0ZW51YXRpb246IDEuMCxcbiAgbWF0ZXJpYWxTcGVjdWxhckNvbG9yOiBbMjU1LCAyNTUsIDI1NV0sXG4gIG1hdGVyaWFsU2hpbmluZXNzOiAxXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlU2V0dGluZ3MoX3JlZikge1xuICB2YXIgc2V0dGluZ3MgPSBfcmVmLnNldHRpbmdzLFxuICAgICAgX3JlZiRvbGRTZXR0aW5ncyA9IF9yZWYub2xkU2V0dGluZ3MsXG4gICAgICBvbGRTZXR0aW5ncyA9IF9yZWYkb2xkU2V0dGluZ3MgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZiRvbGRTZXR0aW5ncztcblxuICBpZiAoc2V0dGluZ3MgIT09IG9sZFNldHRpbmdzKSB7XG4gICAgdmFyIGxpZ2h0U2V0dGluZ3MgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0TGlnaHRTZXR0aW5ncywgc2V0dGluZ3MpO1xuICAgIHJldHVybiB7XG4gICAgICB1TGlnaHRpbmdFbmFibGVkOiBsaWdodFNldHRpbmdzLmVuYWJsZWQsXG4gICAgICB1QW1iaWVudENvbG9yOiBsaWdodFNldHRpbmdzLmFtYmllbnRDb2xvcixcbiAgICAgIHVQb2ludExpZ2h0QW1iaWVudENvZWZmaWNpZW50OiBsaWdodFNldHRpbmdzLnBvaW50TGlnaHRBbWJpZW50Q29lZmZpY2llbnQsXG4gICAgICB1UG9pbnRMaWdodExvY2F0aW9uOiBsaWdodFNldHRpbmdzLnBvaW50TGlnaHRMb2NhdGlvbixcbiAgICAgIHVQb2ludExpZ2h0Q29sb3I6IGxpZ2h0U2V0dGluZ3MucG9pbnRMaWdodENvbG9yLFxuICAgICAgdVBvaW50TGlnaHRBdHRlbnVhdGlvbjogbGlnaHRTZXR0aW5ncy5wb2ludExpZ2h0QXR0ZW51YXRpb24sXG4gICAgICB1TWF0ZXJpYWxTcGVjdWxhckNvbG9yOiBsaWdodFNldHRpbmdzLm1hdGVyaWFsU3BlY3VsYXJDb2xvcixcbiAgICAgIHVNYXRlcmlhbFNoaW5pbmVzczogbGlnaHRTZXR0aW5ncy5tYXRlcmlhbFNoaW5pbmVzc1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIHt9O1xufVxuXG5leHBvcnQgdmFyIGxpZ2h0aW5nID0ge1xuICBpbnRlcmZhY2U6ICdsaWdodGluZycsXG4gIHNvdXJjZTogJy8vIExJR0hUSU5HXFxudW5pZm9ybSBib29sIHVMaWdodGluZ0VuYWJsZWQ7XFxudW5pZm9ybSB2ZWMzIHVBbWJpZW50Q29sb3I7XFxudW5pZm9ybSBmbG9hdCB1UG9pbnRMaWdodEFtYmllbnRDb2VmZmljaWVudDtcXG51bmlmb3JtIHZlYzMgdVBvaW50TGlnaHRMb2NhdGlvbjtcXG51bmlmb3JtIHZlYzMgdVBvaW50TGlnaHRDb2xvcjtcXG51bmlmb3JtIGZsb2F0IHVQb2ludExpZ2h0QXR0ZW51YXRpb247XFxuXFxudW5pZm9ybSB2ZWMzIHVNYXRlcmlhbFNwZWN1bGFyQ29sb3I7XFxudW5pZm9ybSBmbG9hdCB1TWF0ZXJpYWxTaGluaW5lc3M7XFxuXFxudmVjMyBsaWdodGluZ19maWx0ZXJDb2xvcih2ZWMzIHBvc2l0aW9uX21vZGVsc3BhY2UsIHZlYzMgbm9ybWFsX21vZGVsc3BhY2UsIHZlYzMgY29sb3IpIHtcXG4gIGlmICghdUxpZ2h0aW5nRW5hYmxlZCkge1xcbiAgICByZXR1cm4gY29sb3I7XFxuICB9XFxuXFxuICB2ZWMzIHBvaW50TGlnaHRMb2NhdGlvbl9tb2RlbHNwYWNlID0gdmVjMyhwcm9qZWN0X3Bvc2l0aW9uKHVQb2ludExpZ2h0TG9jYXRpb24pKTtcXG4gIHZlYzMgbGlnaHREaXJlY3Rpb24gPSBub3JtYWxpemUocG9pbnRMaWdodExvY2F0aW9uX21vZGVsc3BhY2UgLSBwb3NpdGlvbl9tb2RlbHNwYWNlKTtcXG5cXG4gIHZlYzMgYW1iaWVudCA9IHVQb2ludExpZ2h0QW1iaWVudENvZWZmaWNpZW50ICogY29sb3IgKiB1QW1iaWVudENvbG9yIC8gMjU1LjA7XFxuXFxuICBmbG9hdCBkaWZmdXNlQ29lZmZpY2llbnQgPSBtYXgoZG90KG5vcm1hbF9tb2RlbHNwYWNlLCBsaWdodERpcmVjdGlvbiksIDAuMCk7XFxuICB2ZWMzIGRpZmZ1c2UgPSBkaWZmdXNlQ29lZmZpY2llbnQgKiB1UG9pbnRMaWdodENvbG9yIC8gMjU1LiAqIGNvbG9yO1xcblxcbiAgcmV0dXJuIGFtYmllbnQgKyB1UG9pbnRMaWdodEF0dGVudWF0aW9uICogZGlmZnVzZTtcXG59XFxuJyxcbiAgdXBkYXRlU2V0dGluZ3M6IHVwZGF0ZVNldHRpbmdzXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3NoYWRlcmxpYi9saWdodGluZy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gNzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 74 */
/* exports provided: project */
/* exports used: project */
/*!****************************************!*\
  !*** ./src/shaderlib/project/index.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return project; });\n\n\nvar project = {\n  interface: 'project',\n  source: 'const float TILE_SIZE = 512.0;\\nconst float PI = 3.1415926536;\\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\\n\\nconst float PROJECT_LINEAR = 0.;\\nconst float PROJECT_MERCATOR = 1.;\\nconst float PROJECT_MERCATOR_OFFSETS = 2.;\\n\\nuniform float projectionMode;\\nuniform float projectionScale;\\nuniform vec4 projectionCenter;\\nuniform vec3 projectionPixelsPerUnit;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 projectionMatrixUncentered;\\n\\n#ifdef INTEL_TAN_WORKAROUND\\n\\n// All these functions are for substituting tan() function from Intel GPU only\\nconst float TWO_PI = 6.2831854820251465;\\nconst float PI_2 = 1.5707963705062866;\\nconst float PI_16 = 0.1963495463132858;\\n\\nconst float SIN_TABLE_0 = 0.19509032368659973;\\nconst float SIN_TABLE_1 = 0.3826834261417389;\\nconst float SIN_TABLE_2 = 0.5555702447891235;\\nconst float SIN_TABLE_3 = 0.7071067690849304;\\n\\nconst float COS_TABLE_0 = 0.9807852506637573;\\nconst float COS_TABLE_1 = 0.9238795042037964;\\nconst float COS_TABLE_2 = 0.8314695954322815;\\nconst float COS_TABLE_3 = 0.7071067690849304;\\n\\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01; // 1/3!\\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03; // 1/5!\\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04; // 1/7!\\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06; // 1/9!\\n\\nfloat sin_taylor_fp32(float a) {\\n  float r, s, t, x;\\n\\n  if (a == 0.0) {\\n    return 0.0;\\n  }\\n\\n  x = -a * a;\\n  s = a;\\n  r = a;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_3;\\n  s = s + t;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_5;\\n  s = s + t;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_7;\\n  s = s + t;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_9;\\n  s = s + t;\\n\\n  return s;\\n}\\n\\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\\n  if (a == 0.0) {\\n    sin_t = 0.0;\\n    cos_t = 1.0;\\n  }\\n  sin_t = sin_taylor_fp32(a);\\n  cos_t = sqrt(1.0 - sin_t * sin_t);\\n}\\n\\nfloat tan_taylor_fp32(float a) {\\n    float sin_a;\\n    float cos_a;\\n\\n    if (a == 0.0) {\\n        return 0.0;\\n    }\\n\\n    // 2pi range reduction\\n    float z = floor(a / TWO_PI);\\n    float r = a - TWO_PI * z;\\n\\n    float t;\\n    float q = floor(r / PI_2 + 0.5);\\n    int j = int(q);\\n\\n    if (j < -2 || j > 2) {\\n        return 0.0 / 0.0;\\n    }\\n\\n    t = r - PI_2 * q;\\n\\n    q = floor(t / PI_16 + 0.5);\\n    int k = int(q);\\n    int abs_k = int(abs(float(k)));\\n\\n    if (abs_k > 4) {\\n        return 0.0 / 0.0;\\n    } else {\\n        t = t - PI_16 * q;\\n    }\\n\\n    float u = 0.0;\\n    float v = 0.0;\\n\\n    float sin_t, cos_t;\\n    float s, c;\\n    sincos_taylor_fp32(t, sin_t, cos_t);\\n\\n    if (k == 0) {\\n        s = sin_t;\\n        c = cos_t;\\n    } else {\\n        if (abs(float(abs_k) - 1.0) < 0.5) {\\n            u = COS_TABLE_0;\\n            v = SIN_TABLE_0;\\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\\n            u = COS_TABLE_1;\\n            v = SIN_TABLE_1;\\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\\n            u = COS_TABLE_2;\\n            v = SIN_TABLE_2;\\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\\n            u = COS_TABLE_3;\\n            v = SIN_TABLE_3;\\n        }\\n        if (k > 0) {\\n            s = u * sin_t + v * cos_t;\\n            c = u * cos_t - v * sin_t;\\n        } else {\\n            s = u * sin_t - v * cos_t;\\n            c = u * cos_t + v * sin_t;\\n        }\\n    }\\n\\n    if (j == 0) {\\n        sin_a = s;\\n        cos_a = c;\\n    } else if (j == 1) {\\n        sin_a = c;\\n        cos_a = -s;\\n    } else if (j == -1) {\\n        sin_a = -c;\\n        cos_a = s;\\n    } else {\\n        sin_a = -s;\\n        cos_a = -c;\\n    }\\n    return sin_a / cos_a;\\n}\\n#endif\\n\\nfloat tan_fp32(float a) {\\n#ifdef INTEL_TAN_WORKAROUND\\n  return tan_taylor_fp32(a);\\n#else\\n  return tan(a);\\n#endif\\n}\\n\\n//\\n// Scaling offsets\\n//\\n\\nfloat project_scale(float meters) {\\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\\n    return meters;\\n  } else {\\n    return meters * projectionPixelsPerUnit.x;\\n  }\\n}\\n\\nvec2 project_scale(vec2 meters) {\\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\\n    return meters;\\n  } else {\\n    return vec2(\\n      meters.x * projectionPixelsPerUnit.x,\\n      meters.y * projectionPixelsPerUnit.x\\n    );\\n  }\\n}\\n\\nvec3 project_scale(vec3 meters) {\\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\\n    return meters;\\n  } else {\\n    return vec3(\\n      meters.x * projectionPixelsPerUnit.x,\\n      meters.y * projectionPixelsPerUnit.x,\\n      meters.z * projectionPixelsPerUnit.x\\n    );\\n  }\\n}\\n\\nvec4 project_scale(vec4 meters) {\\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\\n    return meters;\\n  } else {\\n    return vec4(\\n      meters.x * projectionPixelsPerUnit.x,\\n      meters.y * projectionPixelsPerUnit.x,\\n      meters.z * projectionPixelsPerUnit.x,\\n      meters.w\\n    );\\n  }\\n}\\n\\n//\\n// Projecting positions\\n//\\n\\n// non-linear projection: lnglats => unit tile [0-1, 0-1]\\nvec2 project_mercator_(vec2 lnglat) {\\n  return vec2(\\n    radians(lnglat.x) + PI,\\n    PI - log(tan_fp32(PI * 0.25 + radians(lnglat.y) * 0.5))\\n  );\\n}\\n\\nvec2 project_position(vec2 position) {\\n  // if (projectionMode == PROJECT_LINEAR) {\\n  //   return (position + vec2(TILE_SIZE / 2.0)) * projectionScale;\\n  // }\\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\\n    return position;\\n    return project_scale(position);\\n  }\\n  // Covers projectionMode == PROJECT_MERCATOR\\n  return project_mercator_(position) * WORLD_SCALE * projectionScale;\\n}\\n\\nvec3 project_position(vec3 position) {\\n  return vec3(project_position(position.xy), project_scale(position.z));\\n}\\n\\nvec4 project_position(vec4 position) {\\n  return vec4(project_position(position.xyz), position.w);\\n}\\n\\n//\\n\\nvec4 project_to_clipspace(vec4 position) {\\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\\n    position = position * projectionPixelsPerUnit.x;\\n  }\\n  return projectionMatrix * position + projectionCenter;\\n}\\n\\n// Backwards compatibility\\n\\nfloat scale(float position) {\\n  return project_scale(position);\\n}\\n\\nvec2 scale(vec2 position) {\\n  return project_scale(position);\\n}\\n\\nvec3 scale(vec3 position) {\\n  return project_scale(position);\\n}\\n\\nvec4 scale(vec4 position) {\\n  return project_scale(position);\\n}\\n\\nvec2 preproject(vec2 position) {\\n  return project_position(position);\\n}\\n\\nvec3 preproject(vec3 position) {\\n  return project_position(position);\\n}\\n\\nvec4 preproject(vec4 position) {\\n  return project_position(position);\\n}\\n\\nvec4 project(vec4 position) {\\n  return project_to_clipspace(position);\\n}\\n'\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 75 */
/* exports provided: project64 */
/* exports used: project64 */
/*!******************************************!*\
  !*** ./src/shaderlib/project64/index.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path__ = __webpack_require__(/*! path */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return project64; });\n\n\nvar project64 = {\n  interface: 'project64',\n  source: 'const vec2 WORLD_SCALE_FP64 = vec2(81.4873275756836, 0.0000032873668232014097);\\n\\nuniform vec2 projectionScaleFP64;\\nuniform vec2 projectionFP64[16];\\n\\nvoid mercatorProject_fp64(vec4 lnglat_fp64, out vec2 out_val[2]) { //longitude: lnglat_fp64.xy; latitude: lnglat_fp64.zw\\n\\n#if defined(NVIDIA_FP64_WORKAROUND)\\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64 * ONE);\\n#else\\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64);\\n#endif\\n  out_val[1] = sub_fp64(PI_FP64, log_fp64(tan_fp64(sum_fp64(PI_4_FP64, radians_fp64(lnglat_fp64.zw) / 2.0))));\\n  return;\\n}\\n\\nvoid project_position_fp64(vec4 position_fp64, out vec2 out_val[2]) {\\n\\n  vec2 pos_fp64[2];\\n  mercatorProject_fp64(position_fp64, pos_fp64);\\n  vec2 x_fp64 = mul_fp64(pos_fp64[0], projectionScaleFP64);\\n  vec2 y_fp64 = mul_fp64(pos_fp64[1], projectionScaleFP64);\\n  out_val[0] = mul_fp64(x_fp64, WORLD_SCALE_FP64);\\n  out_val[1] = mul_fp64(y_fp64, WORLD_SCALE_FP64);\\n\\n  return;\\n}\\n\\nvec4 project_to_clipspace_fp64(vec2 vertex_pos_modelspace[4]) {\\n  vec2 vertex_pos_clipspace[4];\\n  mat4_vec4_mul_fp64(projectionFP64, vertex_pos_modelspace, vertex_pos_clipspace);\\n  return vec4(\\n    vertex_pos_clipspace[0].x,\\n    vertex_pos_clipspace[1].x,\\n    vertex_pos_clipspace[2].x,\\n    vertex_pos_clipspace[3].x\\n    );\\n}\\n'\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hhZGVybGliL3Byb2plY3Q2NC9pbmRleC5qcz8xNWNkIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5leHBvcnQgdmFyIHByb2plY3Q2NCA9IHtcbiAgaW50ZXJmYWNlOiAncHJvamVjdDY0JyxcbiAgc291cmNlOiAnY29uc3QgdmVjMiBXT1JMRF9TQ0FMRV9GUDY0ID0gdmVjMig4MS40ODczMjc1NzU2ODM2LCAwLjAwMDAwMzI4NzM2NjgyMzIwMTQwOTcpO1xcblxcbnVuaWZvcm0gdmVjMiBwcm9qZWN0aW9uU2NhbGVGUDY0O1xcbnVuaWZvcm0gdmVjMiBwcm9qZWN0aW9uRlA2NFsxNl07XFxuXFxudm9pZCBtZXJjYXRvclByb2plY3RfZnA2NCh2ZWM0IGxuZ2xhdF9mcDY0LCBvdXQgdmVjMiBvdXRfdmFsWzJdKSB7IC8vbG9uZ2l0dWRlOiBsbmdsYXRfZnA2NC54eTsgbGF0aXR1ZGU6IGxuZ2xhdF9mcDY0Lnp3XFxuXFxuI2lmIGRlZmluZWQoTlZJRElBX0ZQNjRfV09SS0FST1VORClcXG4gIG91dF92YWxbMF0gPSBzdW1fZnA2NChyYWRpYW5zX2ZwNjQobG5nbGF0X2ZwNjQueHkpLCBQSV9GUDY0ICogT05FKTtcXG4jZWxzZVxcbiAgb3V0X3ZhbFswXSA9IHN1bV9mcDY0KHJhZGlhbnNfZnA2NChsbmdsYXRfZnA2NC54eSksIFBJX0ZQNjQpO1xcbiNlbmRpZlxcbiAgb3V0X3ZhbFsxXSA9IHN1Yl9mcDY0KFBJX0ZQNjQsIGxvZ19mcDY0KHRhbl9mcDY0KHN1bV9mcDY0KFBJXzRfRlA2NCwgcmFkaWFuc19mcDY0KGxuZ2xhdF9mcDY0Lnp3KSAvIDIuMCkpKSk7XFxuICByZXR1cm47XFxufVxcblxcbnZvaWQgcHJvamVjdF9wb3NpdGlvbl9mcDY0KHZlYzQgcG9zaXRpb25fZnA2NCwgb3V0IHZlYzIgb3V0X3ZhbFsyXSkge1xcblxcbiAgdmVjMiBwb3NfZnA2NFsyXTtcXG4gIG1lcmNhdG9yUHJvamVjdF9mcDY0KHBvc2l0aW9uX2ZwNjQsIHBvc19mcDY0KTtcXG4gIHZlYzIgeF9mcDY0ID0gbXVsX2ZwNjQocG9zX2ZwNjRbMF0sIHByb2plY3Rpb25TY2FsZUZQNjQpO1xcbiAgdmVjMiB5X2ZwNjQgPSBtdWxfZnA2NChwb3NfZnA2NFsxXSwgcHJvamVjdGlvblNjYWxlRlA2NCk7XFxuICBvdXRfdmFsWzBdID0gbXVsX2ZwNjQoeF9mcDY0LCBXT1JMRF9TQ0FMRV9GUDY0KTtcXG4gIG91dF92YWxbMV0gPSBtdWxfZnA2NCh5X2ZwNjQsIFdPUkxEX1NDQUxFX0ZQNjQpO1xcblxcbiAgcmV0dXJuO1xcbn1cXG5cXG52ZWM0IHByb2plY3RfdG9fY2xpcHNwYWNlX2ZwNjQodmVjMiB2ZXJ0ZXhfcG9zX21vZGVsc3BhY2VbNF0pIHtcXG4gIHZlYzIgdmVydGV4X3Bvc19jbGlwc3BhY2VbNF07XFxuICBtYXQ0X3ZlYzRfbXVsX2ZwNjQocHJvamVjdGlvbkZQNjQsIHZlcnRleF9wb3NfbW9kZWxzcGFjZSwgdmVydGV4X3Bvc19jbGlwc3BhY2UpO1xcbiAgcmV0dXJuIHZlYzQoXFxuICAgIHZlcnRleF9wb3NfY2xpcHNwYWNlWzBdLngsXFxuICAgIHZlcnRleF9wb3NfY2xpcHNwYWNlWzFdLngsXFxuICAgIHZlcnRleF9wb3NfY2xpcHNwYWNlWzJdLngsXFxuICAgIHZlcnRleF9wb3NfY2xpcHNwYWNlWzNdLnhcXG4gICAgKTtcXG59XFxuJ1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zaGFkZXJsaWIvcHJvamVjdDY0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSA3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 76 */
/* unknown exports provided */
/* exports used: version */
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ (function(module, exports) {

eval("module.exports = {\n\t\"name\": \"deck.gl\",\n\t\"description\": \"A suite of 3D-enabled data visualization overlays, suitable for react-map-gl\",\n\t\"license\": \"MIT\",\n\t\"version\": \"3.1.0-beta.16\",\n\t\"keywords\": [\n\t\t\"webgl\",\n\t\t\"visualization\",\n\t\t\"overlay\",\n\t\t\"layer\"\n\t],\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/uber/deck.gl.git\"\n\t},\n\t\"main\": \"dist/index.js\",\n\t\"module\": \"dist-es6/index.js\",\n\t\"files\": [\n\t\t\"dist\",\n\t\t\"dist-es6\",\n\t\t\"src\",\n\t\t\"react.js\",\n\t\t\"react-es6.js\"\n\t],\n\t\"scripts\": {\n\t\t\"start\": \"(cd examples/main && yarn && npm run start-local)\",\n\t\t\"build-clean\": \"rm -fr dist dist-es6 && mkdir -p dist dist-es6 \",\n\t\t\"build-es6\": \"rm -fr dist-es6 && babel src --out-dir dist-es6 --plugins=static-fs --source-maps inline\",\n\t\t\"build-es5\": \"rm -fr dist && babel src --out-dir dist --plugins=static-fs,transform-es2015-modules-commonjs --source-maps inline\",\n\t\t\"build-buble\": \"buble dist-es6 -o dist --no modules --y dangerousForOf --objectAssign\",\n\t\t\"build\": \"npm run build-clean && npm run build-es6 && npm run build-es5 && webpack -d --display-modules\",\n\t\t\"lint\": \"eslint src test examples\",\n\t\t\"publish-prod\": \"npm run build && npm run test && npm run test-dist && npm publish\",\n\t\t\"publish-beta\": \"npm run build && npm run test && npm run test-dist && npm publish --tag beta\",\n\t\t\"test\": \"npm run lint && npm run test-node\",\n\t\t\"test-node\": \"node test/node.js\",\n\t\t\"test-dist\": \"node test/node-dist.js\",\n\t\t\"test-browser\": \"webpack-dev-server --config webpack.config.test-browser.js --progress --hot --open --port 3010\",\n\t\t\"bench\": \"node test/bench/node.js\",\n\t\t\"bench-browser\": \"webpack-dev-server --config webpack.config.bench-browser.js --progress --hot --open --port 3011\",\n\t\t\"test-fp64\": \"(cd test/fp64-test && webpack-dev-server --config webpack.config.test-fp64.js --progress --hot --open)\",\n\t\t\"test-rendering\": \"(cd test/rendering-test && webpack-dev-server --config webpack.config.test-rendering.js --progress --hot --open)\"\n\t},\n\t\"dependencies\": {\n\t\t\"earcut\": \"^2.0.6\",\n\t\t\"file-loader\": \"^0.9.0\",\n\t\t\"gl-matrix\": \"^2.3.2\",\n\t\t\"lodash.flatten\": \"^4.4.0\",\n\t\t\"lodash.flattendeep\": \"^4.4.0\",\n\t\t\"viewport-mercator-project\": \"3.0.0-beta4\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.22.2\",\n\t\t\"babel-core\": \"^6.22.1\",\n\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\"babel-plugin-static-fs\": \"^1.1.0\",\n\t\t\"babel-plugin-transform-es2015-modules-commonjs\": \"^6.22.0\",\n\t\t\"babel-polyfill\": \"^6.20.0\",\n\t\t\"babel-preset-es2015\": \"^6.4.3\",\n\t\t\"benchmark\": \"^2.1.3\",\n\t\t\"brfs-babel\": \"^1.0.0\",\n\t\t\"buble\": \"^0.15.1\",\n\t\t\"buble-loader\": \"^0.4.0\",\n\t\t\"eslint\": \"^3.0.0\",\n\t\t\"eslint-config-uber-es2015\": \"^3.0.0\",\n\t\t\"eslint-config-uber-jsx\": \"^3.0.0\",\n\t\t\"eslint-plugin-react\": \"~6.7.0\",\n\t\t\"faucet\": \"0.0.1\",\n\t\t\"gl\": \"^4.0.3\",\n\t\t\"immutable\": \"^3.8.1\",\n\t\t\"luma.gl\": \"3.0.0-alpha.3\",\n\t\t\"module-alias\": \"^2.0.0\",\n\t\t\"pre-commit\": \"^1.2.2\",\n\t\t\"raw-loader\": \"^0.5.1\",\n\t\t\"react\": \"^15.4.0\",\n\t\t\"react-addons-test-utils\": \"^15.4.2\",\n\t\t\"react-dom\": \"^15.4.0\",\n\t\t\"reify\": \"^0.4.4\",\n\t\t\"tap-browser-color\": \"^0.1.2\",\n\t\t\"tape\": \"^4.5.1\",\n\t\t\"tape-catch\": \"^1.0.4\",\n\t\t\"transform-loader\": \"^0.2.3\",\n\t\t\"uglify-js\": \"^2.6.1\",\n\t\t\"url-loader\": \"^0.5.7\",\n\t\t\"webpack\": \"^2.2.0\",\n\t\t\"webpack-dev-server\": \"^2.2.0\"\n\t},\n\t\"peerDependencies\": {\n\t\t\"luma.gl\": \"^3.0.0-alpha.3\",\n\t\t\"react\": \"0.14.x - 15.x\",\n\t\t\"react-dom\": \"0.14.x - 15.x\"\n\t},\n\t\"babel\": {\n\t\t\"presets\": [\n\t\t\t[\n\t\t\t\t\"es2015\",\n\t\t\t\t{\n\t\t\t\t\t\"modules\": false\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\t}\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzb24/ZWQ4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJuYW1lXCI6IFwiZGVjay5nbFwiLFxuXHRcImRlc2NyaXB0aW9uXCI6IFwiQSBzdWl0ZSBvZiAzRC1lbmFibGVkIGRhdGEgdmlzdWFsaXphdGlvbiBvdmVybGF5cywgc3VpdGFibGUgZm9yIHJlYWN0LW1hcC1nbFwiLFxuXHRcImxpY2Vuc2VcIjogXCJNSVRcIixcblx0XCJ2ZXJzaW9uXCI6IFwiMy4xLjAtYmV0YS4xNlwiLFxuXHRcImtleXdvcmRzXCI6IFtcblx0XHRcIndlYmdsXCIsXG5cdFx0XCJ2aXN1YWxpemF0aW9uXCIsXG5cdFx0XCJvdmVybGF5XCIsXG5cdFx0XCJsYXllclwiXG5cdF0sXG5cdFwicmVwb3NpdG9yeVwiOiB7XG5cdFx0XCJ0eXBlXCI6IFwiZ2l0XCIsXG5cdFx0XCJ1cmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vdWJlci9kZWNrLmdsLmdpdFwiXG5cdH0sXG5cdFwibWFpblwiOiBcImRpc3QvaW5kZXguanNcIixcblx0XCJtb2R1bGVcIjogXCJkaXN0LWVzNi9pbmRleC5qc1wiLFxuXHRcImZpbGVzXCI6IFtcblx0XHRcImRpc3RcIixcblx0XHRcImRpc3QtZXM2XCIsXG5cdFx0XCJzcmNcIixcblx0XHRcInJlYWN0LmpzXCIsXG5cdFx0XCJyZWFjdC1lczYuanNcIlxuXHRdLFxuXHRcInNjcmlwdHNcIjoge1xuXHRcdFwic3RhcnRcIjogXCIoY2QgZXhhbXBsZXMvbWFpbiAmJiB5YXJuICYmIG5wbSBydW4gc3RhcnQtbG9jYWwpXCIsXG5cdFx0XCJidWlsZC1jbGVhblwiOiBcInJtIC1mciBkaXN0IGRpc3QtZXM2ICYmIG1rZGlyIC1wIGRpc3QgZGlzdC1lczYgXCIsXG5cdFx0XCJidWlsZC1lczZcIjogXCJybSAtZnIgZGlzdC1lczYgJiYgYmFiZWwgc3JjIC0tb3V0LWRpciBkaXN0LWVzNiAtLXBsdWdpbnM9c3RhdGljLWZzIC0tc291cmNlLW1hcHMgaW5saW5lXCIsXG5cdFx0XCJidWlsZC1lczVcIjogXCJybSAtZnIgZGlzdCAmJiBiYWJlbCBzcmMgLS1vdXQtZGlyIGRpc3QgLS1wbHVnaW5zPXN0YXRpYy1mcyx0cmFuc2Zvcm0tZXMyMDE1LW1vZHVsZXMtY29tbW9uanMgLS1zb3VyY2UtbWFwcyBpbmxpbmVcIixcblx0XHRcImJ1aWxkLWJ1YmxlXCI6IFwiYnVibGUgZGlzdC1lczYgLW8gZGlzdCAtLW5vIG1vZHVsZXMgLS15IGRhbmdlcm91c0Zvck9mIC0tb2JqZWN0QXNzaWduXCIsXG5cdFx0XCJidWlsZFwiOiBcIm5wbSBydW4gYnVpbGQtY2xlYW4gJiYgbnBtIHJ1biBidWlsZC1lczYgJiYgbnBtIHJ1biBidWlsZC1lczUgJiYgd2VicGFjayAtZCAtLWRpc3BsYXktbW9kdWxlc1wiLFxuXHRcdFwibGludFwiOiBcImVzbGludCBzcmMgdGVzdCBleGFtcGxlc1wiLFxuXHRcdFwicHVibGlzaC1wcm9kXCI6IFwibnBtIHJ1biBidWlsZCAmJiBucG0gcnVuIHRlc3QgJiYgbnBtIHJ1biB0ZXN0LWRpc3QgJiYgbnBtIHB1Ymxpc2hcIixcblx0XHRcInB1Ymxpc2gtYmV0YVwiOiBcIm5wbSBydW4gYnVpbGQgJiYgbnBtIHJ1biB0ZXN0ICYmIG5wbSBydW4gdGVzdC1kaXN0ICYmIG5wbSBwdWJsaXNoIC0tdGFnIGJldGFcIixcblx0XHRcInRlc3RcIjogXCJucG0gcnVuIGxpbnQgJiYgbnBtIHJ1biB0ZXN0LW5vZGVcIixcblx0XHRcInRlc3Qtbm9kZVwiOiBcIm5vZGUgdGVzdC9ub2RlLmpzXCIsXG5cdFx0XCJ0ZXN0LWRpc3RcIjogXCJub2RlIHRlc3Qvbm9kZS1kaXN0LmpzXCIsXG5cdFx0XCJ0ZXN0LWJyb3dzZXJcIjogXCJ3ZWJwYWNrLWRldi1zZXJ2ZXIgLS1jb25maWcgd2VicGFjay5jb25maWcudGVzdC1icm93c2VyLmpzIC0tcHJvZ3Jlc3MgLS1ob3QgLS1vcGVuIC0tcG9ydCAzMDEwXCIsXG5cdFx0XCJiZW5jaFwiOiBcIm5vZGUgdGVzdC9iZW5jaC9ub2RlLmpzXCIsXG5cdFx0XCJiZW5jaC1icm93c2VyXCI6IFwid2VicGFjay1kZXYtc2VydmVyIC0tY29uZmlnIHdlYnBhY2suY29uZmlnLmJlbmNoLWJyb3dzZXIuanMgLS1wcm9ncmVzcyAtLWhvdCAtLW9wZW4gLS1wb3J0IDMwMTFcIixcblx0XHRcInRlc3QtZnA2NFwiOiBcIihjZCB0ZXN0L2ZwNjQtdGVzdCAmJiB3ZWJwYWNrLWRldi1zZXJ2ZXIgLS1jb25maWcgd2VicGFjay5jb25maWcudGVzdC1mcDY0LmpzIC0tcHJvZ3Jlc3MgLS1ob3QgLS1vcGVuKVwiLFxuXHRcdFwidGVzdC1yZW5kZXJpbmdcIjogXCIoY2QgdGVzdC9yZW5kZXJpbmctdGVzdCAmJiB3ZWJwYWNrLWRldi1zZXJ2ZXIgLS1jb25maWcgd2VicGFjay5jb25maWcudGVzdC1yZW5kZXJpbmcuanMgLS1wcm9ncmVzcyAtLWhvdCAtLW9wZW4pXCJcblx0fSxcblx0XCJkZXBlbmRlbmNpZXNcIjoge1xuXHRcdFwiZWFyY3V0XCI6IFwiXjIuMC42XCIsXG5cdFx0XCJmaWxlLWxvYWRlclwiOiBcIl4wLjkuMFwiLFxuXHRcdFwiZ2wtbWF0cml4XCI6IFwiXjIuMy4yXCIsXG5cdFx0XCJsb2Rhc2guZmxhdHRlblwiOiBcIl40LjQuMFwiLFxuXHRcdFwibG9kYXNoLmZsYXR0ZW5kZWVwXCI6IFwiXjQuNC4wXCIsXG5cdFx0XCJ2aWV3cG9ydC1tZXJjYXRvci1wcm9qZWN0XCI6IFwiMy4wLjAtYmV0YTRcIlxuXHR9LFxuXHRcImRldkRlcGVuZGVuY2llc1wiOiB7XG5cdFx0XCJiYWJlbC1jbGlcIjogXCJeNi4yMi4yXCIsXG5cdFx0XCJiYWJlbC1jb3JlXCI6IFwiXjYuMjIuMVwiLFxuXHRcdFwiYmFiZWwtbG9hZGVyXCI6IFwiXjYuMi4xMFwiLFxuXHRcdFwiYmFiZWwtcGx1Z2luLXN0YXRpYy1mc1wiOiBcIl4xLjEuMFwiLFxuXHRcdFwiYmFiZWwtcGx1Z2luLXRyYW5zZm9ybS1lczIwMTUtbW9kdWxlcy1jb21tb25qc1wiOiBcIl42LjIyLjBcIixcblx0XHRcImJhYmVsLXBvbHlmaWxsXCI6IFwiXjYuMjAuMFwiLFxuXHRcdFwiYmFiZWwtcHJlc2V0LWVzMjAxNVwiOiBcIl42LjQuM1wiLFxuXHRcdFwiYmVuY2htYXJrXCI6IFwiXjIuMS4zXCIsXG5cdFx0XCJicmZzLWJhYmVsXCI6IFwiXjEuMC4wXCIsXG5cdFx0XCJidWJsZVwiOiBcIl4wLjE1LjFcIixcblx0XHRcImJ1YmxlLWxvYWRlclwiOiBcIl4wLjQuMFwiLFxuXHRcdFwiZXNsaW50XCI6IFwiXjMuMC4wXCIsXG5cdFx0XCJlc2xpbnQtY29uZmlnLXViZXItZXMyMDE1XCI6IFwiXjMuMC4wXCIsXG5cdFx0XCJlc2xpbnQtY29uZmlnLXViZXItanN4XCI6IFwiXjMuMC4wXCIsXG5cdFx0XCJlc2xpbnQtcGx1Z2luLXJlYWN0XCI6IFwifjYuNy4wXCIsXG5cdFx0XCJmYXVjZXRcIjogXCIwLjAuMVwiLFxuXHRcdFwiZ2xcIjogXCJeNC4wLjNcIixcblx0XHRcImltbXV0YWJsZVwiOiBcIl4zLjguMVwiLFxuXHRcdFwibHVtYS5nbFwiOiBcIjMuMC4wLWFscGhhLjNcIixcblx0XHRcIm1vZHVsZS1hbGlhc1wiOiBcIl4yLjAuMFwiLFxuXHRcdFwicHJlLWNvbW1pdFwiOiBcIl4xLjIuMlwiLFxuXHRcdFwicmF3LWxvYWRlclwiOiBcIl4wLjUuMVwiLFxuXHRcdFwicmVhY3RcIjogXCJeMTUuNC4wXCIsXG5cdFx0XCJyZWFjdC1hZGRvbnMtdGVzdC11dGlsc1wiOiBcIl4xNS40LjJcIixcblx0XHRcInJlYWN0LWRvbVwiOiBcIl4xNS40LjBcIixcblx0XHRcInJlaWZ5XCI6IFwiXjAuNC40XCIsXG5cdFx0XCJ0YXAtYnJvd3Nlci1jb2xvclwiOiBcIl4wLjEuMlwiLFxuXHRcdFwidGFwZVwiOiBcIl40LjUuMVwiLFxuXHRcdFwidGFwZS1jYXRjaFwiOiBcIl4xLjAuNFwiLFxuXHRcdFwidHJhbnNmb3JtLWxvYWRlclwiOiBcIl4wLjIuM1wiLFxuXHRcdFwidWdsaWZ5LWpzXCI6IFwiXjIuNi4xXCIsXG5cdFx0XCJ1cmwtbG9hZGVyXCI6IFwiXjAuNS43XCIsXG5cdFx0XCJ3ZWJwYWNrXCI6IFwiXjIuMi4wXCIsXG5cdFx0XCJ3ZWJwYWNrLWRldi1zZXJ2ZXJcIjogXCJeMi4yLjBcIlxuXHR9LFxuXHRcInBlZXJEZXBlbmRlbmNpZXNcIjoge1xuXHRcdFwibHVtYS5nbFwiOiBcIl4zLjAuMC1hbHBoYS4zXCIsXG5cdFx0XCJyZWFjdFwiOiBcIjAuMTQueCAtIDE1LnhcIixcblx0XHRcInJlYWN0LWRvbVwiOiBcIjAuMTQueCAtIDE1LnhcIlxuXHR9LFxuXHRcImJhYmVsXCI6IHtcblx0XHRcInByZXNldHNcIjogW1xuXHRcdFx0W1xuXHRcdFx0XHRcImVzMjAxNVwiLFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0XCJtb2R1bGVzXCI6IGZhbHNlXG5cdFx0XHRcdH1cblx0XHRcdF1cblx0XHRdXG5cdH1cbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9wYWNrYWdlLmpzb25cbi8vIG1vZHVsZSBpZCA9IDc2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 77 */
/* exports provided: assembleShaders, COORDINATE_SYSTEM, Layer, LayerManager, AttributeManager, ArcLayer, GridLayer, HexagonLayer, IconLayer, LineLayer, ScatterplotLayer, ScreenGridLayer, PathLayer, PolygonLayer, GeoJsonLayer, ScatterplotLayer64, ArcLayer64, LineLayer64, ChoroplethLayer, ChoroplethLayer64, ExtrudedChoroplethLayer64, autobind, DeckGL, default, experimental */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shader_utils__ = __webpack_require__(/*! ./shader-utils */ 4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assembleShaders\", function() { return __WEBPACK_IMPORTED_MODULE_0__shader_utils__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib__ = __webpack_require__(/*! ./lib */ 2);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"COORDINATE_SYSTEM\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Layer\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"LayerManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributeManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__layers_core_arc_layer_arc_layer__ = __webpack_require__(/*! ./layers/core/arc-layer/arc-layer */ 17);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ArcLayer\", function() { return __WEBPACK_IMPORTED_MODULE_2__layers_core_arc_layer_arc_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__layers_core_grid_layer_grid_layer__ = __webpack_require__(/*! ./layers/core/grid-layer/grid-layer */ 32);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GridLayer\", function() { return __WEBPACK_IMPORTED_MODULE_3__layers_core_grid_layer_grid_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__layers_core_hexagon_layer_hexagon_layer__ = __webpack_require__(/*! ./layers/core/hexagon-layer/hexagon-layer */ 33);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"HexagonLayer\", function() { return __WEBPACK_IMPORTED_MODULE_4__layers_core_hexagon_layer_hexagon_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__layers_core_icon_layer_icon_layer__ = __webpack_require__(/*! ./layers/core/icon-layer/icon-layer */ 34);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"IconLayer\", function() { return __WEBPACK_IMPORTED_MODULE_5__layers_core_icon_layer_icon_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__layers_core_line_layer_line_layer__ = __webpack_require__(/*! ./layers/core/line-layer/line-layer */ 18);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"LineLayer\", function() { return __WEBPACK_IMPORTED_MODULE_6__layers_core_line_layer_line_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__layers_core_scatterplot_layer_scatterplot_layer__ = __webpack_require__(/*! ./layers/core/scatterplot-layer/scatterplot-layer */ 21);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ScatterplotLayer\", function() { return __WEBPACK_IMPORTED_MODULE_7__layers_core_scatterplot_layer_scatterplot_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__layers_core_screen_grid_layer_screen_grid_layer__ = __webpack_require__(/*! ./layers/core/screen-grid-layer/screen-grid-layer */ 35);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ScreenGridLayer\", function() { return __WEBPACK_IMPORTED_MODULE_8__layers_core_screen_grid_layer_screen_grid_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__layers_core_path_layer_path_layer__ = __webpack_require__(/*! ./layers/core/path-layer/path-layer */ 19);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"PathLayer\", function() { return __WEBPACK_IMPORTED_MODULE_9__layers_core_path_layer_path_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__layers_core_polygon_layer_polygon_layer__ = __webpack_require__(/*! ./layers/core/polygon-layer/polygon-layer */ 20);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"PolygonLayer\", function() { return __WEBPACK_IMPORTED_MODULE_10__layers_core_polygon_layer_polygon_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__layers_core_geojson_layer_geojson_layer__ = __webpack_require__(/*! ./layers/core/geojson-layer/geojson-layer */ 31);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GeoJsonLayer\", function() { return __WEBPACK_IMPORTED_MODULE_11__layers_core_geojson_layer_geojson_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__layers_fp64_scatterplot_layer__ = __webpack_require__(/*! ./layers/fp64/scatterplot-layer */ 40);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ScatterplotLayer64\", function() { return __WEBPACK_IMPORTED_MODULE_12__layers_fp64_scatterplot_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__layers_fp64_arc_layer__ = __webpack_require__(/*! ./layers/fp64/arc-layer */ 38);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ArcLayer64\", function() { return __WEBPACK_IMPORTED_MODULE_13__layers_fp64_arc_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__layers_fp64_line_layer__ = __webpack_require__(/*! ./layers/fp64/line-layer */ 39);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"LineLayer64\", function() { return __WEBPACK_IMPORTED_MODULE_14__layers_fp64_line_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__layers_deprecated_choropleth_layer__ = __webpack_require__(/*! ./layers/deprecated/choropleth-layer */ 22);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ChoroplethLayer\", function() { return __WEBPACK_IMPORTED_MODULE_15__layers_deprecated_choropleth_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__layers_deprecated_choropleth_layer_64__ = __webpack_require__(/*! ./layers/deprecated/choropleth-layer-64 */ 36);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ChoroplethLayer64\", function() { return __WEBPACK_IMPORTED_MODULE_16__layers_deprecated_choropleth_layer_64__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__layers_deprecated_extruded_choropleth_layer_64__ = __webpack_require__(/*! ./layers/deprecated/extruded-choropleth-layer-64 */ 37);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ExtrudedChoroplethLayer64\", function() { return __WEBPACK_IMPORTED_MODULE_17__layers_deprecated_extruded_choropleth_layer_64__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__react_autobind__ = __webpack_require__(/*! ./react/autobind */ 12);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"autobind\", function() { return __WEBPACK_IMPORTED_MODULE_18__react_autobind__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__react_deckgl__ = __webpack_require__(/*! ./react/deckgl */ 13);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"DeckGL\", function() { return __WEBPACK_IMPORTED_MODULE_19__react_deckgl__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return __WEBPACK_IMPORTED_MODULE_19__react_deckgl__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__experimental_lib__ = __webpack_require__(/*! ./experimental/lib */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__experimental_effects_reflection_effect__ = __webpack_require__(/*! ./experimental/effects/reflection-effect */ 16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__lib_utils_container__ = __webpack_require__(/*! ./lib/utils/container */ 8);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"experimental\", function() { return experimental; });\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\n// Utilities\n\n\n// Lib\n\n\n// Core Layers\n\n\n\n\n\n\n\n\n\n\n\n\n// 64-bit Layers\n\n\n\n\n// Deprecated Layers\n\n\n\n\n// React exports\n\n\n\n\n// Effects\n\n\n\n// Experimental\n\n\nvar experimental = {\n  get: __WEBPACK_IMPORTED_MODULE_22__lib_utils_container__[\"get\"],\n  EffectManager: __WEBPACK_IMPORTED_MODULE_20__experimental_lib__[\"a\" /* EffectManager */],\n  Effect: __WEBPACK_IMPORTED_MODULE_20__experimental_lib__[\"b\" /* Effect */],\n  ReflectionEffect: __WEBPACK_IMPORTED_MODULE_21__experimental_effects_reflection_effect__[\"a\" /* default */]\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/NDU5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuLyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuXG4vLyBVdGlsaXRpZXNcbmV4cG9ydCB7IGFzc2VtYmxlU2hhZGVycyB9IGZyb20gJy4vc2hhZGVyLXV0aWxzJztcblxuLy8gTGliXG5leHBvcnQgeyBDT09SRElOQVRFX1NZU1RFTSwgTGF5ZXIsIExheWVyTWFuYWdlciwgQXR0cmlidXRlTWFuYWdlciB9IGZyb20gJy4vbGliJztcblxuLy8gQ29yZSBMYXllcnNcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQXJjTGF5ZXIgfSBmcm9tICcuL2xheWVycy9jb3JlL2FyYy1sYXllci9hcmMtbGF5ZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHcmlkTGF5ZXIgfSBmcm9tICcuL2xheWVycy9jb3JlL2dyaWQtbGF5ZXIvZ3JpZC1sYXllcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEhleGFnb25MYXllciB9IGZyb20gJy4vbGF5ZXJzL2NvcmUvaGV4YWdvbi1sYXllci9oZXhhZ29uLWxheWVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgSWNvbkxheWVyIH0gZnJvbSAnLi9sYXllcnMvY29yZS9pY29uLWxheWVyL2ljb24tbGF5ZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBMaW5lTGF5ZXIgfSBmcm9tICcuL2xheWVycy9jb3JlL2xpbmUtbGF5ZXIvbGluZS1sYXllcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNjYXR0ZXJwbG90TGF5ZXIgfSBmcm9tICcuL2xheWVycy9jb3JlL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2NyZWVuR3JpZExheWVyIH0gZnJvbSAnLi9sYXllcnMvY29yZS9zY3JlZW4tZ3JpZC1sYXllci9zY3JlZW4tZ3JpZC1sYXllcic7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgUGF0aExheWVyIH0gZnJvbSAnLi9sYXllcnMvY29yZS9wYXRoLWxheWVyL3BhdGgtbGF5ZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQb2x5Z29uTGF5ZXIgfSBmcm9tICcuL2xheWVycy9jb3JlL3BvbHlnb24tbGF5ZXIvcG9seWdvbi1sYXllcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEdlb0pzb25MYXllciB9IGZyb20gJy4vbGF5ZXJzL2NvcmUvZ2VvanNvbi1sYXllci9nZW9qc29uLWxheWVyJztcblxuLy8gNjQtYml0IExheWVyc1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTY2F0dGVycGxvdExheWVyNjQgfSBmcm9tICcuL2xheWVycy9mcDY0L3NjYXR0ZXJwbG90LWxheWVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQXJjTGF5ZXI2NCB9IGZyb20gJy4vbGF5ZXJzL2ZwNjQvYXJjLWxheWVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTGluZUxheWVyNjQgfSBmcm9tICcuL2xheWVycy9mcDY0L2xpbmUtbGF5ZXInO1xuXG4vLyBEZXByZWNhdGVkIExheWVyc1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBDaG9yb3BsZXRoTGF5ZXIgfSBmcm9tICcuL2xheWVycy9kZXByZWNhdGVkL2Nob3JvcGxldGgtbGF5ZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBDaG9yb3BsZXRoTGF5ZXI2NCB9IGZyb20gJy4vbGF5ZXJzL2RlcHJlY2F0ZWQvY2hvcm9wbGV0aC1sYXllci02NCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEV4dHJ1ZGVkQ2hvcm9wbGV0aExheWVyNjQgfSBmcm9tICcuL2xheWVycy9kZXByZWNhdGVkL2V4dHJ1ZGVkLWNob3JvcGxldGgtbGF5ZXItNjQnO1xuXG4vLyBSZWFjdCBleHBvcnRzXG5leHBvcnQgeyBkZWZhdWx0IGFzIGF1dG9iaW5kIH0gZnJvbSAnLi9yZWFjdC9hdXRvYmluZCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIERlY2tHTCB9IGZyb20gJy4vcmVhY3QvZGVja2dsJztcbmV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL3JlYWN0L2RlY2tnbCc7XG5cbi8vIEVmZmVjdHNcbmltcG9ydCB7IEVmZmVjdE1hbmFnZXIsIEVmZmVjdCB9IGZyb20gJy4vZXhwZXJpbWVudGFsL2xpYic7XG5pbXBvcnQgeyBkZWZhdWx0IGFzIFJlZmxlY3Rpb25FZmZlY3QgfSBmcm9tICcuL2V4cGVyaW1lbnRhbC9lZmZlY3RzL3JlZmxlY3Rpb24tZWZmZWN0JztcblxuLy8gRXhwZXJpbWVudGFsXG5pbXBvcnQgeyBnZXQgfSBmcm9tICcuL2xpYi91dGlscy9jb250YWluZXInO1xuXG5leHBvcnQgdmFyIGV4cGVyaW1lbnRhbCA9IHtcbiAgZ2V0OiBnZXQsXG4gIEVmZmVjdE1hbmFnZXI6IEVmZmVjdE1hbmFnZXIsXG4gIEVmZmVjdDogRWZmZWN0LFxuICBSZWZsZWN0aW9uRWZmZWN0OiBSZWZsZWN0aW9uRWZmZWN0XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSA3N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);
});